name: Check Haskell formatting

on:
  merge_group:
  pull_request:

# When pushing branches (and/or updating PRs), we do want to cancel previous
# build runs. We assume they are stale now; and do not want to spend CI time and
# resources on continuing to continue those runs. This is what the concurrency.group
# value lets us express. When using merge queues, we now have to consider
# - runs triggers by commits per pull-request
#   we want to cancel any previous run. So they should all get the same group (per PR)
# - runs refs/heads/gh-readonly-queue/<target branch name> (they should all get their
#   unique git ref, we don't want to cancel any of the ones in the queue)
# - if it's neither, we fall back to the run_id (this is a unique number for each
#   workflow run; it does not change if you "rerun" a job)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.type }}-${{ startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && github.ref || github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  check-formatting:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
            substituters = https://cache.iog.io/ https://cache.nixos.org/

      - uses: rrbutani/use-nix-shell-action@v1

      - name: Run formatting over all Haskell files (always succeeds)
        run: |
          git add .
          git stash

          for x in $(git ls-tree --full-tree --name-only -r HEAD); do
            if [ "${x##*.}" == "hs" ]; then
              "$(git rev-parse --show-toplevel)/scripts/devshell/prettify" "$x"
            fi
          done

          git --no-pager diff

      - name: Run formatting over all modified files
        run: |
          git add .
          git stash
          git fetch origin ${{ github.base_ref }} --unshallow
          for x in $(git diff --name-only --diff-filter=ACMR origin/${{ github.base_ref }}..HEAD); do
            if [ "${x##*.}" == "hs" ]; then
              "$(git rev-parse --show-toplevel)/scripts/devshell/prettify" "$x"
            fi
          done

          git --no-pager diff --exit-code


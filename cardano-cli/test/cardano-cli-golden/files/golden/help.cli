Usage: cardano-cli 
                     ( address
                     | key
                     | node
                     | query
                     | legacy
                     | byron
                     | shelley
                     | allegra
                     | mary
                     | alonzo
                     | babbage
                     | conway
                     | latest
                     | hash
                     | ping
                     | debug commands
                     | version
                     | compatible
                     )

Usage: cardano-cli address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli address key-gen [--key-output-format STRING]
                                     [ --normal-key
                                     | --extended-key
                                     | --byron-key
                                     ]
                                     --verification-key-file FILEPATH
                                     --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli address key-hash 
                                      ( --payment-verification-key STRING
                                      | --payment-verification-key-file FILEPATH
                                      )
                                      [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli address build 
                                   ( --payment-verification-key STRING
                                   | --payment-verification-key-file FILEPATH
                                   | --payment-script-file FILEPATH
                                   )
                                   [ --stake-verification-key STRING
                                   | --stake-verification-key-file FILEPATH
                                   | --stake-key-hash HASH
                                   | --stake-script-file FILEPATH
                                   | --stake-address ADDRESS
                                   ]
                                   (--mainnet | --testnet-magic NATURAL)
                                   [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli key 
                         ( verification-key
                         | non-extended-key
                         | convert-byron-key
                         | convert-byron-genesis-vkey
                         | convert-itn-key
                         | convert-itn-extended-key
                         | convert-itn-bip32-key
                         | convert-cardano-address-key
                         )

  Key utility commands.

Usage: cardano-cli key verification-key --signing-key-file FILEPATH
                                          --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli key non-extended-key --extended-verification-key-file FILEPATH
                                          --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli key convert-byron-key [--password TEXT]
                                           ( --byron-payment-key-type
                                           | --legacy-byron-payment-key-type
                                           | --byron-genesis-key-type
                                           | --legacy-byron-genesis-key-type
                                           | --byron-genesis-delegate-key-type
                                           | --legacy-byron-genesis-delegate-key-type
                                           )
                                           ( --byron-signing-key-file FILEPATH
                                           | --byron-verification-key-file FILEPATH
                                           )
                                           --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                    --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli key convert-itn-key 
                                         ( --itn-signing-key-file FILEPATH
                                         | --itn-verification-key-file FILEPATH
                                         )
                                         --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                  --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                               --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli key convert-cardano-address-key 
                                                     ( --cc-cold-key
                                                     | --cc-hot-key
                                                     | --drep-key
                                                     | --shelley-payment-key
                                                     | --shelley-stake-key
                                                     | --icarus-payment-key
                                                     | --byron-payment-key
                                                     )
                                                     --signing-key-file FILEPATH
                                                     --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli node 
                          ( key-gen
                          | key-gen-KES
                          | key-gen-VRF
                          | key-hash-VRF
                          | new-counter
                          | issue-op-cert
                          )

  Node operation commands.

Usage: cardano-cli node key-gen [--key-output-format STRING]
                                  --cold-verification-key-file FILEPATH
                                  --cold-signing-key-file FILEPATH
                                  --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli node key-gen-KES [--key-output-format STRING]
                                      --verification-key-file FILEPATH
                                      --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli node key-gen-VRF [--key-output-format STRING]
                                      --verification-key-file FILEPATH
                                      --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli node key-hash-VRF 
                                       ( --verification-key STRING
                                       | --verification-key-file FILEPATH
                                       )
                                       [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli node new-counter 
                                      ( --stake-pool-verification-key STRING
                                      | --genesis-delegate-verification-key STRING
                                      | --cold-verification-key-file FILEPATH
                                      )
                                      --counter-value INT
                                      --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli node issue-op-cert 
                                        ( --kes-verification-key STRING
                                        | --kes-verification-key-file FILEPATH
                                        )
                                        --cold-signing-key-file FILEPATH
                                        --operational-certificate-issue-counter-file FILEPATH
                                        --kes-period NATURAL
                                        --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli query 
                           ( protocol-parameters
                           | tip
                           | stake-pools
                           | stake-distribution
                           | stake-address-info
                           | utxo
                           | ledger-state
                           | protocol-state
                           | stake-snapshot
                           | leadership-schedule
                           | kes-period-info
                           | pool-state
                           | tx-mempool
                           | slot-number
                           )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli query protocol-parameters --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli query tip --socket-path SOCKET_PATH
                               [--cardano-mode [--epoch-slots SLOTS]]
                               (--mainnet | --testnet-magic NATURAL)
                               [--volatile-tip | --immutable-tip]
                               [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli query stake-pools --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--volatile-tip | --immutable-tip]
                                       [--output-json | --output-text]
                                       [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli query stake-distribution --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              [--output-json | --output-text]
                                              [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli query stake-address-info --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              --address ADDRESS
                                              [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli query utxo --socket-path SOCKET_PATH
                                [--cardano-mode [--epoch-slots SLOTS]]
                                (--mainnet | --testnet-magic NATURAL)
                                [--volatile-tip | --immutable-tip]
                                ( --whole-utxo
                                | (--address ADDRESS)
                                | (--tx-in TX-IN)
                                )
                                [--output-json | --output-text]
                                [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli query ledger-state --socket-path SOCKET_PATH
                                        [--cardano-mode [--epoch-slots SLOTS]]
                                        (--mainnet | --testnet-magic NATURAL)
                                        [--volatile-tip | --immutable-tip]
                                        [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli query protocol-state --socket-path SOCKET_PATH
                                          [--cardano-mode [--epoch-slots SLOTS]]
                                          (--mainnet | --testnet-magic NATURAL)
                                          [--volatile-tip | --immutable-tip]
                                          [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli query stake-snapshot --socket-path SOCKET_PATH
                                          [--cardano-mode [--epoch-slots SLOTS]]
                                          (--mainnet | --testnet-magic NATURAL)
                                          [--volatile-tip | --immutable-tip]
                                          ( --all-stake-pools
                                          | (--stake-pool-id STAKE_POOL_ID)
                                          )
                                          [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli query pool-params --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--volatile-tip | --immutable-tip]
                                       ( --all-stake-pools
                                       | (--stake-pool-id STAKE_POOL_ID)
                                       )
                                       [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli query leadership-schedule --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [ --volatile-tip
                                               | --immutable-tip
                                               ]
                                               --genesis FILEPATH
                                               ( --stake-pool-verification-key STRING
                                               | --cold-verification-key-file FILEPATH
                                               | --stake-pool-id STAKE_POOL_ID
                                               )
                                               --vrf-signing-key-file FILEPATH
                                               (--current | --next)
                                               [--output-json | --output-text]
                                               [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli query kes-period-info --socket-path SOCKET_PATH
                                           [--cardano-mode
                                             [--epoch-slots SLOTS]]
                                           (--mainnet | --testnet-magic NATURAL)
                                           [--volatile-tip | --immutable-tip]
                                           --op-cert-file FILEPATH
                                           [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli query pool-state --socket-path SOCKET_PATH
                                      [--cardano-mode [--epoch-slots SLOTS]]
                                      (--mainnet | --testnet-magic NATURAL)
                                      [--volatile-tip | --immutable-tip]
                                      ( --all-stake-pools
                                      | (--stake-pool-id STAKE_POOL_ID)
                                      )
                                      [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli query tx-mempool --socket-path SOCKET_PATH
                                      [--cardano-mode [--epoch-slots SLOTS]]
                                      (--mainnet | --testnet-magic NATURAL)
                                      (info | next-tx | tx-exists)
                                      [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli query slot-number --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--volatile-tip | --immutable-tip]
                                       TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli legacy Legacy commands

  Legacy commands

Usage: cardano-cli legacy governance 
                                       ( create-mir-certificate
                                       | create-genesis-key-delegation-certificate
                                       | create-update-proposal
                                       )

  Governance commands

Usage: cardano-cli legacy governance create-mir-certificate 
                                                              ( [ --shelley-era
                                                                | --allegra-era
                                                                | --mary-era
                                                                | --alonzo-era
                                                                | --babbage-era
                                                                ]
                                                                ( --reserves
                                                                | --treasury
                                                                )
                                                                (--stake-address ADDRESS)
                                                                (--reward LOVELACE)
                                                                --out-file FILEPATH
                                                              | stake-addresses
                                                              | transfer-to-treasury
                                                              | transfer-to-rewards
                                                              )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli legacy governance create-mir-certificate stake-addresses 
                                                                              [ --shelley-era
                                                                              | --allegra-era
                                                                              | --mary-era
                                                                              | --alonzo-era
                                                                              | --babbage-era
                                                                              ]
                                                                              ( --reserves
                                                                              | --treasury
                                                                              )
                                                                              (--stake-address ADDRESS)
                                                                              (--reward LOVELACE)
                                                                              --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli legacy governance create-mir-certificate transfer-to-treasury 
                                                                                   [ --shelley-era
                                                                                   | --allegra-era
                                                                                   | --mary-era
                                                                                   | --alonzo-era
                                                                                   | --babbage-era
                                                                                   ]
                                                                                   --transfer LOVELACE
                                                                                   --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli legacy governance create-mir-certificate transfer-to-rewards 
                                                                                  [ --shelley-era
                                                                                  | --allegra-era
                                                                                  | --mary-era
                                                                                  | --alonzo-era
                                                                                  | --babbage-era
                                                                                  ]
                                                                                  --transfer LOVELACE
                                                                                  --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli legacy governance create-genesis-key-delegation-certificate 
                                                                                 [ --shelley-era
                                                                                 | --allegra-era
                                                                                 | --mary-era
                                                                                 | --alonzo-era
                                                                                 | --babbage-era
                                                                                 ]
                                                                                 ( --genesis-verification-key STRING
                                                                                 | --genesis-verification-key-file FILEPATH
                                                                                 | --genesis-verification-key-hash STRING
                                                                                 )
                                                                                 ( --genesis-delegate-verification-key STRING
                                                                                 | --genesis-delegate-verification-key-file FILEPATH
                                                                                 | --genesis-delegate-verification-key-hash STRING
                                                                                 )
                                                                                 ( --vrf-verification-key STRING
                                                                                 | --vrf-verification-key-file FILEPATH
                                                                                 | --vrf-verification-key-hash STRING
                                                                                 )
                                                                                 --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli legacy governance create-update-proposal --out-file FILEPATH
                                                              --epoch NATURAL
                                                              (--genesis-verification-key-file FILEPATH)
                                                              [--protocol-major-version MAJOR
                                                                --protocol-minor-version MINOR]
                                                              [--decentralization-parameter RATIONAL]
                                                              [ --extra-entropy HEX
                                                              | --reset-extra-entropy
                                                              ]
                                                              [--max-block-header-size WORD16]
                                                              [--max-block-body-size WORD32]
                                                              [--max-tx-size WORD32]
                                                              [--min-fee-constant LOVELACE]
                                                              [--min-fee-linear LOVELACE]
                                                              [--min-utxo-value NATURAL]
                                                              [--key-reg-deposit-amt NATURAL]
                                                              [--pool-reg-deposit NATURAL]
                                                              [--min-pool-cost NATURAL]
                                                              [--pool-retirement-epoch-interval WORD32]
                                                              [--number-of-pools NATURAL]
                                                              [--pool-influence RATIONAL]
                                                              [--monetary-expansion RATIONAL]
                                                              [--treasury-expansion RATIONAL]
                                                              [--price-execution-steps RATIONAL
                                                                --price-execution-memory RATIONAL]
                                                              [--max-tx-execution-units (INT, INT)]
                                                              [--max-block-execution-units (INT, INT)]
                                                              [--max-value-size INT]
                                                              [--collateral-percent INT]
                                                              [--max-collateral-inputs INT]
                                                              [--utxo-cost-per-byte LOVELACE]
                                                              [--cost-model-file FILE]

  Create an update proposal

Usage: cardano-cli legacy genesis 
                                    ( key-gen-genesis
                                    | key-gen-delegate
                                    | key-gen-utxo
                                    | key-hash
                                    | get-ver-key
                                    | initial-addr
                                    | initial-txin
                                    | create-cardano
                                    | create
                                    | create-staked
                                    | hash
                                    )

  Genesis block commands

Usage: cardano-cli legacy genesis key-gen-genesis --verification-key-file FILEPATH
                                                    --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli legacy genesis key-gen-delegate --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH
                                                     --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli legacy genesis key-gen-utxo --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli legacy genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli legacy genesis get-ver-key --verification-key-file FILEPATH
                                                --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli legacy genesis initial-addr --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli legacy genesis initial-txin --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli legacy genesis create-cardano 
                                                   [ --shelley-era
                                                   | --allegra-era
                                                   | --mary-era
                                                   | --alonzo-era
                                                   | --babbage-era
                                                   | --conway-era
                                                   ]
                                                   --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--security-param INT]
                                                   [--slot-length INT]
                                                   [--slot-coefficient RATIONAL]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --byron-template FILEPATH
                                                   --shelley-template FILEPATH
                                                   --alonzo-template FILEPATH
                                                   --conway-template FILEPATH
                                                   [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli legacy genesis create 
                                           [ --shelley-era
                                           | --allegra-era
                                           | --mary-era
                                           | --alonzo-era
                                           | --babbage-era
                                           | --conway-era
                                           ]
                                           [--key-output-format STRING]
                                           --genesis-dir DIR
                                           [--gen-genesis-keys INT]
                                           [--gen-utxo-keys INT]
                                           [--start-time UTC-TIME]
                                           [--supply LOVELACE]
                                           (--mainnet | --testnet-magic NATURAL)

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli legacy genesis create-staked 
                                                  [ --shelley-era
                                                  | --allegra-era
                                                  | --mary-era
                                                  | --alonzo-era
                                                  | --babbage-era
                                                  | --conway-era
                                                  ]
                                                  [--key-output-format STRING]
                                                  --genesis-dir DIR
                                                  [--gen-genesis-keys INT]
                                                  [--gen-utxo-keys INT]
                                                  [--gen-pools INT]
                                                  [--gen-stake-delegs INT]
                                                  [--start-time UTC-TIME]
                                                  [--supply LOVELACE]
                                                  [--supply-delegated LOVELACE]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--bulk-pool-cred-files INT]
                                                  [--bulk-pools-per-file INT]
                                                  [--num-stuffed-utxo INT]
                                                  [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli legacy genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli byron 
                           ( key
                           | transaction
                           | genesis
                           | governance
                           | miscellaneous
                           )

  Byron specific commands

Usage: cardano-cli byron key ( keygen
                             | to-verification
                             | signing-key-public
                             | signing-key-address
                             | migrate-delegate-key-from
                             )

  Byron key utility commands

Usage: cardano-cli byron key keygen --secret FILEPATH

  Generate a signing key.

Usage: cardano-cli byron key to-verification 
                                               [ --byron-legacy-formats
                                               | --byron-formats
                                               ]
                                               --secret FILEPATH
                                               --to FILEPATH

  Extract a verification key in its base64 form.

Usage: cardano-cli byron key signing-key-public 
                                                  [ --byron-legacy-formats
                                                  | --byron-formats
                                                  ]
                                                  --secret FILEPATH

  Pretty-print a signing key's verification key (not a secret).

Usage: cardano-cli byron key signing-key-address 
                                                   [ --byron-legacy-formats
                                                   | --byron-formats
                                                   ]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --secret FILEPATH

  Print address of a signing key.

Usage: cardano-cli byron key migrate-delegate-key-from --from FILEPATH
                                                         --to FILEPATH

  Migrate a delegate key from an older version.

Usage: cardano-cli byron transaction ( submit-tx
                                     | issue-genesis-utxo-expenditure
                                     | issue-utxo-expenditure
                                     | txid
                                     )

  Byron transaction commands

Usage: cardano-cli byron transaction submit-tx --socket-path SOCKET_PATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 --tx FILEPATH

  Submit a raw, signed transaction, in its on-wire representation.

Usage: cardano-cli byron transaction issue-genesis-utxo-expenditure --genesis-json FILEPATH
                                                                      ( --mainnet
                                                                      | --testnet-magic NATURAL
                                                                      )
                                                                      [ --byron-legacy-formats
                                                                      | --byron-formats
                                                                      ]
                                                                      --tx FILEPATH
                                                                      --wallet-key FILEPATH
                                                                      --rich-addr-from ADDR
                                                                      (--txout '("ADDR", LOVELACE)')

  Write a file with a signed transaction, spending genesis UTxO.

Usage: cardano-cli byron transaction issue-utxo-expenditure 
                                                              ( --mainnet
                                                              | --testnet-magic NATURAL
                                                              )
                                                              [ --byron-legacy-formats
                                                              | --byron-formats
                                                              ]
                                                              --tx FILEPATH
                                                              --wallet-key FILEPATH
                                                              (--txin (TXID,INDEX))
                                                              (--txout '("ADDR", LOVELACE)')

  Write a file with a signed transaction, spending normal UTxO.

Usage: cardano-cli byron transaction txid --tx FILEPATH

  Print the txid of a raw, signed transaction.

Usage: cardano-cli byron genesis (genesis | print-genesis-hash)

  Byron genesis block commands

Usage: cardano-cli byron genesis genesis --genesis-output-dir FILEPATH
                                           --start-time POSIXSECONDS
                                           --protocol-parameters-file FILEPATH
                                           --k INT
                                           --protocol-magic INT
                                           --n-poor-addresses INT
                                           --n-delegate-addresses INT
                                           --total-balance INT
                                           --delegate-share DOUBLE
                                           --avvm-entry-count INT
                                           --avvm-entry-balance INT
                                           [--avvm-balance-factor DOUBLE]
                                           [--secret-seed INT]

  Create genesis.

Usage: cardano-cli byron genesis print-genesis-hash --genesis-json FILEPATH

  Compute hash of a genesis file.

Usage: cardano-cli byron governance COMMAND

  Byron governance commands

Usage: cardano-cli byron governance submit-proposal-vote 
                                                           --socket-path SOCKET_PATH
                                                           ( --mainnet
                                                           | --testnet-magic NATURAL
                                                           )
                                                           --filepath FILEPATH

  Submit a proposal vote.

Usage: cardano-cli byron governance submit-update-proposal 
                                                             --socket-path SOCKET_PATH
                                                             ( --mainnet
                                                             | --testnet-magic NATURAL
                                                             )
                                                             --filepath FILEPATH

  Submit an update proposal.

Usage: cardano-cli byron governance create-proposal-vote 
                                                           ( --mainnet
                                                           | --testnet-magic NATURAL
                                                           )
                                                           --signing-key FILEPATH
                                                           --proposal-filepath FILEPATH
                                                           ( --vote-yes
                                                           | --vote-no
                                                           )
                                                           --output-filepath FILEPATH

  Create an update proposal vote.

Usage: cardano-cli byron governance create-update-proposal 
                                                             ( --mainnet
                                                             | --testnet-magic NATURAL
                                                             )
                                                             --signing-key FILEPATH
                                                             --protocol-version-major WORD16
                                                             --protocol-version-minor WORD16
                                                             --protocol-version-alt WORD8
                                                             --application-name STRING
                                                             --software-version-num WORD32
                                                             --system-tag STRING
                                                             --installer-hash HASH
                                                             --filepath FILEPATH
                                                             [--script-version WORD16]
                                                             [--slot-duration NATURAL]
                                                             [--max-block-size NATURAL]
                                                             [--max-header-size NATURAL]
                                                             [--max-tx-size NATURAL]
                                                             [--max-proposal-size NATURAL]
                                                             [--max-mpc-thd DOUBLE]
                                                             [--heavy-del-thd DOUBLE]
                                                             [--update-vote-thd DOUBLE]
                                                             [--update-proposal-thd DOUBLE]
                                                             [--time-to-live WORD64]
                                                             [--softfork-init-thd DOUBLE
                                                               --softfork-min-thd DOUBLE
                                                               --softfork-thd-dec DOUBLE]
                                                             [--tx-fee-a-constant INT
                                                               --tx-fee-b-constant DOUBLE]
                                                             [--unlock-stake-epoch WORD64]

  Create an update proposal.

Usage: cardano-cli byron miscellaneous (validate-cbor | pretty-print-cbor)

  Byron miscellaneous commands

Usage: cardano-cli byron miscellaneous validate-cbor 
                                                       [ --byron-block INT
                                                       | --byron-delegation-certificate
                                                       | --byron-tx
                                                       | --byron-update-proposal
                                                       | --byron-vote
                                                       ]
                                                       --filepath FILEPATH

  Validate a CBOR blockchain object.

Usage: cardano-cli byron miscellaneous pretty-print-cbor --filepath FILEPATH

  Pretty print a CBOR file.

Usage: cardano-cli byron submit-proposal-vote --socket-path SOCKET_PATH
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                --filepath FILEPATH

  Submit a proposal vote.

Usage: cardano-cli byron submit-update-proposal --socket-path SOCKET_PATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  --filepath FILEPATH

  Submit an update proposal.

Usage: cardano-cli byron create-proposal-vote 
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                --signing-key FILEPATH
                                                --proposal-filepath FILEPATH
                                                (--vote-yes | --vote-no)
                                                --output-filepath FILEPATH

  Create an update proposal vote.

Usage: cardano-cli byron create-update-proposal 
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  --signing-key FILEPATH
                                                  --protocol-version-major WORD16
                                                  --protocol-version-minor WORD16
                                                  --protocol-version-alt WORD8
                                                  --application-name STRING
                                                  --software-version-num WORD32
                                                  --system-tag STRING
                                                  --installer-hash HASH
                                                  --filepath FILEPATH
                                                  [--script-version WORD16]
                                                  [--slot-duration NATURAL]
                                                  [--max-block-size NATURAL]
                                                  [--max-header-size NATURAL]
                                                  [--max-tx-size NATURAL]
                                                  [--max-proposal-size NATURAL]
                                                  [--max-mpc-thd DOUBLE]
                                                  [--heavy-del-thd DOUBLE]
                                                  [--update-vote-thd DOUBLE]
                                                  [--update-proposal-thd DOUBLE]
                                                  [--time-to-live WORD64]
                                                  [--softfork-init-thd DOUBLE
                                                    --softfork-min-thd DOUBLE
                                                    --softfork-thd-dec DOUBLE]
                                                  [--tx-fee-a-constant INT
                                                    --tx-fee-b-constant DOUBLE]
                                                  [--unlock-stake-epoch WORD64]

  Create an update proposal.

Usage: cardano-cli shelley 
                             ( address
                             | key
                             | genesis
                             | governance
                             | node
                             | query
                             | stake-address
                             | stake-pool
                             | text-view
                             | transaction
                             )

  Shelley era commands - DEPRECATED - will be removed in the future

Usage: cardano-cli shelley address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli shelley address key-gen [--key-output-format STRING]
                                             [ --normal-key
                                             | --extended-key
                                             | --byron-key
                                             ]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli shelley address key-hash 
                                              ( --payment-verification-key STRING
                                              | --payment-verification-key-file FILEPATH
                                              )
                                              [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli shelley address build 
                                           ( --payment-verification-key STRING
                                           | --payment-verification-key-file FILEPATH
                                           | --payment-script-file FILEPATH
                                           )
                                           [ --stake-verification-key STRING
                                           | --stake-verification-key-file FILEPATH
                                           | --stake-key-hash HASH
                                           | --stake-script-file FILEPATH
                                           | --stake-address ADDRESS
                                           ]
                                           (--mainnet | --testnet-magic NATURAL)
                                           [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli shelley address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli shelley key 
                                 ( verification-key
                                 | non-extended-key
                                 | convert-byron-key
                                 | convert-byron-genesis-vkey
                                 | convert-itn-key
                                 | convert-itn-extended-key
                                 | convert-itn-bip32-key
                                 | convert-cardano-address-key
                                 )

  Key utility commands.

Usage: cardano-cli shelley key verification-key --signing-key-file FILEPATH
                                                  --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli shelley key non-extended-key --extended-verification-key-file FILEPATH
                                                  --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli shelley key convert-byron-key [--password TEXT]
                                                   ( --byron-payment-key-type
                                                   | --legacy-byron-payment-key-type
                                                   | --byron-genesis-key-type
                                                   | --legacy-byron-genesis-key-type
                                                   | --byron-genesis-delegate-key-type
                                                   | --legacy-byron-genesis-delegate-key-type
                                                   )
                                                   ( --byron-signing-key-file FILEPATH
                                                   | --byron-verification-key-file FILEPATH
                                                   )
                                                   --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli shelley key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                            --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli shelley key convert-itn-key 
                                                 ( --itn-signing-key-file FILEPATH
                                                 | --itn-verification-key-file FILEPATH
                                                 )
                                                 --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli shelley key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                          --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli shelley key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                       --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli shelley key convert-cardano-address-key 
                                                             ( --cc-cold-key
                                                             | --cc-hot-key
                                                             | --drep-key
                                                             | --shelley-payment-key
                                                             | --shelley-stake-key
                                                             | --icarus-payment-key
                                                             | --byron-payment-key
                                                             )
                                                             --signing-key-file FILEPATH
                                                             --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli shelley genesis 
                                     ( key-gen-genesis
                                     | key-gen-delegate
                                     | key-gen-utxo
                                     | key-hash
                                     | get-ver-key
                                     | initial-addr
                                     | initial-txin
                                     | create-cardano
                                     | create
                                     | create-staked
                                     | hash
                                     )

  Genesis block commands.

Usage: cardano-cli shelley genesis key-gen-genesis --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli shelley genesis key-gen-delegate --verification-key-file FILEPATH
                                                      --signing-key-file FILEPATH
                                                      --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli shelley genesis key-gen-utxo --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli shelley genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli shelley genesis get-ver-key --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli shelley genesis initial-addr --verification-key-file FILEPATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli shelley genesis initial-txin --verification-key-file FILEPATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli shelley genesis create-cardano --genesis-dir DIR
                                                    [--gen-genesis-keys INT]
                                                    [--gen-utxo-keys INT]
                                                    [--start-time UTC-TIME]
                                                    [--supply LOVELACE]
                                                    [--security-param INT]
                                                    [--slot-length INT]
                                                    [--slot-coefficient RATIONAL]
                                                    ( --mainnet
                                                    | --testnet-magic NATURAL
                                                    )
                                                    --byron-template FILEPATH
                                                    --shelley-template FILEPATH
                                                    --alonzo-template FILEPATH
                                                    --conway-template FILEPATH
                                                    [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli shelley genesis create [--key-output-format STRING]
                                            --genesis-dir DIR
                                            [--gen-genesis-keys INT]
                                            [--gen-utxo-keys INT]
                                            [--start-time UTC-TIME]
                                            [--supply LOVELACE]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli shelley genesis create-staked [--key-output-format STRING]
                                                   --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--gen-pools INT]
                                                   [--gen-stake-delegs INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--supply-delegated LOVELACE]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   [--bulk-pool-cred-files INT]
                                                   [--bulk-pools-per-file INT]
                                                   [--num-stuffed-utxo INT]
                                                   [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli shelley genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli shelley governance 
                                        ( create-mir-certificate
                                        | create-genesis-key-delegation-certificate
                                        | action
                                        )

  Governance commands.

Usage: cardano-cli shelley governance create-mir-certificate 
                                                               ( ( --reserves
                                                                 | --treasury
                                                                 )
                                                                 (--stake-address ADDRESS)
                                                                 (--reward LOVELACE)
                                                                 --out-file FILEPATH
                                                               | stake-addresses
                                                               | transfer-to-treasury
                                                               | transfer-to-rewards
                                                               )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli shelley governance create-mir-certificate stake-addresses 
                                                                               ( --reserves
                                                                               | --treasury
                                                                               )
                                                                               (--stake-address ADDRESS)
                                                                               (--reward LOVELACE)
                                                                               --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli shelley governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                    --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli shelley governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                   --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli shelley governance create-genesis-key-delegation-certificate 
                                                                                  ( --genesis-verification-key STRING
                                                                                  | --genesis-verification-key-file FILEPATH
                                                                                  | --genesis-verification-key-hash STRING
                                                                                  )
                                                                                  ( --genesis-delegate-verification-key STRING
                                                                                  | --genesis-delegate-verification-key-file FILEPATH
                                                                                  | --genesis-delegate-verification-key-hash STRING
                                                                                  )
                                                                                  ( --vrf-verification-key STRING
                                                                                  | --vrf-verification-key-file FILEPATH
                                                                                  | --vrf-verification-key-hash STRING
                                                                                  )
                                                                                  --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli shelley governance action create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli shelley governance action create-protocol-parameters-update --epoch NATURAL
                                                                                 (--genesis-verification-key-file FILEPATH)
                                                                                 [--min-fee-linear LOVELACE]
                                                                                 [--min-fee-constant LOVELACE]
                                                                                 [--max-block-body-size WORD32]
                                                                                 [--max-tx-size WORD32]
                                                                                 [--max-block-header-size WORD16]
                                                                                 [--key-reg-deposit-amt NATURAL]
                                                                                 [--pool-reg-deposit NATURAL]
                                                                                 [--pool-retirement-epoch-interval WORD32]
                                                                                 [--number-of-pools NATURAL]
                                                                                 [--pool-influence RATIONAL]
                                                                                 [--treasury-expansion RATIONAL]
                                                                                 [--monetary-expansion RATIONAL]
                                                                                 [--min-pool-cost NATURAL]
                                                                                 [--min-utxo-value NATURAL]
                                                                                 [--protocol-major-version MAJOR
                                                                                   --protocol-minor-version MINOR]
                                                                                 [ --extra-entropy HEX
                                                                                 | --reset-extra-entropy
                                                                                 ]
                                                                                 [--decentralization-parameter RATIONAL]
                                                                                 --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli shelley node 
                                  ( key-gen
                                  | key-gen-KES
                                  | key-gen-VRF
                                  | key-hash-VRF
                                  | new-counter
                                  | issue-op-cert
                                  )

  Node operation commands.

Usage: cardano-cli shelley node key-gen [--key-output-format STRING]
                                          --cold-verification-key-file FILEPATH
                                          --cold-signing-key-file FILEPATH
                                          --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli shelley node key-gen-KES [--key-output-format STRING]
                                              --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli shelley node key-gen-VRF [--key-output-format STRING]
                                              --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli shelley node key-hash-VRF 
                                               ( --verification-key STRING
                                               | --verification-key-file FILEPATH
                                               )
                                               [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli shelley node new-counter 
                                              ( --stake-pool-verification-key STRING
                                              | --genesis-delegate-verification-key STRING
                                              | --cold-verification-key-file FILEPATH
                                              )
                                              --counter-value INT
                                              --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli shelley node issue-op-cert 
                                                ( --kes-verification-key STRING
                                                | --kes-verification-key-file FILEPATH
                                                )
                                                --cold-signing-key-file FILEPATH
                                                --operational-certificate-issue-counter-file FILEPATH
                                                --kes-period NATURAL
                                                --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli shelley query 
                                   ( protocol-parameters
                                   | tip
                                   | stake-pools
                                   | stake-distribution
                                   | stake-address-info
                                   | utxo
                                   | ledger-state
                                   | protocol-state
                                   | stake-snapshot
                                   | leadership-schedule
                                   | kes-period-info
                                   | pool-state
                                   | tx-mempool
                                   | slot-number
                                   | ref-script-size
                                   )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli shelley query protocol-parameters --socket-path SOCKET_PATH
                                                       [--cardano-mode
                                                         [--epoch-slots SLOTS]]
                                                       ( --mainnet
                                                       | --testnet-magic NATURAL
                                                       )
                                                       [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli shelley query tip --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli shelley query stake-pools --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--output-json | --output-text]
                                               [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli shelley query stake-distribution --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [ --output-json
                                                      | --output-text
                                                      ]
                                                      [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli shelley query stake-address-info --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      --address ADDRESS
                                                      [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli shelley query utxo --socket-path SOCKET_PATH
                                        [--cardano-mode [--epoch-slots SLOTS]]
                                        (--mainnet | --testnet-magic NATURAL)
                                        ( --whole-utxo
                                        | (--address ADDRESS)
                                        | (--tx-in TX-IN)
                                        )
                                        [--output-json | --output-text]
                                        [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli shelley query ledger-state --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli shelley query protocol-state --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli shelley query stake-snapshot --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  ( --all-stake-pools
                                                  | (--stake-pool-id STAKE_POOL_ID)
                                                  )
                                                  [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli shelley query pool-params --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               ( --all-stake-pools
                                               | (--stake-pool-id STAKE_POOL_ID)
                                               )
                                               [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli shelley query leadership-schedule --socket-path SOCKET_PATH
                                                       [--cardano-mode
                                                         [--epoch-slots SLOTS]]
                                                       ( --mainnet
                                                       | --testnet-magic NATURAL
                                                       )
                                                       --genesis FILEPATH
                                                       ( --stake-pool-verification-key STRING
                                                       | --cold-verification-key-file FILEPATH
                                                       | --stake-pool-id STAKE_POOL_ID
                                                       )
                                                       --vrf-signing-key-file FILEPATH
                                                       (--current | --next)
                                                       [ --output-json
                                                       | --output-text
                                                       ]
                                                       [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli shelley query kes-period-info --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --op-cert-file FILEPATH
                                                   [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli shelley query pool-state --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              ( --all-stake-pools
                                              | (--stake-pool-id STAKE_POOL_ID)
                                              )
                                              [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli shelley query tx-mempool --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              (info | next-tx | tx-exists)
                                              [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli shelley query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli shelley query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli shelley query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli shelley query slot-number --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli shelley query ref-script-size --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   (--tx-in TX-IN)
                                                   [ --output-json
                                                   | --output-text
                                                   ]
                                                   [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli shelley stake-address 
                                           ( key-gen
                                           | key-hash
                                           | build
                                           | registration-certificate
                                           | deregistration-certificate
                                           | stake-delegation-certificate
                                           )

  Stake address commands.

Usage: cardano-cli shelley stake-address key-gen [--key-output-format STRING]
                                                   --verification-key-file FILEPATH
                                                   --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli shelley stake-address key-hash 
                                                    ( --stake-verification-key STRING
                                                    | --stake-verification-key-file FILEPATH
                                                    )
                                                    [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli shelley stake-address build 
                                                 ( --stake-verification-key STRING
                                                 | --stake-verification-key-file FILEPATH
                                                 | --stake-key-hash HASH
                                                 | --stake-script-file FILEPATH
                                                 )
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli shelley stake-address registration-certificate 
                                                                    ( --stake-verification-key STRING
                                                                    | --stake-verification-key-file FILEPATH
                                                                    | --stake-key-hash HASH
                                                                    | --stake-script-file FILEPATH
                                                                    | --stake-address ADDRESS
                                                                    )
                                                                    --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli shelley stake-address deregistration-certificate 
                                                                      ( --stake-verification-key STRING
                                                                      | --stake-verification-key-file FILEPATH
                                                                      | --stake-key-hash HASH
                                                                      | --stake-script-file FILEPATH
                                                                      | --stake-address ADDRESS
                                                                      )
                                                                      --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli shelley stake-address stake-delegation-certificate 
                                                                        ( --stake-verification-key STRING
                                                                        | --stake-verification-key-file FILEPATH
                                                                        | --stake-key-hash HASH
                                                                        | --stake-script-file FILEPATH
                                                                        | --stake-address ADDRESS
                                                                        )
                                                                        ( --stake-pool-verification-key STRING
                                                                        | --cold-verification-key-file FILEPATH
                                                                        | --stake-pool-id STAKE_POOL_ID
                                                                        )
                                                                        --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli shelley stake-pool 
                                        ( registration-certificate
                                        | deregistration-certificate
                                        | id
                                        | metadata-hash
                                        )

  Stake pool commands.

Usage: cardano-cli shelley stake-pool registration-certificate 
                                                                 ( --stake-pool-verification-key STRING
                                                                 | --cold-verification-key-file FILEPATH
                                                                 )
                                                                 ( --vrf-verification-key STRING
                                                                 | --vrf-verification-key-file FILEPATH
                                                                 )
                                                                 --pool-pledge LOVELACE
                                                                 --pool-cost LOVELACE
                                                                 --pool-margin RATIONAL
                                                                 ( --pool-reward-account-verification-key STRING
                                                                 | --pool-reward-account-verification-key-file FILEPATH
                                                                 )
                                                                 ( --pool-owner-verification-key STRING
                                                                 | --pool-owner-stake-verification-key-file FILEPATH
                                                                 )
                                                                 [ [--pool-relay-ipv4 STRING]
                                                                   [--pool-relay-ipv6 STRING]
                                                                   --pool-relay-port INT
                                                                 | --single-host-pool-relay STRING
                                                                   [--pool-relay-port INT]
                                                                 | --multi-host-pool-relay STRING
                                                                 ]
                                                                 [--metadata-url URL
                                                                   --metadata-hash HASH
                                                                   [--check-metadata-hash]]
                                                                 ( --mainnet
                                                                 | --testnet-magic NATURAL
                                                                 )
                                                                 --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli shelley stake-pool deregistration-certificate 
                                                                   ( --stake-pool-verification-key STRING
                                                                   | --cold-verification-key-file FILEPATH
                                                                   )
                                                                   --epoch NATURAL
                                                                   --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli shelley stake-pool id 
                                           ( --stake-pool-verification-key STRING
                                           | --cold-verification-key-file FILEPATH
                                           )
                                           [--output-format STRING]
                                           [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli shelley stake-pool metadata-hash 
                                                      ( --pool-metadata-file FILEPATH
                                                      | --pool-metadata-url TEXT
                                                      )
                                                      [ --expected-hash HASH
                                                      | --out-file FILEPATH
                                                      ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli shelley text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli shelley text-view decode-cbor --in-file FILEPATH
                                                   [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli shelley transaction 
                                         ( build-raw
                                         | sign
                                         | witness
                                         | assemble
                                         | submit
                                         | policyid
                                         | calculate-min-fee
                                         | calculate-min-required-utxo
                                         | hash-script-data
                                         | txid
                                         )

  Transaction commands.

Usage: cardano-cli shelley transaction build-raw 
                                                   [ --script-valid
                                                   | --script-invalid
                                                   ]
                                                   (--tx-in TX-IN
                                                     [ --spending-tx-in-reference TX-IN
                                                       ( --spending-plutus-script-v2
                                                       | --spending-plutus-script-v3
                                                       )
                                                       ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                       | --spending-reference-tx-in-datum-file JSON_FILE
                                                       | --spending-reference-tx-in-datum-value JSON_VALUE
                                                       | --spending-reference-tx-in-inline-datum-present
                                                       )
                                                       ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                       | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --spending-reference-tx-in-execution-units (INT, INT)
                                                     | --simple-script-tx-in-reference TX-IN
                                                     | --tx-in-script-file FILEPATH
                                                       [
                                                         ( --tx-in-datum-cbor-file CBOR_FILE
                                                         | --tx-in-datum-file JSON_FILE
                                                         | --tx-in-datum-value JSON_VALUE
                                                         | --tx-in-inline-datum-present
                                                         )
                                                         ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                         | --tx-in-redeemer-file JSON_FILE
                                                         | --tx-in-redeemer-value JSON_VALUE
                                                         )
                                                         --tx-in-execution-units (INT, INT)]
                                                     ])
                                                   [--read-only-tx-in-reference TX-IN]
                                                   [--tx-in-collateral TX-IN]
                                                   [--tx-out-return-collateral ADDRESS VALUE]
                                                   [--tx-total-collateral INTEGER]
                                                   [ --required-signer FILEPATH
                                                   | --required-signer-hash HASH
                                                   ]
                                                   [--tx-out ADDRESS VALUE
                                                     [ --tx-out-datum-hash HASH
                                                     | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                     | --tx-out-datum-hash-file JSON_FILE
                                                     | --tx-out-datum-hash-value JSON_VALUE
                                                     | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                     | --tx-out-datum-embed-file JSON_FILE
                                                     | --tx-out-datum-embed-value JSON_VALUE
                                                     | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                     | --tx-out-inline-datum-file JSON_FILE
                                                     | --tx-out-inline-datum-value JSON_VALUE
                                                     ]
                                                     [--tx-out-reference-script-file FILEPATH]]
                                                   [--mint VALUE
                                                     ( --mint-script-file FILEPATH
                                                       [
                                                         ( --mint-redeemer-cbor-file CBOR_FILE
                                                         | --mint-redeemer-file JSON_FILE
                                                         | --mint-redeemer-value JSON_VALUE
                                                         )
                                                         --mint-execution-units (INT, INT)]
                                                     | --simple-minting-script-tx-in-reference TX-IN
                                                       --policy-id HASH
                                                     | --mint-tx-in-reference TX-IN
                                                       ( --mint-plutus-script-v2
                                                       | --mint-plutus-script-v3
                                                       )
                                                       ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                       | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --mint-reference-tx-in-execution-units (INT, INT)
                                                       --policy-id HASH
                                                     )]
                                                   [--invalid-before SLOT]
                                                   [--invalid-hereafter SLOT]
                                                   --fee LOVELACE
                                                   [--certificate-file FILEPATH
                                                     [ --certificate-script-file FILEPATH
                                                       [
                                                         ( --certificate-redeemer-cbor-file CBOR_FILE
                                                         | --certificate-redeemer-file JSON_FILE
                                                         | --certificate-redeemer-value JSON_VALUE
                                                         )
                                                         --certificate-execution-units (INT, INT)]
                                                     | --certificate-tx-in-reference TX-IN
                                                       ( --certificate-plutus-script-v2
                                                       | --certificate-plutus-script-v3
                                                       )
                                                       ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                       | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --certificate-reference-tx-in-execution-units (INT, INT)
                                                     ]]
                                                   [--withdrawal WITHDRAWAL
                                                     [ --withdrawal-script-file FILEPATH
                                                       [
                                                         ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                         | --withdrawal-redeemer-file JSON_FILE
                                                         | --withdrawal-redeemer-value JSON_VALUE
                                                         )
                                                         --withdrawal-execution-units (INT, INT)]
                                                     | --withdrawal-tx-in-reference TX-IN
                                                       ( --withdrawal-plutus-script-v2
                                                       | --withdrawal-plutus-script-v3
                                                       )
                                                       ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                       | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                     ]]
                                                   [ --json-metadata-no-schema
                                                   | --json-metadata-detailed-schema
                                                   ]
                                                   [--auxiliary-script-file FILEPATH]
                                                   [ --metadata-json-file FILEPATH
                                                   | --metadata-cbor-file FILEPATH
                                                   ]
                                                   [--protocol-params-file FILEPATH]
                                                   [--update-proposal-file FILEPATH]
                                                   --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli shelley transaction sign 
                                              ( --tx-body-file FILEPATH
                                              | --tx-file FILEPATH
                                              )
                                              [--signing-key-file FILEPATH
                                                [--address STRING]]
                                              [ --mainnet
                                              | --testnet-magic NATURAL
                                              ]
                                              --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli shelley transaction witness --tx-body-file FILEPATH
                                                 --signing-key-file FILEPATH
                                                 [--address STRING]
                                                 [ --mainnet
                                                 | --testnet-magic NATURAL
                                                 ]
                                                 --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli shelley transaction assemble --tx-body-file FILEPATH
                                                  [--witness-file FILEPATH]
                                                  --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli shelley transaction sign-witness --tx-body-file FILEPATH
                                                      [--witness-file FILEPATH]
                                                      --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli shelley transaction submit --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli shelley transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli shelley transaction calculate-min-fee --tx-body-file FILEPATH
                                                           --protocol-params-file FILEPATH
                                                           --witness-count NATURAL
                                                           [--byron-witness-count NATURAL]
                                                           [--reference-script-size NATURAL]
                                                           [ --output-json
                                                           | --output-text
                                                           ]
                                                           [--out-file FILEPATH]
                                                           [ --mainnet
                                                           | --testnet-magic NATURAL
                                                           ]
                                                           [--tx-in-count NATURAL]
                                                           [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli shelley transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                     --tx-out ADDRESS VALUE
                                                                     [ --tx-out-datum-hash HASH
                                                                     | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                     | --tx-out-datum-hash-file JSON_FILE
                                                                     | --tx-out-datum-hash-value JSON_VALUE
                                                                     | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                     | --tx-out-datum-embed-file JSON_FILE
                                                                     | --tx-out-datum-embed-value JSON_VALUE
                                                                     | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                     | --tx-out-inline-datum-file JSON_FILE
                                                                     | --tx-out-inline-datum-value JSON_VALUE
                                                                     ]
                                                                     [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli shelley transaction calculate-min-value --protocol-params-file FILEPATH
                                                             --tx-out ADDRESS VALUE
                                                             [ --tx-out-datum-hash HASH
                                                             | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                             | --tx-out-datum-hash-file JSON_FILE
                                                             | --tx-out-datum-hash-value JSON_VALUE
                                                             | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                             | --tx-out-datum-embed-file JSON_FILE
                                                             | --tx-out-datum-embed-value JSON_VALUE
                                                             | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                             | --tx-out-inline-datum-file JSON_FILE
                                                             | --tx-out-inline-datum-value JSON_VALUE
                                                             ]
                                                             [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli shelley transaction hash-script-data 
                                                          ( --script-data-cbor-file CBOR_FILE
                                                          | --script-data-file JSON_FILE
                                                          | --script-data-value JSON_VALUE
                                                          )

  Calculate the hash of script data.

Usage: cardano-cli shelley transaction txid 
                                              ( --tx-body-file FILEPATH
                                              | --tx-file FILEPATH
                                              )

  Print a transaction identifier.

Usage: cardano-cli allegra 
                             ( address
                             | key
                             | genesis
                             | governance
                             | node
                             | query
                             | stake-address
                             | stake-pool
                             | text-view
                             | transaction
                             )

  Allegra era commands - DEPRECATED - will be removed in the future

Usage: cardano-cli allegra address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli allegra address key-gen [--key-output-format STRING]
                                             [ --normal-key
                                             | --extended-key
                                             | --byron-key
                                             ]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli allegra address key-hash 
                                              ( --payment-verification-key STRING
                                              | --payment-verification-key-file FILEPATH
                                              )
                                              [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli allegra address build 
                                           ( --payment-verification-key STRING
                                           | --payment-verification-key-file FILEPATH
                                           | --payment-script-file FILEPATH
                                           )
                                           [ --stake-verification-key STRING
                                           | --stake-verification-key-file FILEPATH
                                           | --stake-key-hash HASH
                                           | --stake-script-file FILEPATH
                                           | --stake-address ADDRESS
                                           ]
                                           (--mainnet | --testnet-magic NATURAL)
                                           [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli allegra address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli allegra key 
                                 ( verification-key
                                 | non-extended-key
                                 | convert-byron-key
                                 | convert-byron-genesis-vkey
                                 | convert-itn-key
                                 | convert-itn-extended-key
                                 | convert-itn-bip32-key
                                 | convert-cardano-address-key
                                 )

  Key utility commands.

Usage: cardano-cli allegra key verification-key --signing-key-file FILEPATH
                                                  --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli allegra key non-extended-key --extended-verification-key-file FILEPATH
                                                  --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli allegra key convert-byron-key [--password TEXT]
                                                   ( --byron-payment-key-type
                                                   | --legacy-byron-payment-key-type
                                                   | --byron-genesis-key-type
                                                   | --legacy-byron-genesis-key-type
                                                   | --byron-genesis-delegate-key-type
                                                   | --legacy-byron-genesis-delegate-key-type
                                                   )
                                                   ( --byron-signing-key-file FILEPATH
                                                   | --byron-verification-key-file FILEPATH
                                                   )
                                                   --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli allegra key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                            --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli allegra key convert-itn-key 
                                                 ( --itn-signing-key-file FILEPATH
                                                 | --itn-verification-key-file FILEPATH
                                                 )
                                                 --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli allegra key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                          --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli allegra key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                       --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli allegra key convert-cardano-address-key 
                                                             ( --cc-cold-key
                                                             | --cc-hot-key
                                                             | --drep-key
                                                             | --shelley-payment-key
                                                             | --shelley-stake-key
                                                             | --icarus-payment-key
                                                             | --byron-payment-key
                                                             )
                                                             --signing-key-file FILEPATH
                                                             --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli allegra genesis 
                                     ( key-gen-genesis
                                     | key-gen-delegate
                                     | key-gen-utxo
                                     | key-hash
                                     | get-ver-key
                                     | initial-addr
                                     | initial-txin
                                     | create-cardano
                                     | create
                                     | create-staked
                                     | hash
                                     )

  Genesis block commands.

Usage: cardano-cli allegra genesis key-gen-genesis --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli allegra genesis key-gen-delegate --verification-key-file FILEPATH
                                                      --signing-key-file FILEPATH
                                                      --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli allegra genesis key-gen-utxo --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli allegra genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli allegra genesis get-ver-key --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli allegra genesis initial-addr --verification-key-file FILEPATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli allegra genesis initial-txin --verification-key-file FILEPATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli allegra genesis create-cardano --genesis-dir DIR
                                                    [--gen-genesis-keys INT]
                                                    [--gen-utxo-keys INT]
                                                    [--start-time UTC-TIME]
                                                    [--supply LOVELACE]
                                                    [--security-param INT]
                                                    [--slot-length INT]
                                                    [--slot-coefficient RATIONAL]
                                                    ( --mainnet
                                                    | --testnet-magic NATURAL
                                                    )
                                                    --byron-template FILEPATH
                                                    --shelley-template FILEPATH
                                                    --alonzo-template FILEPATH
                                                    --conway-template FILEPATH
                                                    [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli allegra genesis create [--key-output-format STRING]
                                            --genesis-dir DIR
                                            [--gen-genesis-keys INT]
                                            [--gen-utxo-keys INT]
                                            [--start-time UTC-TIME]
                                            [--supply LOVELACE]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli allegra genesis create-staked [--key-output-format STRING]
                                                   --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--gen-pools INT]
                                                   [--gen-stake-delegs INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--supply-delegated LOVELACE]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   [--bulk-pool-cred-files INT]
                                                   [--bulk-pools-per-file INT]
                                                   [--num-stuffed-utxo INT]
                                                   [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli allegra genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli allegra governance 
                                        ( create-mir-certificate
                                        | create-genesis-key-delegation-certificate
                                        | action
                                        )

  Governance commands.

Usage: cardano-cli allegra governance create-mir-certificate 
                                                               ( ( --reserves
                                                                 | --treasury
                                                                 )
                                                                 (--stake-address ADDRESS)
                                                                 (--reward LOVELACE)
                                                                 --out-file FILEPATH
                                                               | stake-addresses
                                                               | transfer-to-treasury
                                                               | transfer-to-rewards
                                                               )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli allegra governance create-mir-certificate stake-addresses 
                                                                               ( --reserves
                                                                               | --treasury
                                                                               )
                                                                               (--stake-address ADDRESS)
                                                                               (--reward LOVELACE)
                                                                               --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli allegra governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                    --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli allegra governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                   --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli allegra governance create-genesis-key-delegation-certificate 
                                                                                  ( --genesis-verification-key STRING
                                                                                  | --genesis-verification-key-file FILEPATH
                                                                                  | --genesis-verification-key-hash STRING
                                                                                  )
                                                                                  ( --genesis-delegate-verification-key STRING
                                                                                  | --genesis-delegate-verification-key-file FILEPATH
                                                                                  | --genesis-delegate-verification-key-hash STRING
                                                                                  )
                                                                                  ( --vrf-verification-key STRING
                                                                                  | --vrf-verification-key-file FILEPATH
                                                                                  | --vrf-verification-key-hash STRING
                                                                                  )
                                                                                  --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli allegra governance action create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli allegra governance action create-protocol-parameters-update --epoch NATURAL
                                                                                 (--genesis-verification-key-file FILEPATH)
                                                                                 [--min-fee-linear LOVELACE]
                                                                                 [--min-fee-constant LOVELACE]
                                                                                 [--max-block-body-size WORD32]
                                                                                 [--max-tx-size WORD32]
                                                                                 [--max-block-header-size WORD16]
                                                                                 [--key-reg-deposit-amt NATURAL]
                                                                                 [--pool-reg-deposit NATURAL]
                                                                                 [--pool-retirement-epoch-interval WORD32]
                                                                                 [--number-of-pools NATURAL]
                                                                                 [--pool-influence RATIONAL]
                                                                                 [--treasury-expansion RATIONAL]
                                                                                 [--monetary-expansion RATIONAL]
                                                                                 [--min-pool-cost NATURAL]
                                                                                 [--min-utxo-value NATURAL]
                                                                                 [ --extra-entropy HEX
                                                                                 | --reset-extra-entropy
                                                                                 ]
                                                                                 [--decentralization-parameter RATIONAL]
                                                                                 [--protocol-major-version MAJOR
                                                                                   --protocol-minor-version MINOR]
                                                                                 --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli allegra node 
                                  ( key-gen
                                  | key-gen-KES
                                  | key-gen-VRF
                                  | key-hash-VRF
                                  | new-counter
                                  | issue-op-cert
                                  )

  Node operation commands.

Usage: cardano-cli allegra node key-gen [--key-output-format STRING]
                                          --cold-verification-key-file FILEPATH
                                          --cold-signing-key-file FILEPATH
                                          --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli allegra node key-gen-KES [--key-output-format STRING]
                                              --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli allegra node key-gen-VRF [--key-output-format STRING]
                                              --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli allegra node key-hash-VRF 
                                               ( --verification-key STRING
                                               | --verification-key-file FILEPATH
                                               )
                                               [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli allegra node new-counter 
                                              ( --stake-pool-verification-key STRING
                                              | --genesis-delegate-verification-key STRING
                                              | --cold-verification-key-file FILEPATH
                                              )
                                              --counter-value INT
                                              --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli allegra node issue-op-cert 
                                                ( --kes-verification-key STRING
                                                | --kes-verification-key-file FILEPATH
                                                )
                                                --cold-signing-key-file FILEPATH
                                                --operational-certificate-issue-counter-file FILEPATH
                                                --kes-period NATURAL
                                                --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli allegra query 
                                   ( protocol-parameters
                                   | tip
                                   | stake-pools
                                   | stake-distribution
                                   | stake-address-info
                                   | utxo
                                   | ledger-state
                                   | protocol-state
                                   | stake-snapshot
                                   | leadership-schedule
                                   | kes-period-info
                                   | pool-state
                                   | tx-mempool
                                   | slot-number
                                   | ref-script-size
                                   )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli allegra query protocol-parameters --socket-path SOCKET_PATH
                                                       [--cardano-mode
                                                         [--epoch-slots SLOTS]]
                                                       ( --mainnet
                                                       | --testnet-magic NATURAL
                                                       )
                                                       [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli allegra query tip --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli allegra query stake-pools --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--output-json | --output-text]
                                               [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli allegra query stake-distribution --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [ --output-json
                                                      | --output-text
                                                      ]
                                                      [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli allegra query stake-address-info --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      --address ADDRESS
                                                      [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli allegra query utxo --socket-path SOCKET_PATH
                                        [--cardano-mode [--epoch-slots SLOTS]]
                                        (--mainnet | --testnet-magic NATURAL)
                                        ( --whole-utxo
                                        | (--address ADDRESS)
                                        | (--tx-in TX-IN)
                                        )
                                        [--output-json | --output-text]
                                        [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli allegra query ledger-state --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli allegra query protocol-state --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli allegra query stake-snapshot --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  ( --all-stake-pools
                                                  | (--stake-pool-id STAKE_POOL_ID)
                                                  )
                                                  [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli allegra query pool-params --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               ( --all-stake-pools
                                               | (--stake-pool-id STAKE_POOL_ID)
                                               )
                                               [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli allegra query leadership-schedule --socket-path SOCKET_PATH
                                                       [--cardano-mode
                                                         [--epoch-slots SLOTS]]
                                                       ( --mainnet
                                                       | --testnet-magic NATURAL
                                                       )
                                                       --genesis FILEPATH
                                                       ( --stake-pool-verification-key STRING
                                                       | --cold-verification-key-file FILEPATH
                                                       | --stake-pool-id STAKE_POOL_ID
                                                       )
                                                       --vrf-signing-key-file FILEPATH
                                                       (--current | --next)
                                                       [ --output-json
                                                       | --output-text
                                                       ]
                                                       [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli allegra query kes-period-info --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --op-cert-file FILEPATH
                                                   [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli allegra query pool-state --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              ( --all-stake-pools
                                              | (--stake-pool-id STAKE_POOL_ID)
                                              )
                                              [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli allegra query tx-mempool --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              (info | next-tx | tx-exists)
                                              [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli allegra query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli allegra query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli allegra query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli allegra query slot-number --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli allegra query ref-script-size --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   (--tx-in TX-IN)
                                                   [ --output-json
                                                   | --output-text
                                                   ]
                                                   [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli allegra stake-address 
                                           ( key-gen
                                           | key-hash
                                           | build
                                           | registration-certificate
                                           | deregistration-certificate
                                           | stake-delegation-certificate
                                           )

  Stake address commands.

Usage: cardano-cli allegra stake-address key-gen [--key-output-format STRING]
                                                   --verification-key-file FILEPATH
                                                   --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli allegra stake-address key-hash 
                                                    ( --stake-verification-key STRING
                                                    | --stake-verification-key-file FILEPATH
                                                    )
                                                    [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli allegra stake-address build 
                                                 ( --stake-verification-key STRING
                                                 | --stake-verification-key-file FILEPATH
                                                 | --stake-key-hash HASH
                                                 | --stake-script-file FILEPATH
                                                 )
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli allegra stake-address registration-certificate 
                                                                    ( --stake-verification-key STRING
                                                                    | --stake-verification-key-file FILEPATH
                                                                    | --stake-key-hash HASH
                                                                    | --stake-script-file FILEPATH
                                                                    | --stake-address ADDRESS
                                                                    )
                                                                    --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli allegra stake-address deregistration-certificate 
                                                                      ( --stake-verification-key STRING
                                                                      | --stake-verification-key-file FILEPATH
                                                                      | --stake-key-hash HASH
                                                                      | --stake-script-file FILEPATH
                                                                      | --stake-address ADDRESS
                                                                      )
                                                                      --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli allegra stake-address stake-delegation-certificate 
                                                                        ( --stake-verification-key STRING
                                                                        | --stake-verification-key-file FILEPATH
                                                                        | --stake-key-hash HASH
                                                                        | --stake-script-file FILEPATH
                                                                        | --stake-address ADDRESS
                                                                        )
                                                                        ( --stake-pool-verification-key STRING
                                                                        | --cold-verification-key-file FILEPATH
                                                                        | --stake-pool-id STAKE_POOL_ID
                                                                        )
                                                                        --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli allegra stake-pool 
                                        ( registration-certificate
                                        | deregistration-certificate
                                        | id
                                        | metadata-hash
                                        )

  Stake pool commands.

Usage: cardano-cli allegra stake-pool registration-certificate 
                                                                 ( --stake-pool-verification-key STRING
                                                                 | --cold-verification-key-file FILEPATH
                                                                 )
                                                                 ( --vrf-verification-key STRING
                                                                 | --vrf-verification-key-file FILEPATH
                                                                 )
                                                                 --pool-pledge LOVELACE
                                                                 --pool-cost LOVELACE
                                                                 --pool-margin RATIONAL
                                                                 ( --pool-reward-account-verification-key STRING
                                                                 | --pool-reward-account-verification-key-file FILEPATH
                                                                 )
                                                                 ( --pool-owner-verification-key STRING
                                                                 | --pool-owner-stake-verification-key-file FILEPATH
                                                                 )
                                                                 [ [--pool-relay-ipv4 STRING]
                                                                   [--pool-relay-ipv6 STRING]
                                                                   --pool-relay-port INT
                                                                 | --single-host-pool-relay STRING
                                                                   [--pool-relay-port INT]
                                                                 | --multi-host-pool-relay STRING
                                                                 ]
                                                                 [--metadata-url URL
                                                                   --metadata-hash HASH
                                                                   [--check-metadata-hash]]
                                                                 ( --mainnet
                                                                 | --testnet-magic NATURAL
                                                                 )
                                                                 --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli allegra stake-pool deregistration-certificate 
                                                                   ( --stake-pool-verification-key STRING
                                                                   | --cold-verification-key-file FILEPATH
                                                                   )
                                                                   --epoch NATURAL
                                                                   --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli allegra stake-pool id 
                                           ( --stake-pool-verification-key STRING
                                           | --cold-verification-key-file FILEPATH
                                           )
                                           [--output-format STRING]
                                           [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli allegra stake-pool metadata-hash 
                                                      ( --pool-metadata-file FILEPATH
                                                      | --pool-metadata-url TEXT
                                                      )
                                                      [ --expected-hash HASH
                                                      | --out-file FILEPATH
                                                      ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli allegra text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli allegra text-view decode-cbor --in-file FILEPATH
                                                   [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli allegra transaction 
                                         ( build-raw
                                         | sign
                                         | witness
                                         | assemble
                                         | submit
                                         | policyid
                                         | calculate-min-fee
                                         | calculate-min-required-utxo
                                         | hash-script-data
                                         | txid
                                         )

  Transaction commands.

Usage: cardano-cli allegra transaction build-raw 
                                                   [ --script-valid
                                                   | --script-invalid
                                                   ]
                                                   (--tx-in TX-IN
                                                     [ --spending-tx-in-reference TX-IN
                                                       ( --spending-plutus-script-v2
                                                       | --spending-plutus-script-v3
                                                       )
                                                       ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                       | --spending-reference-tx-in-datum-file JSON_FILE
                                                       | --spending-reference-tx-in-datum-value JSON_VALUE
                                                       | --spending-reference-tx-in-inline-datum-present
                                                       )
                                                       ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                       | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --spending-reference-tx-in-execution-units (INT, INT)
                                                     | --simple-script-tx-in-reference TX-IN
                                                     | --tx-in-script-file FILEPATH
                                                       [
                                                         ( --tx-in-datum-cbor-file CBOR_FILE
                                                         | --tx-in-datum-file JSON_FILE
                                                         | --tx-in-datum-value JSON_VALUE
                                                         | --tx-in-inline-datum-present
                                                         )
                                                         ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                         | --tx-in-redeemer-file JSON_FILE
                                                         | --tx-in-redeemer-value JSON_VALUE
                                                         )
                                                         --tx-in-execution-units (INT, INT)]
                                                     ])
                                                   [--read-only-tx-in-reference TX-IN]
                                                   [--tx-in-collateral TX-IN]
                                                   [--tx-out-return-collateral ADDRESS VALUE]
                                                   [--tx-total-collateral INTEGER]
                                                   [ --required-signer FILEPATH
                                                   | --required-signer-hash HASH
                                                   ]
                                                   [--tx-out ADDRESS VALUE
                                                     [ --tx-out-datum-hash HASH
                                                     | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                     | --tx-out-datum-hash-file JSON_FILE
                                                     | --tx-out-datum-hash-value JSON_VALUE
                                                     | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                     | --tx-out-datum-embed-file JSON_FILE
                                                     | --tx-out-datum-embed-value JSON_VALUE
                                                     | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                     | --tx-out-inline-datum-file JSON_FILE
                                                     | --tx-out-inline-datum-value JSON_VALUE
                                                     ]
                                                     [--tx-out-reference-script-file FILEPATH]]
                                                   [--mint VALUE
                                                     ( --mint-script-file FILEPATH
                                                       [
                                                         ( --mint-redeemer-cbor-file CBOR_FILE
                                                         | --mint-redeemer-file JSON_FILE
                                                         | --mint-redeemer-value JSON_VALUE
                                                         )
                                                         --mint-execution-units (INT, INT)]
                                                     | --simple-minting-script-tx-in-reference TX-IN
                                                       --policy-id HASH
                                                     | --mint-tx-in-reference TX-IN
                                                       ( --mint-plutus-script-v2
                                                       | --mint-plutus-script-v3
                                                       )
                                                       ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                       | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --mint-reference-tx-in-execution-units (INT, INT)
                                                       --policy-id HASH
                                                     )]
                                                   [--invalid-before SLOT]
                                                   [--invalid-hereafter SLOT]
                                                   --fee LOVELACE
                                                   [--certificate-file FILEPATH
                                                     [ --certificate-script-file FILEPATH
                                                       [
                                                         ( --certificate-redeemer-cbor-file CBOR_FILE
                                                         | --certificate-redeemer-file JSON_FILE
                                                         | --certificate-redeemer-value JSON_VALUE
                                                         )
                                                         --certificate-execution-units (INT, INT)]
                                                     | --certificate-tx-in-reference TX-IN
                                                       ( --certificate-plutus-script-v2
                                                       | --certificate-plutus-script-v3
                                                       )
                                                       ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                       | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --certificate-reference-tx-in-execution-units (INT, INT)
                                                     ]]
                                                   [--withdrawal WITHDRAWAL
                                                     [ --withdrawal-script-file FILEPATH
                                                       [
                                                         ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                         | --withdrawal-redeemer-file JSON_FILE
                                                         | --withdrawal-redeemer-value JSON_VALUE
                                                         )
                                                         --withdrawal-execution-units (INT, INT)]
                                                     | --withdrawal-tx-in-reference TX-IN
                                                       ( --withdrawal-plutus-script-v2
                                                       | --withdrawal-plutus-script-v3
                                                       )
                                                       ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                       | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                     ]]
                                                   [ --json-metadata-no-schema
                                                   | --json-metadata-detailed-schema
                                                   ]
                                                   [--auxiliary-script-file FILEPATH]
                                                   [ --metadata-json-file FILEPATH
                                                   | --metadata-cbor-file FILEPATH
                                                   ]
                                                   [--protocol-params-file FILEPATH]
                                                   [--update-proposal-file FILEPATH]
                                                   --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli allegra transaction sign 
                                              ( --tx-body-file FILEPATH
                                              | --tx-file FILEPATH
                                              )
                                              [--signing-key-file FILEPATH
                                                [--address STRING]]
                                              [ --mainnet
                                              | --testnet-magic NATURAL
                                              ]
                                              --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli allegra transaction witness --tx-body-file FILEPATH
                                                 --signing-key-file FILEPATH
                                                 [--address STRING]
                                                 [ --mainnet
                                                 | --testnet-magic NATURAL
                                                 ]
                                                 --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli allegra transaction assemble --tx-body-file FILEPATH
                                                  [--witness-file FILEPATH]
                                                  --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli allegra transaction sign-witness --tx-body-file FILEPATH
                                                      [--witness-file FILEPATH]
                                                      --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli allegra transaction submit --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli allegra transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli allegra transaction calculate-min-fee --tx-body-file FILEPATH
                                                           --protocol-params-file FILEPATH
                                                           --witness-count NATURAL
                                                           [--byron-witness-count NATURAL]
                                                           [--reference-script-size NATURAL]
                                                           [ --output-json
                                                           | --output-text
                                                           ]
                                                           [--out-file FILEPATH]
                                                           [ --mainnet
                                                           | --testnet-magic NATURAL
                                                           ]
                                                           [--tx-in-count NATURAL]
                                                           [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli allegra transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                     --tx-out ADDRESS VALUE
                                                                     [ --tx-out-datum-hash HASH
                                                                     | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                     | --tx-out-datum-hash-file JSON_FILE
                                                                     | --tx-out-datum-hash-value JSON_VALUE
                                                                     | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                     | --tx-out-datum-embed-file JSON_FILE
                                                                     | --tx-out-datum-embed-value JSON_VALUE
                                                                     | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                     | --tx-out-inline-datum-file JSON_FILE
                                                                     | --tx-out-inline-datum-value JSON_VALUE
                                                                     ]
                                                                     [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli allegra transaction calculate-min-value --protocol-params-file FILEPATH
                                                             --tx-out ADDRESS VALUE
                                                             [ --tx-out-datum-hash HASH
                                                             | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                             | --tx-out-datum-hash-file JSON_FILE
                                                             | --tx-out-datum-hash-value JSON_VALUE
                                                             | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                             | --tx-out-datum-embed-file JSON_FILE
                                                             | --tx-out-datum-embed-value JSON_VALUE
                                                             | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                             | --tx-out-inline-datum-file JSON_FILE
                                                             | --tx-out-inline-datum-value JSON_VALUE
                                                             ]
                                                             [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli allegra transaction hash-script-data 
                                                          ( --script-data-cbor-file CBOR_FILE
                                                          | --script-data-file JSON_FILE
                                                          | --script-data-value JSON_VALUE
                                                          )

  Calculate the hash of script data.

Usage: cardano-cli allegra transaction txid 
                                              ( --tx-body-file FILEPATH
                                              | --tx-file FILEPATH
                                              )

  Print a transaction identifier.

Usage: cardano-cli mary 
                          ( address
                          | key
                          | genesis
                          | governance
                          | node
                          | query
                          | stake-address
                          | stake-pool
                          | text-view
                          | transaction
                          )

  Mary era commands - DEPRECATED - will be removed in the future

Usage: cardano-cli mary address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli mary address key-gen [--key-output-format STRING]
                                          [ --normal-key
                                          | --extended-key
                                          | --byron-key
                                          ]
                                          --verification-key-file FILEPATH
                                          --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli mary address key-hash 
                                           ( --payment-verification-key STRING
                                           | --payment-verification-key-file FILEPATH
                                           )
                                           [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli mary address build 
                                        ( --payment-verification-key STRING
                                        | --payment-verification-key-file FILEPATH
                                        | --payment-script-file FILEPATH
                                        )
                                        [ --stake-verification-key STRING
                                        | --stake-verification-key-file FILEPATH
                                        | --stake-key-hash HASH
                                        | --stake-script-file FILEPATH
                                        | --stake-address ADDRESS
                                        ]
                                        (--mainnet | --testnet-magic NATURAL)
                                        [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli mary address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli mary key 
                              ( verification-key
                              | non-extended-key
                              | convert-byron-key
                              | convert-byron-genesis-vkey
                              | convert-itn-key
                              | convert-itn-extended-key
                              | convert-itn-bip32-key
                              | convert-cardano-address-key
                              )

  Key utility commands.

Usage: cardano-cli mary key verification-key --signing-key-file FILEPATH
                                               --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli mary key non-extended-key --extended-verification-key-file FILEPATH
                                               --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli mary key convert-byron-key [--password TEXT]
                                                ( --byron-payment-key-type
                                                | --legacy-byron-payment-key-type
                                                | --byron-genesis-key-type
                                                | --legacy-byron-genesis-key-type
                                                | --byron-genesis-delegate-key-type
                                                | --legacy-byron-genesis-delegate-key-type
                                                )
                                                ( --byron-signing-key-file FILEPATH
                                                | --byron-verification-key-file FILEPATH
                                                )
                                                --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli mary key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                         --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli mary key convert-itn-key 
                                              ( --itn-signing-key-file FILEPATH
                                              | --itn-verification-key-file FILEPATH
                                              )
                                              --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli mary key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                       --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli mary key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                    --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli mary key convert-cardano-address-key 
                                                          ( --cc-cold-key
                                                          | --cc-hot-key
                                                          | --drep-key
                                                          | --shelley-payment-key
                                                          | --shelley-stake-key
                                                          | --icarus-payment-key
                                                          | --byron-payment-key
                                                          )
                                                          --signing-key-file FILEPATH
                                                          --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli mary genesis 
                                  ( key-gen-genesis
                                  | key-gen-delegate
                                  | key-gen-utxo
                                  | key-hash
                                  | get-ver-key
                                  | initial-addr
                                  | initial-txin
                                  | create-cardano
                                  | create
                                  | create-staked
                                  | hash
                                  )

  Genesis block commands.

Usage: cardano-cli mary genesis key-gen-genesis --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli mary genesis key-gen-delegate --verification-key-file FILEPATH
                                                   --signing-key-file FILEPATH
                                                   --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli mary genesis key-gen-utxo --verification-key-file FILEPATH
                                               --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli mary genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli mary genesis get-ver-key --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli mary genesis initial-addr --verification-key-file FILEPATH
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli mary genesis initial-txin --verification-key-file FILEPATH
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli mary genesis create-cardano --genesis-dir DIR
                                                 [--gen-genesis-keys INT]
                                                 [--gen-utxo-keys INT]
                                                 [--start-time UTC-TIME]
                                                 [--supply LOVELACE]
                                                 [--security-param INT]
                                                 [--slot-length INT]
                                                 [--slot-coefficient RATIONAL]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 --byron-template FILEPATH
                                                 --shelley-template FILEPATH
                                                 --alonzo-template FILEPATH
                                                 --conway-template FILEPATH
                                                 [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli mary genesis create [--key-output-format STRING]
                                         --genesis-dir DIR
                                         [--gen-genesis-keys INT]
                                         [--gen-utxo-keys INT]
                                         [--start-time UTC-TIME]
                                         [--supply LOVELACE]
                                         (--mainnet | --testnet-magic NATURAL)

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli mary genesis create-staked [--key-output-format STRING]
                                                --genesis-dir DIR
                                                [--gen-genesis-keys INT]
                                                [--gen-utxo-keys INT]
                                                [--gen-pools INT]
                                                [--gen-stake-delegs INT]
                                                [--start-time UTC-TIME]
                                                [--supply LOVELACE]
                                                [--supply-delegated LOVELACE]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--bulk-pool-cred-files INT]
                                                [--bulk-pools-per-file INT]
                                                [--num-stuffed-utxo INT]
                                                [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli mary genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli mary governance 
                                     ( create-mir-certificate
                                     | create-genesis-key-delegation-certificate
                                     | action
                                     )

  Governance commands.

Usage: cardano-cli mary governance create-mir-certificate 
                                                            ( ( --reserves
                                                              | --treasury
                                                              )
                                                              (--stake-address ADDRESS)
                                                              (--reward LOVELACE)
                                                              --out-file FILEPATH
                                                            | stake-addresses
                                                            | transfer-to-treasury
                                                            | transfer-to-rewards
                                                            )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli mary governance create-mir-certificate stake-addresses 
                                                                            ( --reserves
                                                                            | --treasury
                                                                            )
                                                                            (--stake-address ADDRESS)
                                                                            (--reward LOVELACE)
                                                                            --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli mary governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                 --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli mary governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli mary governance create-genesis-key-delegation-certificate 
                                                                               ( --genesis-verification-key STRING
                                                                               | --genesis-verification-key-file FILEPATH
                                                                               | --genesis-verification-key-hash STRING
                                                                               )
                                                                               ( --genesis-delegate-verification-key STRING
                                                                               | --genesis-delegate-verification-key-file FILEPATH
                                                                               | --genesis-delegate-verification-key-hash STRING
                                                                               )
                                                                               ( --vrf-verification-key STRING
                                                                               | --vrf-verification-key-file FILEPATH
                                                                               | --vrf-verification-key-hash STRING
                                                                               )
                                                                               --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli mary governance action create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli mary governance action create-protocol-parameters-update --epoch NATURAL
                                                                              (--genesis-verification-key-file FILEPATH)
                                                                              [--min-fee-linear LOVELACE]
                                                                              [--min-fee-constant LOVELACE]
                                                                              [--max-block-body-size WORD32]
                                                                              [--max-tx-size WORD32]
                                                                              [--max-block-header-size WORD16]
                                                                              [--key-reg-deposit-amt NATURAL]
                                                                              [--pool-reg-deposit NATURAL]
                                                                              [--pool-retirement-epoch-interval WORD32]
                                                                              [--number-of-pools NATURAL]
                                                                              [--pool-influence RATIONAL]
                                                                              [--treasury-expansion RATIONAL]
                                                                              [--monetary-expansion RATIONAL]
                                                                              [--min-pool-cost NATURAL]
                                                                              [--min-utxo-value NATURAL]
                                                                              [ --extra-entropy HEX
                                                                              | --reset-extra-entropy
                                                                              ]
                                                                              [--decentralization-parameter RATIONAL]
                                                                              [--protocol-major-version MAJOR
                                                                                --protocol-minor-version MINOR]
                                                                              --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli mary node 
                               ( key-gen
                               | key-gen-KES
                               | key-gen-VRF
                               | key-hash-VRF
                               | new-counter
                               | issue-op-cert
                               )

  Node operation commands.

Usage: cardano-cli mary node key-gen [--key-output-format STRING]
                                       --cold-verification-key-file FILEPATH
                                       --cold-signing-key-file FILEPATH
                                       --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli mary node key-gen-KES [--key-output-format STRING]
                                           --verification-key-file FILEPATH
                                           --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli mary node key-gen-VRF [--key-output-format STRING]
                                           --verification-key-file FILEPATH
                                           --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli mary node key-hash-VRF 
                                            ( --verification-key STRING
                                            | --verification-key-file FILEPATH
                                            )
                                            [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli mary node new-counter 
                                           ( --stake-pool-verification-key STRING
                                           | --genesis-delegate-verification-key STRING
                                           | --cold-verification-key-file FILEPATH
                                           )
                                           --counter-value INT
                                           --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli mary node issue-op-cert 
                                             ( --kes-verification-key STRING
                                             | --kes-verification-key-file FILEPATH
                                             )
                                             --cold-signing-key-file FILEPATH
                                             --operational-certificate-issue-counter-file FILEPATH
                                             --kes-period NATURAL
                                             --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli mary query 
                                ( protocol-parameters
                                | tip
                                | stake-pools
                                | stake-distribution
                                | stake-address-info
                                | utxo
                                | ledger-state
                                | protocol-state
                                | stake-snapshot
                                | leadership-schedule
                                | kes-period-info
                                | pool-state
                                | tx-mempool
                                | slot-number
                                | ref-script-size
                                )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli mary query protocol-parameters --socket-path SOCKET_PATH
                                                    [--cardano-mode
                                                      [--epoch-slots SLOTS]]
                                                    ( --mainnet
                                                    | --testnet-magic NATURAL
                                                    )
                                                    [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli mary query tip --socket-path SOCKET_PATH
                                    [--cardano-mode [--epoch-slots SLOTS]]
                                    (--mainnet | --testnet-magic NATURAL)
                                    [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli mary query stake-pools --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            [--output-json | --output-text]
                                            [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli mary query stake-distribution --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   [ --output-json
                                                   | --output-text
                                                   ]
                                                   [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli mary query stake-address-info --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --address ADDRESS
                                                   [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli mary query utxo --socket-path SOCKET_PATH
                                     [--cardano-mode [--epoch-slots SLOTS]]
                                     (--mainnet | --testnet-magic NATURAL)
                                     ( --whole-utxo
                                     | (--address ADDRESS)
                                     | (--tx-in TX-IN)
                                     )
                                     [--output-json | --output-text]
                                     [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli mary query ledger-state --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli mary query protocol-state --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli mary query stake-snapshot --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               ( --all-stake-pools
                                               | (--stake-pool-id STAKE_POOL_ID)
                                               )
                                               [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli mary query pool-params --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            ( --all-stake-pools
                                            | (--stake-pool-id STAKE_POOL_ID)
                                            )
                                            [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli mary query leadership-schedule --socket-path SOCKET_PATH
                                                    [--cardano-mode
                                                      [--epoch-slots SLOTS]]
                                                    ( --mainnet
                                                    | --testnet-magic NATURAL
                                                    )
                                                    --genesis FILEPATH
                                                    ( --stake-pool-verification-key STRING
                                                    | --cold-verification-key-file FILEPATH
                                                    | --stake-pool-id STAKE_POOL_ID
                                                    )
                                                    --vrf-signing-key-file FILEPATH
                                                    (--current | --next)
                                                    [ --output-json
                                                    | --output-text
                                                    ]
                                                    [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli mary query kes-period-info --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                --op-cert-file FILEPATH
                                                [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli mary query pool-state --socket-path SOCKET_PATH
                                           [--cardano-mode
                                             [--epoch-slots SLOTS]]
                                           (--mainnet | --testnet-magic NATURAL)
                                           ( --all-stake-pools
                                           | (--stake-pool-id STAKE_POOL_ID)
                                           )
                                           [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli mary query tx-mempool --socket-path SOCKET_PATH
                                           [--cardano-mode
                                             [--epoch-slots SLOTS]]
                                           (--mainnet | --testnet-magic NATURAL)
                                           (info | next-tx | tx-exists)
                                           [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli mary query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli mary query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli mary query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli mary query slot-number --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli mary query ref-script-size --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                (--tx-in TX-IN)
                                                [--output-json | --output-text]
                                                [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli mary stake-address 
                                        ( key-gen
                                        | key-hash
                                        | build
                                        | registration-certificate
                                        | deregistration-certificate
                                        | stake-delegation-certificate
                                        )

  Stake address commands.

Usage: cardano-cli mary stake-address key-gen [--key-output-format STRING]
                                                --verification-key-file FILEPATH
                                                --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli mary stake-address key-hash 
                                                 ( --stake-verification-key STRING
                                                 | --stake-verification-key-file FILEPATH
                                                 )
                                                 [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli mary stake-address build 
                                              ( --stake-verification-key STRING
                                              | --stake-verification-key-file FILEPATH
                                              | --stake-key-hash HASH
                                              | --stake-script-file FILEPATH
                                              )
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli mary stake-address registration-certificate 
                                                                 ( --stake-verification-key STRING
                                                                 | --stake-verification-key-file FILEPATH
                                                                 | --stake-key-hash HASH
                                                                 | --stake-script-file FILEPATH
                                                                 | --stake-address ADDRESS
                                                                 )
                                                                 --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli mary stake-address deregistration-certificate 
                                                                   ( --stake-verification-key STRING
                                                                   | --stake-verification-key-file FILEPATH
                                                                   | --stake-key-hash HASH
                                                                   | --stake-script-file FILEPATH
                                                                   | --stake-address ADDRESS
                                                                   )
                                                                   --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli mary stake-address stake-delegation-certificate 
                                                                     ( --stake-verification-key STRING
                                                                     | --stake-verification-key-file FILEPATH
                                                                     | --stake-key-hash HASH
                                                                     | --stake-script-file FILEPATH
                                                                     | --stake-address ADDRESS
                                                                     )
                                                                     ( --stake-pool-verification-key STRING
                                                                     | --cold-verification-key-file FILEPATH
                                                                     | --stake-pool-id STAKE_POOL_ID
                                                                     )
                                                                     --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli mary stake-pool 
                                     ( registration-certificate
                                     | deregistration-certificate
                                     | id
                                     | metadata-hash
                                     )

  Stake pool commands.

Usage: cardano-cli mary stake-pool registration-certificate 
                                                              ( --stake-pool-verification-key STRING
                                                              | --cold-verification-key-file FILEPATH
                                                              )
                                                              ( --vrf-verification-key STRING
                                                              | --vrf-verification-key-file FILEPATH
                                                              )
                                                              --pool-pledge LOVELACE
                                                              --pool-cost LOVELACE
                                                              --pool-margin RATIONAL
                                                              ( --pool-reward-account-verification-key STRING
                                                              | --pool-reward-account-verification-key-file FILEPATH
                                                              )
                                                              ( --pool-owner-verification-key STRING
                                                              | --pool-owner-stake-verification-key-file FILEPATH
                                                              )
                                                              [ [--pool-relay-ipv4 STRING]
                                                                [--pool-relay-ipv6 STRING]
                                                                --pool-relay-port INT
                                                              | --single-host-pool-relay STRING
                                                                [--pool-relay-port INT]
                                                              | --multi-host-pool-relay STRING
                                                              ]
                                                              [--metadata-url URL
                                                                --metadata-hash HASH
                                                                [--check-metadata-hash]]
                                                              ( --mainnet
                                                              | --testnet-magic NATURAL
                                                              )
                                                              --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli mary stake-pool deregistration-certificate 
                                                                ( --stake-pool-verification-key STRING
                                                                | --cold-verification-key-file FILEPATH
                                                                )
                                                                --epoch NATURAL
                                                                --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli mary stake-pool id 
                                        ( --stake-pool-verification-key STRING
                                        | --cold-verification-key-file FILEPATH
                                        )
                                        [--output-format STRING]
                                        [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli mary stake-pool metadata-hash 
                                                   ( --pool-metadata-file FILEPATH
                                                   | --pool-metadata-url TEXT
                                                   )
                                                   [ --expected-hash HASH
                                                   | --out-file FILEPATH
                                                   ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli mary text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli mary text-view decode-cbor --in-file FILEPATH
                                                [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli mary transaction 
                                      ( build-raw
                                      | sign
                                      | witness
                                      | assemble
                                      | submit
                                      | policyid
                                      | calculate-min-fee
                                      | calculate-min-required-utxo
                                      | hash-script-data
                                      | txid
                                      )

  Transaction commands.

Usage: cardano-cli mary transaction build-raw 
                                                [ --script-valid
                                                | --script-invalid
                                                ]
                                                (--tx-in TX-IN
                                                  [ --spending-tx-in-reference TX-IN
                                                    ( --spending-plutus-script-v2
                                                    | --spending-plutus-script-v3
                                                    )
                                                    ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                    | --spending-reference-tx-in-datum-file JSON_FILE
                                                    | --spending-reference-tx-in-datum-value JSON_VALUE
                                                    | --spending-reference-tx-in-inline-datum-present
                                                    )
                                                    ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                    | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                    | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                    )
                                                    --spending-reference-tx-in-execution-units (INT, INT)
                                                  | --simple-script-tx-in-reference TX-IN
                                                  | --tx-in-script-file FILEPATH
                                                    [
                                                      ( --tx-in-datum-cbor-file CBOR_FILE
                                                      | --tx-in-datum-file JSON_FILE
                                                      | --tx-in-datum-value JSON_VALUE
                                                      | --tx-in-inline-datum-present
                                                      )
                                                      ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --tx-in-redeemer-file JSON_FILE
                                                      | --tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --tx-in-execution-units (INT, INT)]
                                                  ])
                                                [--read-only-tx-in-reference TX-IN]
                                                [--tx-in-collateral TX-IN]
                                                [--tx-out-return-collateral ADDRESS VALUE]
                                                [--tx-total-collateral INTEGER]
                                                [ --required-signer FILEPATH
                                                | --required-signer-hash HASH
                                                ]
                                                [--tx-out ADDRESS VALUE
                                                  [ --tx-out-datum-hash HASH
                                                  | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                  | --tx-out-datum-hash-file JSON_FILE
                                                  | --tx-out-datum-hash-value JSON_VALUE
                                                  | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                  | --tx-out-datum-embed-file JSON_FILE
                                                  | --tx-out-datum-embed-value JSON_VALUE
                                                  | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                  | --tx-out-inline-datum-file JSON_FILE
                                                  | --tx-out-inline-datum-value JSON_VALUE
                                                  ]
                                                  [--tx-out-reference-script-file FILEPATH]]
                                                [--mint VALUE
                                                  ( --mint-script-file FILEPATH
                                                    [
                                                      ( --mint-redeemer-cbor-file CBOR_FILE
                                                      | --mint-redeemer-file JSON_FILE
                                                      | --mint-redeemer-value JSON_VALUE
                                                      )
                                                      --mint-execution-units (INT, INT)]
                                                  | --simple-minting-script-tx-in-reference TX-IN
                                                    --policy-id HASH
                                                  | --mint-tx-in-reference TX-IN
                                                    ( --mint-plutus-script-v2
                                                    | --mint-plutus-script-v3
                                                    )
                                                    ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                    | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                    | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                    )
                                                    --mint-reference-tx-in-execution-units (INT, INT)
                                                    --policy-id HASH
                                                  )]
                                                [--invalid-before SLOT]
                                                [--invalid-hereafter SLOT]
                                                --fee LOVELACE
                                                [--certificate-file FILEPATH
                                                  [ --certificate-script-file FILEPATH
                                                    [
                                                      ( --certificate-redeemer-cbor-file CBOR_FILE
                                                      | --certificate-redeemer-file JSON_FILE
                                                      | --certificate-redeemer-value JSON_VALUE
                                                      )
                                                      --certificate-execution-units (INT, INT)]
                                                  | --certificate-tx-in-reference TX-IN
                                                    ( --certificate-plutus-script-v2
                                                    | --certificate-plutus-script-v3
                                                    )
                                                    ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                    | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                    | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                    )
                                                    --certificate-reference-tx-in-execution-units (INT, INT)
                                                  ]]
                                                [--withdrawal WITHDRAWAL
                                                  [ --withdrawal-script-file FILEPATH
                                                    [
                                                      ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                      | --withdrawal-redeemer-file JSON_FILE
                                                      | --withdrawal-redeemer-value JSON_VALUE
                                                      )
                                                      --withdrawal-execution-units (INT, INT)]
                                                  | --withdrawal-tx-in-reference TX-IN
                                                    ( --withdrawal-plutus-script-v2
                                                    | --withdrawal-plutus-script-v3
                                                    )
                                                    ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                    | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                    | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                    )
                                                    --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                  ]]
                                                [ --json-metadata-no-schema
                                                | --json-metadata-detailed-schema
                                                ]
                                                [--auxiliary-script-file FILEPATH]
                                                [ --metadata-json-file FILEPATH
                                                | --metadata-cbor-file FILEPATH
                                                ]
                                                [--protocol-params-file FILEPATH]
                                                [--update-proposal-file FILEPATH]
                                                --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli mary transaction sign 
                                           ( --tx-body-file FILEPATH
                                           | --tx-file FILEPATH
                                           )
                                           [--signing-key-file FILEPATH
                                             [--address STRING]]
                                           [--mainnet | --testnet-magic NATURAL]
                                           --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli mary transaction witness --tx-body-file FILEPATH
                                              --signing-key-file FILEPATH
                                              [--address STRING]
                                              [ --mainnet
                                              | --testnet-magic NATURAL
                                              ]
                                              --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli mary transaction assemble --tx-body-file FILEPATH
                                               [--witness-file FILEPATH]
                                               --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli mary transaction sign-witness --tx-body-file FILEPATH
                                                   [--witness-file FILEPATH]
                                                   --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli mary transaction submit --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli mary transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli mary transaction calculate-min-fee --tx-body-file FILEPATH
                                                        --protocol-params-file FILEPATH
                                                        --witness-count NATURAL
                                                        [--byron-witness-count NATURAL]
                                                        [--reference-script-size NATURAL]
                                                        [ --output-json
                                                        | --output-text
                                                        ]
                                                        [--out-file FILEPATH]
                                                        [ --mainnet
                                                        | --testnet-magic NATURAL
                                                        ]
                                                        [--tx-in-count NATURAL]
                                                        [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli mary transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                  --tx-out ADDRESS VALUE
                                                                  [ --tx-out-datum-hash HASH
                                                                  | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                  | --tx-out-datum-hash-file JSON_FILE
                                                                  | --tx-out-datum-hash-value JSON_VALUE
                                                                  | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                  | --tx-out-datum-embed-file JSON_FILE
                                                                  | --tx-out-datum-embed-value JSON_VALUE
                                                                  | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                  | --tx-out-inline-datum-file JSON_FILE
                                                                  | --tx-out-inline-datum-value JSON_VALUE
                                                                  ]
                                                                  [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli mary transaction calculate-min-value --protocol-params-file FILEPATH
                                                          --tx-out ADDRESS VALUE
                                                          [ --tx-out-datum-hash HASH
                                                          | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                          | --tx-out-datum-hash-file JSON_FILE
                                                          | --tx-out-datum-hash-value JSON_VALUE
                                                          | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                          | --tx-out-datum-embed-file JSON_FILE
                                                          | --tx-out-datum-embed-value JSON_VALUE
                                                          | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                          | --tx-out-inline-datum-file JSON_FILE
                                                          | --tx-out-inline-datum-value JSON_VALUE
                                                          ]
                                                          [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli mary transaction hash-script-data 
                                                       ( --script-data-cbor-file CBOR_FILE
                                                       | --script-data-file JSON_FILE
                                                       | --script-data-value JSON_VALUE
                                                       )

  Calculate the hash of script data.

Usage: cardano-cli mary transaction txid 
                                           ( --tx-body-file FILEPATH
                                           | --tx-file FILEPATH
                                           )

  Print a transaction identifier.

Usage: cardano-cli alonzo 
                            ( address
                            | key
                            | genesis
                            | governance
                            | node
                            | query
                            | stake-address
                            | stake-pool
                            | text-view
                            | transaction
                            )

  Alonzo era commands - DEPRECATED - will be removed in the future

Usage: cardano-cli alonzo address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli alonzo address key-gen [--key-output-format STRING]
                                            [ --normal-key
                                            | --extended-key
                                            | --byron-key
                                            ]
                                            --verification-key-file FILEPATH
                                            --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli alonzo address key-hash 
                                             ( --payment-verification-key STRING
                                             | --payment-verification-key-file FILEPATH
                                             )
                                             [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli alonzo address build 
                                          ( --payment-verification-key STRING
                                          | --payment-verification-key-file FILEPATH
                                          | --payment-script-file FILEPATH
                                          )
                                          [ --stake-verification-key STRING
                                          | --stake-verification-key-file FILEPATH
                                          | --stake-key-hash HASH
                                          | --stake-script-file FILEPATH
                                          | --stake-address ADDRESS
                                          ]
                                          (--mainnet | --testnet-magic NATURAL)
                                          [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli alonzo address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli alonzo key 
                                ( verification-key
                                | non-extended-key
                                | convert-byron-key
                                | convert-byron-genesis-vkey
                                | convert-itn-key
                                | convert-itn-extended-key
                                | convert-itn-bip32-key
                                | convert-cardano-address-key
                                )

  Key utility commands.

Usage: cardano-cli alonzo key verification-key --signing-key-file FILEPATH
                                                 --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli alonzo key non-extended-key --extended-verification-key-file FILEPATH
                                                 --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli alonzo key convert-byron-key [--password TEXT]
                                                  ( --byron-payment-key-type
                                                  | --legacy-byron-payment-key-type
                                                  | --byron-genesis-key-type
                                                  | --legacy-byron-genesis-key-type
                                                  | --byron-genesis-delegate-key-type
                                                  | --legacy-byron-genesis-delegate-key-type
                                                  )
                                                  ( --byron-signing-key-file FILEPATH
                                                  | --byron-verification-key-file FILEPATH
                                                  )
                                                  --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli alonzo key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                           --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli alonzo key convert-itn-key 
                                                ( --itn-signing-key-file FILEPATH
                                                | --itn-verification-key-file FILEPATH
                                                )
                                                --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli alonzo key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                         --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli alonzo key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                      --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli alonzo key convert-cardano-address-key 
                                                            ( --cc-cold-key
                                                            | --cc-hot-key
                                                            | --drep-key
                                                            | --shelley-payment-key
                                                            | --shelley-stake-key
                                                            | --icarus-payment-key
                                                            | --byron-payment-key
                                                            )
                                                            --signing-key-file FILEPATH
                                                            --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli alonzo genesis 
                                    ( key-gen-genesis
                                    | key-gen-delegate
                                    | key-gen-utxo
                                    | key-hash
                                    | get-ver-key
                                    | initial-addr
                                    | initial-txin
                                    | create-cardano
                                    | create
                                    | create-staked
                                    | hash
                                    )

  Genesis block commands.

Usage: cardano-cli alonzo genesis key-gen-genesis --verification-key-file FILEPATH
                                                    --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli alonzo genesis key-gen-delegate --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH
                                                     --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli alonzo genesis key-gen-utxo --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli alonzo genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli alonzo genesis get-ver-key --verification-key-file FILEPATH
                                                --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli alonzo genesis initial-addr --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli alonzo genesis initial-txin --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli alonzo genesis create-cardano --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--security-param INT]
                                                   [--slot-length INT]
                                                   [--slot-coefficient RATIONAL]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --byron-template FILEPATH
                                                   --shelley-template FILEPATH
                                                   --alonzo-template FILEPATH
                                                   --conway-template FILEPATH
                                                   [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli alonzo genesis create [--key-output-format STRING]
                                           --genesis-dir DIR
                                           [--gen-genesis-keys INT]
                                           [--gen-utxo-keys INT]
                                           [--start-time UTC-TIME]
                                           [--supply LOVELACE]
                                           (--mainnet | --testnet-magic NATURAL)

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli alonzo genesis create-staked [--key-output-format STRING]
                                                  --genesis-dir DIR
                                                  [--gen-genesis-keys INT]
                                                  [--gen-utxo-keys INT]
                                                  [--gen-pools INT]
                                                  [--gen-stake-delegs INT]
                                                  [--start-time UTC-TIME]
                                                  [--supply LOVELACE]
                                                  [--supply-delegated LOVELACE]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--bulk-pool-cred-files INT]
                                                  [--bulk-pools-per-file INT]
                                                  [--num-stuffed-utxo INT]
                                                  [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli alonzo genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli alonzo governance 
                                       ( create-mir-certificate
                                       | create-genesis-key-delegation-certificate
                                       | action
                                       )

  Governance commands.

Usage: cardano-cli alonzo governance create-mir-certificate 
                                                              ( ( --reserves
                                                                | --treasury
                                                                )
                                                                (--stake-address ADDRESS)
                                                                (--reward LOVELACE)
                                                                --out-file FILEPATH
                                                              | stake-addresses
                                                              | transfer-to-treasury
                                                              | transfer-to-rewards
                                                              )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli alonzo governance create-mir-certificate stake-addresses 
                                                                              ( --reserves
                                                                              | --treasury
                                                                              )
                                                                              (--stake-address ADDRESS)
                                                                              (--reward LOVELACE)
                                                                              --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli alonzo governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                   --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli alonzo governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                  --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli alonzo governance create-genesis-key-delegation-certificate 
                                                                                 ( --genesis-verification-key STRING
                                                                                 | --genesis-verification-key-file FILEPATH
                                                                                 | --genesis-verification-key-hash STRING
                                                                                 )
                                                                                 ( --genesis-delegate-verification-key STRING
                                                                                 | --genesis-delegate-verification-key-file FILEPATH
                                                                                 | --genesis-delegate-verification-key-hash STRING
                                                                                 )
                                                                                 ( --vrf-verification-key STRING
                                                                                 | --vrf-verification-key-file FILEPATH
                                                                                 | --vrf-verification-key-hash STRING
                                                                                 )
                                                                                 --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli alonzo governance action create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli alonzo governance action create-protocol-parameters-update --epoch NATURAL
                                                                                (--genesis-verification-key-file FILEPATH)
                                                                                [--min-fee-linear LOVELACE]
                                                                                [--min-fee-constant LOVELACE]
                                                                                [--max-block-body-size WORD32]
                                                                                [--max-tx-size WORD32]
                                                                                [--max-block-header-size WORD16]
                                                                                [--key-reg-deposit-amt NATURAL]
                                                                                [--pool-reg-deposit NATURAL]
                                                                                [--pool-retirement-epoch-interval WORD32]
                                                                                [--number-of-pools NATURAL]
                                                                                [--pool-influence RATIONAL]
                                                                                [--treasury-expansion RATIONAL]
                                                                                [--monetary-expansion RATIONAL]
                                                                                [--min-pool-cost NATURAL]
                                                                                [ --extra-entropy HEX
                                                                                | --reset-extra-entropy
                                                                                ]
                                                                                [--decentralization-parameter RATIONAL]
                                                                                [--price-execution-steps RATIONAL
                                                                                  --price-execution-memory RATIONAL]
                                                                                [--max-tx-execution-units (INT, INT)]
                                                                                [--max-block-execution-units (INT, INT)]
                                                                                [--max-value-size INT]
                                                                                [--collateral-percent INT]
                                                                                [--max-collateral-inputs INT]
                                                                                [--protocol-major-version MAJOR
                                                                                  --protocol-minor-version MINOR]
                                                                                [--cost-model-file FILE]
                                                                                --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli alonzo node 
                                 ( key-gen
                                 | key-gen-KES
                                 | key-gen-VRF
                                 | key-hash-VRF
                                 | new-counter
                                 | issue-op-cert
                                 )

  Node operation commands.

Usage: cardano-cli alonzo node key-gen [--key-output-format STRING]
                                         --cold-verification-key-file FILEPATH
                                         --cold-signing-key-file FILEPATH
                                         --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli alonzo node key-gen-KES [--key-output-format STRING]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli alonzo node key-gen-VRF [--key-output-format STRING]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli alonzo node key-hash-VRF 
                                              ( --verification-key STRING
                                              | --verification-key-file FILEPATH
                                              )
                                              [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli alonzo node new-counter 
                                             ( --stake-pool-verification-key STRING
                                             | --genesis-delegate-verification-key STRING
                                             | --cold-verification-key-file FILEPATH
                                             )
                                             --counter-value INT
                                             --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli alonzo node issue-op-cert 
                                               ( --kes-verification-key STRING
                                               | --kes-verification-key-file FILEPATH
                                               )
                                               --cold-signing-key-file FILEPATH
                                               --operational-certificate-issue-counter-file FILEPATH
                                               --kes-period NATURAL
                                               --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli alonzo query 
                                  ( protocol-parameters
                                  | tip
                                  | stake-pools
                                  | stake-distribution
                                  | stake-address-info
                                  | utxo
                                  | ledger-state
                                  | protocol-state
                                  | stake-snapshot
                                  | leadership-schedule
                                  | kes-period-info
                                  | pool-state
                                  | tx-mempool
                                  | slot-number
                                  | ref-script-size
                                  )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli alonzo query protocol-parameters --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli alonzo query tip --socket-path SOCKET_PATH
                                      [--cardano-mode [--epoch-slots SLOTS]]
                                      (--mainnet | --testnet-magic NATURAL)
                                      [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli alonzo query stake-pools --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--output-json | --output-text]
                                              [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli alonzo query stake-distribution --socket-path SOCKET_PATH
                                                     [--cardano-mode
                                                       [--epoch-slots SLOTS]]
                                                     ( --mainnet
                                                     | --testnet-magic NATURAL
                                                     )
                                                     [ --output-json
                                                     | --output-text
                                                     ]
                                                     [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli alonzo query stake-address-info --socket-path SOCKET_PATH
                                                     [--cardano-mode
                                                       [--epoch-slots SLOTS]]
                                                     ( --mainnet
                                                     | --testnet-magic NATURAL
                                                     )
                                                     --address ADDRESS
                                                     [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli alonzo query utxo --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       ( --whole-utxo
                                       | (--address ADDRESS)
                                       | (--tx-in TX-IN)
                                       )
                                       [--output-json | --output-text]
                                       [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli alonzo query ledger-state --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli alonzo query protocol-state --socket-path SOCKET_PATH
                                                 [--cardano-mode
                                                   [--epoch-slots SLOTS]]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli alonzo query stake-snapshot --socket-path SOCKET_PATH
                                                 [--cardano-mode
                                                   [--epoch-slots SLOTS]]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 ( --all-stake-pools
                                                 | (--stake-pool-id STAKE_POOL_ID)
                                                 )
                                                 [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli alonzo query pool-params --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              ( --all-stake-pools
                                              | (--stake-pool-id STAKE_POOL_ID)
                                              )
                                              [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli alonzo query leadership-schedule --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      --genesis FILEPATH
                                                      ( --stake-pool-verification-key STRING
                                                      | --cold-verification-key-file FILEPATH
                                                      | --stake-pool-id STAKE_POOL_ID
                                                      )
                                                      --vrf-signing-key-file FILEPATH
                                                      (--current | --next)
                                                      [ --output-json
                                                      | --output-text
                                                      ]
                                                      [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli alonzo query kes-period-info --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  --op-cert-file FILEPATH
                                                  [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli alonzo query pool-state --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             ( --all-stake-pools
                                             | (--stake-pool-id STAKE_POOL_ID)
                                             )
                                             [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli alonzo query tx-mempool --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             (info | next-tx | tx-exists)
                                             [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli alonzo query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli alonzo query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli alonzo query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli alonzo query slot-number --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli alonzo query ref-script-size --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  (--tx-in TX-IN)
                                                  [ --output-json
                                                  | --output-text
                                                  ]
                                                  [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli alonzo stake-address 
                                          ( key-gen
                                          | key-hash
                                          | build
                                          | registration-certificate
                                          | deregistration-certificate
                                          | stake-delegation-certificate
                                          )

  Stake address commands.

Usage: cardano-cli alonzo stake-address key-gen [--key-output-format STRING]
                                                  --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli alonzo stake-address key-hash 
                                                   ( --stake-verification-key STRING
                                                   | --stake-verification-key-file FILEPATH
                                                   )
                                                   [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli alonzo stake-address build 
                                                ( --stake-verification-key STRING
                                                | --stake-verification-key-file FILEPATH
                                                | --stake-key-hash HASH
                                                | --stake-script-file FILEPATH
                                                )
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli alonzo stake-address registration-certificate 
                                                                   ( --stake-verification-key STRING
                                                                   | --stake-verification-key-file FILEPATH
                                                                   | --stake-key-hash HASH
                                                                   | --stake-script-file FILEPATH
                                                                   | --stake-address ADDRESS
                                                                   )
                                                                   --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli alonzo stake-address deregistration-certificate 
                                                                     ( --stake-verification-key STRING
                                                                     | --stake-verification-key-file FILEPATH
                                                                     | --stake-key-hash HASH
                                                                     | --stake-script-file FILEPATH
                                                                     | --stake-address ADDRESS
                                                                     )
                                                                     --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli alonzo stake-address stake-delegation-certificate 
                                                                       ( --stake-verification-key STRING
                                                                       | --stake-verification-key-file FILEPATH
                                                                       | --stake-key-hash HASH
                                                                       | --stake-script-file FILEPATH
                                                                       | --stake-address ADDRESS
                                                                       )
                                                                       ( --stake-pool-verification-key STRING
                                                                       | --cold-verification-key-file FILEPATH
                                                                       | --stake-pool-id STAKE_POOL_ID
                                                                       )
                                                                       --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli alonzo stake-pool 
                                       ( registration-certificate
                                       | deregistration-certificate
                                       | id
                                       | metadata-hash
                                       )

  Stake pool commands.

Usage: cardano-cli alonzo stake-pool registration-certificate 
                                                                ( --stake-pool-verification-key STRING
                                                                | --cold-verification-key-file FILEPATH
                                                                )
                                                                ( --vrf-verification-key STRING
                                                                | --vrf-verification-key-file FILEPATH
                                                                )
                                                                --pool-pledge LOVELACE
                                                                --pool-cost LOVELACE
                                                                --pool-margin RATIONAL
                                                                ( --pool-reward-account-verification-key STRING
                                                                | --pool-reward-account-verification-key-file FILEPATH
                                                                )
                                                                ( --pool-owner-verification-key STRING
                                                                | --pool-owner-stake-verification-key-file FILEPATH
                                                                )
                                                                [ [--pool-relay-ipv4 STRING]
                                                                  [--pool-relay-ipv6 STRING]
                                                                  --pool-relay-port INT
                                                                | --single-host-pool-relay STRING
                                                                  [--pool-relay-port INT]
                                                                | --multi-host-pool-relay STRING
                                                                ]
                                                                [--metadata-url URL
                                                                  --metadata-hash HASH
                                                                  [--check-metadata-hash]]
                                                                ( --mainnet
                                                                | --testnet-magic NATURAL
                                                                )
                                                                --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli alonzo stake-pool deregistration-certificate 
                                                                  ( --stake-pool-verification-key STRING
                                                                  | --cold-verification-key-file FILEPATH
                                                                  )
                                                                  --epoch NATURAL
                                                                  --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli alonzo stake-pool id 
                                          ( --stake-pool-verification-key STRING
                                          | --cold-verification-key-file FILEPATH
                                          )
                                          [--output-format STRING]
                                          [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli alonzo stake-pool metadata-hash 
                                                     ( --pool-metadata-file FILEPATH
                                                     | --pool-metadata-url TEXT
                                                     )
                                                     [ --expected-hash HASH
                                                     | --out-file FILEPATH
                                                     ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli alonzo text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli alonzo text-view decode-cbor --in-file FILEPATH
                                                  [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli alonzo transaction 
                                        ( build-raw
                                        | sign
                                        | witness
                                        | assemble
                                        | submit
                                        | policyid
                                        | calculate-min-fee
                                        | calculate-min-required-utxo
                                        | hash-script-data
                                        | txid
                                        )

  Transaction commands.

Usage: cardano-cli alonzo transaction build-raw 
                                                  [ --script-valid
                                                  | --script-invalid
                                                  ]
                                                  (--tx-in TX-IN
                                                    [ --spending-tx-in-reference TX-IN
                                                      ( --spending-plutus-script-v2
                                                      | --spending-plutus-script-v3
                                                      )
                                                      ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                      | --spending-reference-tx-in-datum-file JSON_FILE
                                                      | --spending-reference-tx-in-datum-value JSON_VALUE
                                                      | --spending-reference-tx-in-inline-datum-present
                                                      )
                                                      ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                      | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --spending-reference-tx-in-execution-units (INT, INT)
                                                    | --simple-script-tx-in-reference TX-IN
                                                    | --tx-in-script-file FILEPATH
                                                      [
                                                        ( --tx-in-datum-cbor-file CBOR_FILE
                                                        | --tx-in-datum-file JSON_FILE
                                                        | --tx-in-datum-value JSON_VALUE
                                                        | --tx-in-inline-datum-present
                                                        )
                                                        ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                        | --tx-in-redeemer-file JSON_FILE
                                                        | --tx-in-redeemer-value JSON_VALUE
                                                        )
                                                        --tx-in-execution-units (INT, INT)]
                                                    ])
                                                  [--read-only-tx-in-reference TX-IN]
                                                  [--tx-in-collateral TX-IN]
                                                  [--tx-out-return-collateral ADDRESS VALUE]
                                                  [--tx-total-collateral INTEGER]
                                                  [ --required-signer FILEPATH
                                                  | --required-signer-hash HASH
                                                  ]
                                                  [--tx-out ADDRESS VALUE
                                                    [ --tx-out-datum-hash HASH
                                                    | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                    | --tx-out-datum-hash-file JSON_FILE
                                                    | --tx-out-datum-hash-value JSON_VALUE
                                                    | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                    | --tx-out-datum-embed-file JSON_FILE
                                                    | --tx-out-datum-embed-value JSON_VALUE
                                                    | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                    | --tx-out-inline-datum-file JSON_FILE
                                                    | --tx-out-inline-datum-value JSON_VALUE
                                                    ]
                                                    [--tx-out-reference-script-file FILEPATH]]
                                                  [--mint VALUE
                                                    ( --mint-script-file FILEPATH
                                                      [
                                                        ( --mint-redeemer-cbor-file CBOR_FILE
                                                        | --mint-redeemer-file JSON_FILE
                                                        | --mint-redeemer-value JSON_VALUE
                                                        )
                                                        --mint-execution-units (INT, INT)]
                                                    | --simple-minting-script-tx-in-reference TX-IN
                                                      --policy-id HASH
                                                    | --mint-tx-in-reference TX-IN
                                                      ( --mint-plutus-script-v2
                                                      | --mint-plutus-script-v3
                                                      )
                                                      ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                      | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --mint-reference-tx-in-execution-units (INT, INT)
                                                      --policy-id HASH
                                                    )]
                                                  [--invalid-before SLOT]
                                                  [--invalid-hereafter SLOT]
                                                  --fee LOVELACE
                                                  [--certificate-file FILEPATH
                                                    [ --certificate-script-file FILEPATH
                                                      [
                                                        ( --certificate-redeemer-cbor-file CBOR_FILE
                                                        | --certificate-redeemer-file JSON_FILE
                                                        | --certificate-redeemer-value JSON_VALUE
                                                        )
                                                        --certificate-execution-units (INT, INT)]
                                                    | --certificate-tx-in-reference TX-IN
                                                      ( --certificate-plutus-script-v2
                                                      | --certificate-plutus-script-v3
                                                      )
                                                      ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                      | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --certificate-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--withdrawal WITHDRAWAL
                                                    [ --withdrawal-script-file FILEPATH
                                                      [
                                                        ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                        | --withdrawal-redeemer-file JSON_FILE
                                                        | --withdrawal-redeemer-value JSON_VALUE
                                                        )
                                                        --withdrawal-execution-units (INT, INT)]
                                                    | --withdrawal-tx-in-reference TX-IN
                                                      ( --withdrawal-plutus-script-v2
                                                      | --withdrawal-plutus-script-v3
                                                      )
                                                      ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                      | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [ --json-metadata-no-schema
                                                  | --json-metadata-detailed-schema
                                                  ]
                                                  [--auxiliary-script-file FILEPATH]
                                                  [ --metadata-json-file FILEPATH
                                                  | --metadata-cbor-file FILEPATH
                                                  ]
                                                  [--protocol-params-file FILEPATH]
                                                  [--update-proposal-file FILEPATH]
                                                  --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli alonzo transaction sign 
                                             ( --tx-body-file FILEPATH
                                             | --tx-file FILEPATH
                                             )
                                             [--signing-key-file FILEPATH
                                               [--address STRING]]
                                             [ --mainnet
                                             | --testnet-magic NATURAL
                                             ]
                                             --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli alonzo transaction witness --tx-body-file FILEPATH
                                                --signing-key-file FILEPATH
                                                [--address STRING]
                                                [ --mainnet
                                                | --testnet-magic NATURAL
                                                ]
                                                --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli alonzo transaction assemble --tx-body-file FILEPATH
                                                 [--witness-file FILEPATH]
                                                 --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli alonzo transaction sign-witness --tx-body-file FILEPATH
                                                     [--witness-file FILEPATH]
                                                     --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli alonzo transaction submit --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli alonzo transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli alonzo transaction calculate-min-fee --tx-body-file FILEPATH
                                                          --protocol-params-file FILEPATH
                                                          --witness-count NATURAL
                                                          [--byron-witness-count NATURAL]
                                                          [--reference-script-size NATURAL]
                                                          [ --output-json
                                                          | --output-text
                                                          ]
                                                          [--out-file FILEPATH]
                                                          [ --mainnet
                                                          | --testnet-magic NATURAL
                                                          ]
                                                          [--tx-in-count NATURAL]
                                                          [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli alonzo transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                    --tx-out ADDRESS VALUE
                                                                    [ --tx-out-datum-hash HASH
                                                                    | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                    | --tx-out-datum-hash-file JSON_FILE
                                                                    | --tx-out-datum-hash-value JSON_VALUE
                                                                    | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                    | --tx-out-datum-embed-file JSON_FILE
                                                                    | --tx-out-datum-embed-value JSON_VALUE
                                                                    | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                    | --tx-out-inline-datum-file JSON_FILE
                                                                    | --tx-out-inline-datum-value JSON_VALUE
                                                                    ]
                                                                    [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli alonzo transaction calculate-min-value --protocol-params-file FILEPATH
                                                            --tx-out ADDRESS VALUE
                                                            [ --tx-out-datum-hash HASH
                                                            | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                            | --tx-out-datum-hash-file JSON_FILE
                                                            | --tx-out-datum-hash-value JSON_VALUE
                                                            | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                            | --tx-out-datum-embed-file JSON_FILE
                                                            | --tx-out-datum-embed-value JSON_VALUE
                                                            | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                            | --tx-out-inline-datum-file JSON_FILE
                                                            | --tx-out-inline-datum-value JSON_VALUE
                                                            ]
                                                            [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli alonzo transaction hash-script-data 
                                                         ( --script-data-cbor-file CBOR_FILE
                                                         | --script-data-file JSON_FILE
                                                         | --script-data-value JSON_VALUE
                                                         )

  Calculate the hash of script data.

Usage: cardano-cli alonzo transaction txid 
                                             ( --tx-body-file FILEPATH
                                             | --tx-file FILEPATH
                                             )

  Print a transaction identifier.

Usage: cardano-cli babbage 
                             ( address
                             | key
                             | genesis
                             | governance
                             | node
                             | query
                             | stake-address
                             | stake-pool
                             | text-view
                             | transaction
                             )

  Babbage era commands - DEPRECATED - will be removed in the future

Usage: cardano-cli babbage address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli babbage address key-gen [--key-output-format STRING]
                                             [ --normal-key
                                             | --extended-key
                                             | --byron-key
                                             ]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli babbage address key-hash 
                                              ( --payment-verification-key STRING
                                              | --payment-verification-key-file FILEPATH
                                              )
                                              [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli babbage address build 
                                           ( --payment-verification-key STRING
                                           | --payment-verification-key-file FILEPATH
                                           | --payment-script-file FILEPATH
                                           )
                                           [ --stake-verification-key STRING
                                           | --stake-verification-key-file FILEPATH
                                           | --stake-key-hash HASH
                                           | --stake-script-file FILEPATH
                                           | --stake-address ADDRESS
                                           ]
                                           (--mainnet | --testnet-magic NATURAL)
                                           [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli babbage address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli babbage key 
                                 ( verification-key
                                 | non-extended-key
                                 | convert-byron-key
                                 | convert-byron-genesis-vkey
                                 | convert-itn-key
                                 | convert-itn-extended-key
                                 | convert-itn-bip32-key
                                 | convert-cardano-address-key
                                 )

  Key utility commands.

Usage: cardano-cli babbage key verification-key --signing-key-file FILEPATH
                                                  --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli babbage key non-extended-key --extended-verification-key-file FILEPATH
                                                  --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli babbage key convert-byron-key [--password TEXT]
                                                   ( --byron-payment-key-type
                                                   | --legacy-byron-payment-key-type
                                                   | --byron-genesis-key-type
                                                   | --legacy-byron-genesis-key-type
                                                   | --byron-genesis-delegate-key-type
                                                   | --legacy-byron-genesis-delegate-key-type
                                                   )
                                                   ( --byron-signing-key-file FILEPATH
                                                   | --byron-verification-key-file FILEPATH
                                                   )
                                                   --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli babbage key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                            --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli babbage key convert-itn-key 
                                                 ( --itn-signing-key-file FILEPATH
                                                 | --itn-verification-key-file FILEPATH
                                                 )
                                                 --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli babbage key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                          --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli babbage key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                       --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli babbage key convert-cardano-address-key 
                                                             ( --cc-cold-key
                                                             | --cc-hot-key
                                                             | --drep-key
                                                             | --shelley-payment-key
                                                             | --shelley-stake-key
                                                             | --icarus-payment-key
                                                             | --byron-payment-key
                                                             )
                                                             --signing-key-file FILEPATH
                                                             --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli babbage genesis 
                                     ( key-gen-genesis
                                     | key-gen-delegate
                                     | key-gen-utxo
                                     | key-hash
                                     | get-ver-key
                                     | initial-addr
                                     | initial-txin
                                     | create-cardano
                                     | create
                                     | create-staked
                                     | create-testnet-data
                                     | hash
                                     )

  Genesis block commands.

Usage: cardano-cli babbage genesis key-gen-genesis --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli babbage genesis key-gen-delegate --verification-key-file FILEPATH
                                                      --signing-key-file FILEPATH
                                                      --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli babbage genesis key-gen-utxo --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli babbage genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli babbage genesis get-ver-key --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli babbage genesis initial-addr --verification-key-file FILEPATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli babbage genesis initial-txin --verification-key-file FILEPATH
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli babbage genesis create-cardano --genesis-dir DIR
                                                    [--gen-genesis-keys INT]
                                                    [--gen-utxo-keys INT]
                                                    [--start-time UTC-TIME]
                                                    [--supply LOVELACE]
                                                    [--security-param INT]
                                                    [--slot-length INT]
                                                    [--slot-coefficient RATIONAL]
                                                    ( --mainnet
                                                    | --testnet-magic NATURAL
                                                    )
                                                    --byron-template FILEPATH
                                                    --shelley-template FILEPATH
                                                    --alonzo-template FILEPATH
                                                    --conway-template FILEPATH
                                                    [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli babbage genesis create [--key-output-format STRING]
                                            --genesis-dir DIR
                                            [--gen-genesis-keys INT]
                                            [--gen-utxo-keys INT]
                                            [--start-time UTC-TIME]
                                            [--supply LOVELACE]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli babbage genesis create-staked [--key-output-format STRING]
                                                   --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--gen-pools INT]
                                                   [--gen-stake-delegs INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--supply-delegated LOVELACE]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   [--bulk-pool-cred-files INT]
                                                   [--bulk-pools-per-file INT]
                                                   [--num-stuffed-utxo INT]
                                                   [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli babbage genesis create-testnet-data [--spec-shelley FILEPATH]
                                                         [--spec-alonzo FILEPATH]
                                                         [--spec-conway FILEPATH]
                                                         [--genesis-keys INT]
                                                         [--pools INT]
                                                         [ --stake-delegators INT
                                                         | --transient-stake-delegators INT
                                                         ]
                                                         [--stuffed-utxo INT]
                                                         [--utxo-keys INT]
                                                         [--total-supply LOVELACE]
                                                         [--delegated-supply LOVELACE]
                                                         [--testnet-magic NATURAL]
                                                         [--relays FILEPATH]
                                                         [--start-time UTC-TIME]
                                                         --out-dir DIR

  Create data to use for starting a testnet.

Usage: cardano-cli babbage genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli babbage governance 
                                        ( create-mir-certificate
                                        | create-genesis-key-delegation-certificate
                                        | action
                                        | create-poll
                                        | answer-poll
                                        | verify-poll
                                        )

  Governance commands.

Usage: cardano-cli babbage governance create-mir-certificate 
                                                               ( ( --reserves
                                                                 | --treasury
                                                                 )
                                                                 (--stake-address ADDRESS)
                                                                 (--reward LOVELACE)
                                                                 --out-file FILEPATH
                                                               | stake-addresses
                                                               | transfer-to-treasury
                                                               | transfer-to-rewards
                                                               )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli babbage governance create-mir-certificate stake-addresses 
                                                                               ( --reserves
                                                                               | --treasury
                                                                               )
                                                                               (--stake-address ADDRESS)
                                                                               (--reward LOVELACE)
                                                                               --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli babbage governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                    --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli babbage governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                   --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli babbage governance create-genesis-key-delegation-certificate 
                                                                                  ( --genesis-verification-key STRING
                                                                                  | --genesis-verification-key-file FILEPATH
                                                                                  | --genesis-verification-key-hash STRING
                                                                                  )
                                                                                  ( --genesis-delegate-verification-key STRING
                                                                                  | --genesis-delegate-verification-key-file FILEPATH
                                                                                  | --genesis-delegate-verification-key-hash STRING
                                                                                  )
                                                                                  ( --vrf-verification-key STRING
                                                                                  | --vrf-verification-key-file FILEPATH
                                                                                  | --vrf-verification-key-hash STRING
                                                                                  )
                                                                                  --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli babbage governance action create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli babbage governance action create-protocol-parameters-update --epoch NATURAL
                                                                                 (--genesis-verification-key-file FILEPATH)
                                                                                 [--min-fee-linear LOVELACE]
                                                                                 [--min-fee-constant LOVELACE]
                                                                                 [--max-block-body-size WORD32]
                                                                                 [--max-tx-size WORD32]
                                                                                 [--max-block-header-size WORD16]
                                                                                 [--key-reg-deposit-amt NATURAL]
                                                                                 [--pool-reg-deposit NATURAL]
                                                                                 [--pool-retirement-epoch-interval WORD32]
                                                                                 [--number-of-pools NATURAL]
                                                                                 [--pool-influence RATIONAL]
                                                                                 [--treasury-expansion RATIONAL]
                                                                                 [--monetary-expansion RATIONAL]
                                                                                 [--min-pool-cost NATURAL]
                                                                                 [--price-execution-steps RATIONAL
                                                                                   --price-execution-memory RATIONAL]
                                                                                 [--max-tx-execution-units (INT, INT)]
                                                                                 [--max-block-execution-units (INT, INT)]
                                                                                 [--max-value-size INT]
                                                                                 [--collateral-percent INT]
                                                                                 [--max-collateral-inputs INT]
                                                                                 [--protocol-major-version MAJOR
                                                                                   --protocol-minor-version MINOR]
                                                                                 [--utxo-cost-per-byte LOVELACE]
                                                                                 [--cost-model-file FILE]
                                                                                 --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli babbage governance create-poll --question STRING
                                                    (--answer STRING)
                                                    [--nonce UINT]
                                                    --out-file FILEPATH

  Create an SPO poll

Usage: cardano-cli babbage governance answer-poll --poll-file FILEPATH
                                                    [--answer INT]
                                                    [--out-file FILEPATH]

  Answer an SPO poll

Usage: cardano-cli babbage governance verify-poll --poll-file FILEPATH
                                                    --tx-file FILEPATH
                                                    [--out-file FILEPATH]

  Verify an answer to a given SPO poll

Usage: cardano-cli babbage node 
                                  ( key-gen
                                  | key-gen-KES
                                  | key-gen-VRF
                                  | key-hash-VRF
                                  | new-counter
                                  | issue-op-cert
                                  )

  Node operation commands.

Usage: cardano-cli babbage node key-gen [--key-output-format STRING]
                                          --cold-verification-key-file FILEPATH
                                          --cold-signing-key-file FILEPATH
                                          --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli babbage node key-gen-KES [--key-output-format STRING]
                                              --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli babbage node key-gen-VRF [--key-output-format STRING]
                                              --verification-key-file FILEPATH
                                              --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli babbage node key-hash-VRF 
                                               ( --verification-key STRING
                                               | --verification-key-file FILEPATH
                                               )
                                               [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli babbage node new-counter 
                                              ( --stake-pool-verification-key STRING
                                              | --genesis-delegate-verification-key STRING
                                              | --cold-verification-key-file FILEPATH
                                              )
                                              --counter-value INT
                                              --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli babbage node issue-op-cert 
                                                ( --kes-verification-key STRING
                                                | --kes-verification-key-file FILEPATH
                                                )
                                                --cold-signing-key-file FILEPATH
                                                --operational-certificate-issue-counter-file FILEPATH
                                                --kes-period NATURAL
                                                --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli babbage query 
                                   ( protocol-parameters
                                   | tip
                                   | stake-pools
                                   | stake-distribution
                                   | stake-address-info
                                   | utxo
                                   | ledger-state
                                   | protocol-state
                                   | stake-snapshot
                                   | leadership-schedule
                                   | kes-period-info
                                   | pool-state
                                   | tx-mempool
                                   | slot-number
                                   | ref-script-size
                                   )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli babbage query protocol-parameters --socket-path SOCKET_PATH
                                                       [--cardano-mode
                                                         [--epoch-slots SLOTS]]
                                                       ( --mainnet
                                                       | --testnet-magic NATURAL
                                                       )
                                                       [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli babbage query tip --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli babbage query stake-pools --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [--output-json | --output-text]
                                               [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli babbage query stake-distribution --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [ --output-json
                                                      | --output-text
                                                      ]
                                                      [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli babbage query stake-address-info --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      --address ADDRESS
                                                      [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli babbage query utxo --socket-path SOCKET_PATH
                                        [--cardano-mode [--epoch-slots SLOTS]]
                                        (--mainnet | --testnet-magic NATURAL)
                                        ( --whole-utxo
                                        | (--address ADDRESS)
                                        | (--tx-in TX-IN)
                                        )
                                        [--output-json | --output-text]
                                        [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli babbage query ledger-state --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli babbage query protocol-state --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli babbage query stake-snapshot --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  ( --all-stake-pools
                                                  | (--stake-pool-id STAKE_POOL_ID)
                                                  )
                                                  [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli babbage query pool-params --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               ( --all-stake-pools
                                               | (--stake-pool-id STAKE_POOL_ID)
                                               )
                                               [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli babbage query leadership-schedule --socket-path SOCKET_PATH
                                                       [--cardano-mode
                                                         [--epoch-slots SLOTS]]
                                                       ( --mainnet
                                                       | --testnet-magic NATURAL
                                                       )
                                                       --genesis FILEPATH
                                                       ( --stake-pool-verification-key STRING
                                                       | --cold-verification-key-file FILEPATH
                                                       | --stake-pool-id STAKE_POOL_ID
                                                       )
                                                       --vrf-signing-key-file FILEPATH
                                                       (--current | --next)
                                                       [ --output-json
                                                       | --output-text
                                                       ]
                                                       [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli babbage query kes-period-info --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --op-cert-file FILEPATH
                                                   [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli babbage query pool-state --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              ( --all-stake-pools
                                              | (--stake-pool-id STAKE_POOL_ID)
                                              )
                                              [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli babbage query tx-mempool --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              (info | next-tx | tx-exists)
                                              [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli babbage query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli babbage query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli babbage query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli babbage query slot-number --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli babbage query ref-script-size --socket-path SOCKET_PATH
                                                   [--cardano-mode
                                                     [--epoch-slots SLOTS]]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   (--tx-in TX-IN)
                                                   [ --output-json
                                                   | --output-text
                                                   ]
                                                   [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli babbage stake-address 
                                           ( key-gen
                                           | key-hash
                                           | build
                                           | registration-certificate
                                           | deregistration-certificate
                                           | stake-delegation-certificate
                                           )

  Stake address commands.

Usage: cardano-cli babbage stake-address key-gen [--key-output-format STRING]
                                                   --verification-key-file FILEPATH
                                                   --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli babbage stake-address key-hash 
                                                    ( --stake-verification-key STRING
                                                    | --stake-verification-key-file FILEPATH
                                                    )
                                                    [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli babbage stake-address build 
                                                 ( --stake-verification-key STRING
                                                 | --stake-verification-key-file FILEPATH
                                                 | --stake-key-hash HASH
                                                 | --stake-script-file FILEPATH
                                                 )
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli babbage stake-address registration-certificate 
                                                                    ( --stake-verification-key STRING
                                                                    | --stake-verification-key-file FILEPATH
                                                                    | --stake-key-hash HASH
                                                                    | --stake-script-file FILEPATH
                                                                    | --stake-address ADDRESS
                                                                    )
                                                                    --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli babbage stake-address deregistration-certificate 
                                                                      ( --stake-verification-key STRING
                                                                      | --stake-verification-key-file FILEPATH
                                                                      | --stake-key-hash HASH
                                                                      | --stake-script-file FILEPATH
                                                                      | --stake-address ADDRESS
                                                                      )
                                                                      --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli babbage stake-address stake-delegation-certificate 
                                                                        ( --stake-verification-key STRING
                                                                        | --stake-verification-key-file FILEPATH
                                                                        | --stake-key-hash HASH
                                                                        | --stake-script-file FILEPATH
                                                                        | --stake-address ADDRESS
                                                                        )
                                                                        ( --stake-pool-verification-key STRING
                                                                        | --cold-verification-key-file FILEPATH
                                                                        | --stake-pool-id STAKE_POOL_ID
                                                                        )
                                                                        --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli babbage stake-pool 
                                        ( registration-certificate
                                        | deregistration-certificate
                                        | id
                                        | metadata-hash
                                        )

  Stake pool commands.

Usage: cardano-cli babbage stake-pool registration-certificate 
                                                                 ( --stake-pool-verification-key STRING
                                                                 | --cold-verification-key-file FILEPATH
                                                                 )
                                                                 ( --vrf-verification-key STRING
                                                                 | --vrf-verification-key-file FILEPATH
                                                                 )
                                                                 --pool-pledge LOVELACE
                                                                 --pool-cost LOVELACE
                                                                 --pool-margin RATIONAL
                                                                 ( --pool-reward-account-verification-key STRING
                                                                 | --pool-reward-account-verification-key-file FILEPATH
                                                                 )
                                                                 ( --pool-owner-verification-key STRING
                                                                 | --pool-owner-stake-verification-key-file FILEPATH
                                                                 )
                                                                 [ [--pool-relay-ipv4 STRING]
                                                                   [--pool-relay-ipv6 STRING]
                                                                   --pool-relay-port INT
                                                                 | --single-host-pool-relay STRING
                                                                   [--pool-relay-port INT]
                                                                 | --multi-host-pool-relay STRING
                                                                 ]
                                                                 [--metadata-url URL
                                                                   --metadata-hash HASH
                                                                   [--check-metadata-hash]]
                                                                 ( --mainnet
                                                                 | --testnet-magic NATURAL
                                                                 )
                                                                 --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli babbage stake-pool deregistration-certificate 
                                                                   ( --stake-pool-verification-key STRING
                                                                   | --cold-verification-key-file FILEPATH
                                                                   )
                                                                   --epoch NATURAL
                                                                   --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli babbage stake-pool id 
                                           ( --stake-pool-verification-key STRING
                                           | --cold-verification-key-file FILEPATH
                                           )
                                           [--output-format STRING]
                                           [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli babbage stake-pool metadata-hash 
                                                      ( --pool-metadata-file FILEPATH
                                                      | --pool-metadata-url TEXT
                                                      )
                                                      [ --expected-hash HASH
                                                      | --out-file FILEPATH
                                                      ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli babbage text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli babbage text-view decode-cbor --in-file FILEPATH
                                                   [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli babbage transaction 
                                         ( build-raw
                                         | build
                                         | build-estimate
                                         | sign
                                         | witness
                                         | assemble
                                         | submit
                                         | policyid
                                         | calculate-min-fee
                                         | calculate-min-required-utxo
                                         | hash-script-data
                                         | txid
                                         )

  Transaction commands.

Usage: cardano-cli babbage transaction build-raw 
                                                   [ --script-valid
                                                   | --script-invalid
                                                   ]
                                                   (--tx-in TX-IN
                                                     [ --spending-tx-in-reference TX-IN
                                                       ( --spending-plutus-script-v2
                                                       | --spending-plutus-script-v3
                                                       )
                                                       ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                       | --spending-reference-tx-in-datum-file JSON_FILE
                                                       | --spending-reference-tx-in-datum-value JSON_VALUE
                                                       | --spending-reference-tx-in-inline-datum-present
                                                       )
                                                       ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                       | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --spending-reference-tx-in-execution-units (INT, INT)
                                                     | --simple-script-tx-in-reference TX-IN
                                                     | --tx-in-script-file FILEPATH
                                                       [
                                                         ( --tx-in-datum-cbor-file CBOR_FILE
                                                         | --tx-in-datum-file JSON_FILE
                                                         | --tx-in-datum-value JSON_VALUE
                                                         | --tx-in-inline-datum-present
                                                         )
                                                         ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                         | --tx-in-redeemer-file JSON_FILE
                                                         | --tx-in-redeemer-value JSON_VALUE
                                                         )
                                                         --tx-in-execution-units (INT, INT)]
                                                     ])
                                                   [--read-only-tx-in-reference TX-IN]
                                                   [--tx-in-collateral TX-IN]
                                                   [--tx-out-return-collateral ADDRESS VALUE]
                                                   [--tx-total-collateral INTEGER]
                                                   [ --required-signer FILEPATH
                                                   | --required-signer-hash HASH
                                                   ]
                                                   [--tx-out ADDRESS VALUE
                                                     [ --tx-out-datum-hash HASH
                                                     | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                     | --tx-out-datum-hash-file JSON_FILE
                                                     | --tx-out-datum-hash-value JSON_VALUE
                                                     | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                     | --tx-out-datum-embed-file JSON_FILE
                                                     | --tx-out-datum-embed-value JSON_VALUE
                                                     | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                     | --tx-out-inline-datum-file JSON_FILE
                                                     | --tx-out-inline-datum-value JSON_VALUE
                                                     ]
                                                     [--tx-out-reference-script-file FILEPATH]]
                                                   [--mint VALUE
                                                     ( --mint-script-file FILEPATH
                                                       [
                                                         ( --mint-redeemer-cbor-file CBOR_FILE
                                                         | --mint-redeemer-file JSON_FILE
                                                         | --mint-redeemer-value JSON_VALUE
                                                         )
                                                         --mint-execution-units (INT, INT)]
                                                     | --simple-minting-script-tx-in-reference TX-IN
                                                       --policy-id HASH
                                                     | --mint-tx-in-reference TX-IN
                                                       ( --mint-plutus-script-v2
                                                       | --mint-plutus-script-v3
                                                       )
                                                       ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                       | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --mint-reference-tx-in-execution-units (INT, INT)
                                                       --policy-id HASH
                                                     )]
                                                   [--invalid-before SLOT]
                                                   [--invalid-hereafter SLOT]
                                                   --fee LOVELACE
                                                   [--certificate-file FILEPATH
                                                     [ --certificate-script-file FILEPATH
                                                       [
                                                         ( --certificate-redeemer-cbor-file CBOR_FILE
                                                         | --certificate-redeemer-file JSON_FILE
                                                         | --certificate-redeemer-value JSON_VALUE
                                                         )
                                                         --certificate-execution-units (INT, INT)]
                                                     | --certificate-tx-in-reference TX-IN
                                                       ( --certificate-plutus-script-v2
                                                       | --certificate-plutus-script-v3
                                                       )
                                                       ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                       | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --certificate-reference-tx-in-execution-units (INT, INT)
                                                     ]]
                                                   [--withdrawal WITHDRAWAL
                                                     [ --withdrawal-script-file FILEPATH
                                                       [
                                                         ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                         | --withdrawal-redeemer-file JSON_FILE
                                                         | --withdrawal-redeemer-value JSON_VALUE
                                                         )
                                                         --withdrawal-execution-units (INT, INT)]
                                                     | --withdrawal-tx-in-reference TX-IN
                                                       ( --withdrawal-plutus-script-v2
                                                       | --withdrawal-plutus-script-v3
                                                       )
                                                       ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                       | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                       | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                       )
                                                       --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                     ]]
                                                   [ --json-metadata-no-schema
                                                   | --json-metadata-detailed-schema
                                                   ]
                                                   [--auxiliary-script-file FILEPATH]
                                                   [ --metadata-json-file FILEPATH
                                                   | --metadata-cbor-file FILEPATH
                                                   ]
                                                   [--protocol-params-file FILEPATH]
                                                   [--update-proposal-file FILEPATH]
                                                   --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli babbage transaction build --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [ --script-valid
                                               | --script-invalid
                                               ]
                                               [--witness-override WORD]
                                               (--tx-in TX-IN
                                                 [ --spending-tx-in-reference TX-IN
                                                   ( --spending-plutus-script-v2
                                                   | --spending-plutus-script-v3
                                                   )
                                                   ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                   | --spending-reference-tx-in-datum-file JSON_FILE
                                                   | --spending-reference-tx-in-datum-value JSON_VALUE
                                                   | --spending-reference-tx-in-inline-datum-present
                                                   )
                                                   ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                   | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                   | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                   )
                                                 | --simple-script-tx-in-reference TX-IN
                                                 | --tx-in-script-file FILEPATH
                                                   [
                                                     ( --tx-in-datum-cbor-file CBOR_FILE
                                                     | --tx-in-datum-file JSON_FILE
                                                     | --tx-in-datum-value JSON_VALUE
                                                     | --tx-in-inline-datum-present
                                                     )
                                                     ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                     | --tx-in-redeemer-file JSON_FILE
                                                     | --tx-in-redeemer-value JSON_VALUE
                                                     )]
                                                 ])
                                               [--read-only-tx-in-reference TX-IN]
                                               [ --required-signer FILEPATH
                                               | --required-signer-hash HASH
                                               ]
                                               [--tx-in-collateral TX-IN]
                                               [--tx-out-return-collateral ADDRESS VALUE]
                                               [--tx-total-collateral INTEGER]
                                               [--tx-out ADDRESS VALUE
                                                 [ --tx-out-datum-hash HASH
                                                 | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                 | --tx-out-datum-hash-file JSON_FILE
                                                 | --tx-out-datum-hash-value JSON_VALUE
                                                 | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                 | --tx-out-datum-embed-file JSON_FILE
                                                 | --tx-out-datum-embed-value JSON_VALUE
                                                 | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                 | --tx-out-inline-datum-file JSON_FILE
                                                 | --tx-out-inline-datum-value JSON_VALUE
                                                 ]
                                                 [--tx-out-reference-script-file FILEPATH]]
                                               --change-address ADDRESS
                                               [--mint VALUE
                                                 ( --mint-script-file FILEPATH
                                                   [ --mint-redeemer-cbor-file CBOR_FILE
                                                   | --mint-redeemer-file JSON_FILE
                                                   | --mint-redeemer-value JSON_VALUE
                                                   ]
                                                 | --simple-minting-script-tx-in-reference TX-IN
                                                   --policy-id HASH
                                                 | --mint-tx-in-reference TX-IN
                                                   ( --mint-plutus-script-v2
                                                   | --mint-plutus-script-v3
                                                   )
                                                   ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                   | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                   | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                   )
                                                   --policy-id HASH
                                                 )]
                                               [--invalid-before SLOT]
                                               [--invalid-hereafter SLOT]
                                               [--certificate-file FILEPATH
                                                 [ --certificate-script-file FILEPATH
                                                   [ --certificate-redeemer-cbor-file CBOR_FILE
                                                   | --certificate-redeemer-file JSON_FILE
                                                   | --certificate-redeemer-value JSON_VALUE
                                                   ]
                                                 | --certificate-tx-in-reference TX-IN
                                                   ( --certificate-plutus-script-v2
                                                   | --certificate-plutus-script-v3
                                                   )
                                                   ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                   | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                   | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                   )
                                                 ]]
                                               [--withdrawal WITHDRAWAL
                                                 [ --withdrawal-script-file FILEPATH
                                                   [ --withdrawal-redeemer-cbor-file CBOR_FILE
                                                   | --withdrawal-redeemer-file JSON_FILE
                                                   | --withdrawal-redeemer-value JSON_VALUE
                                                   ]
                                                 | --withdrawal-tx-in-reference TX-IN
                                                   ( --withdrawal-plutus-script-v2
                                                   | --withdrawal-plutus-script-v3
                                                   )
                                                   ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                   | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                   | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                   )
                                                 ]]
                                               [ --json-metadata-no-schema
                                               | --json-metadata-detailed-schema
                                               ]
                                               [--auxiliary-script-file FILEPATH]
                                               [ --metadata-json-file FILEPATH
                                               | --metadata-cbor-file FILEPATH
                                               ]
                                               [--update-proposal-file FILEPATH]
                                               ( --out-file FILEPATH
                                               | --calculate-plutus-script-cost FILEPATH
                                               )

  Build a balanced transaction (automatically calculates fees)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli babbage transaction build-estimate 
                                                        [ --script-valid
                                                        | --script-invalid
                                                        ]
                                                        --shelley-key-witnesses INT
                                                        [--byron-key-witnesses Int]
                                                        --protocol-params-file FILEPATH
                                                        --total-utxo-value VALUE
                                                        (--tx-in TX-IN
                                                          [ --spending-tx-in-reference TX-IN
                                                            ( --spending-plutus-script-v2
                                                            | --spending-plutus-script-v3
                                                            )
                                                            ( --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                            | --spending-reference-tx-in-datum-file JSON_FILE
                                                            | --spending-reference-tx-in-datum-value JSON_VALUE
                                                            | --spending-reference-tx-in-inline-datum-present
                                                            )
                                                            ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                            | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                            | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                            )
                                                            --spending-reference-tx-in-execution-units (INT, INT)
                                                          | --simple-script-tx-in-reference TX-IN
                                                          | --tx-in-script-file FILEPATH
                                                            [
                                                              ( --tx-in-datum-cbor-file CBOR_FILE
                                                              | --tx-in-datum-file JSON_FILE
                                                              | --tx-in-datum-value JSON_VALUE
                                                              | --tx-in-inline-datum-present
                                                              )
                                                              ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                              | --tx-in-redeemer-file JSON_FILE
                                                              | --tx-in-redeemer-value JSON_VALUE
                                                              )
                                                              --tx-in-execution-units (INT, INT)]
                                                          ])
                                                        [--read-only-tx-in-reference TX-IN]
                                                        [ --required-signer FILEPATH
                                                        | --required-signer-hash HASH
                                                        ]
                                                        [--tx-in-collateral TX-IN]
                                                        [--tx-out-return-collateral ADDRESS VALUE]
                                                        [--tx-out ADDRESS VALUE
                                                          [ --tx-out-datum-hash HASH
                                                          | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                          | --tx-out-datum-hash-file JSON_FILE
                                                          | --tx-out-datum-hash-value JSON_VALUE
                                                          | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                          | --tx-out-datum-embed-file JSON_FILE
                                                          | --tx-out-datum-embed-value JSON_VALUE
                                                          | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                          | --tx-out-inline-datum-file JSON_FILE
                                                          | --tx-out-inline-datum-value JSON_VALUE
                                                          ]
                                                          [--tx-out-reference-script-file FILEPATH]]
                                                        --change-address ADDRESS
                                                        [--mint VALUE
                                                          ( --mint-script-file FILEPATH
                                                            [
                                                              ( --mint-redeemer-cbor-file CBOR_FILE
                                                              | --mint-redeemer-file JSON_FILE
                                                              | --mint-redeemer-value JSON_VALUE
                                                              )
                                                              --mint-execution-units (INT, INT)]
                                                          | --simple-minting-script-tx-in-reference TX-IN
                                                            --policy-id HASH
                                                          | --mint-tx-in-reference TX-IN
                                                            ( --mint-plutus-script-v2
                                                            | --mint-plutus-script-v3
                                                            )
                                                            ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                            | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                            | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                            )
                                                            --mint-reference-tx-in-execution-units (INT, INT)
                                                            --policy-id HASH
                                                          )]
                                                        [--invalid-before SLOT]
                                                        [--invalid-hereafter SLOT]
                                                        [
                                                          --certificate-file FILEPATH
                                                          [ --certificate-script-file FILEPATH
                                                            [
                                                              ( --certificate-redeemer-cbor-file CBOR_FILE
                                                              | --certificate-redeemer-file JSON_FILE
                                                              | --certificate-redeemer-value JSON_VALUE
                                                              )
                                                              --certificate-execution-units (INT, INT)]
                                                          | --certificate-tx-in-reference TX-IN
                                                            ( --certificate-plutus-script-v2
                                                            | --certificate-plutus-script-v3
                                                            )
                                                            ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                            | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                            | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                            )
                                                            --certificate-reference-tx-in-execution-units (INT, INT)
                                                          ]]
                                                        [--withdrawal WITHDRAWAL
                                                          [ --withdrawal-script-file FILEPATH
                                                            [
                                                              ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                              | --withdrawal-redeemer-file JSON_FILE
                                                              | --withdrawal-redeemer-value JSON_VALUE
                                                              )
                                                              --withdrawal-execution-units (INT, INT)]
                                                          | --withdrawal-tx-in-reference TX-IN
                                                            ( --withdrawal-plutus-script-v2
                                                            | --withdrawal-plutus-script-v3
                                                            )
                                                            ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                            | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                            | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                            )
                                                            --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                          ]]
                                                        [--tx-total-collateral INTEGER]
                                                        [--reference-script-size NATURAL]
                                                        [ --json-metadata-no-schema
                                                        | --json-metadata-detailed-schema
                                                        ]
                                                        [--auxiliary-script-file FILEPATH]
                                                        [ --metadata-json-file FILEPATH
                                                        | --metadata-cbor-file FILEPATH
                                                        ]
                                                        [--update-proposal-file FILEPATH]
                                                        --out-file FILEPATH

  Build a balanced transaction without access to a live node (automatically estimates fees)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli babbage transaction sign 
                                              ( --tx-body-file FILEPATH
                                              | --tx-file FILEPATH
                                              )
                                              [--signing-key-file FILEPATH
                                                [--address STRING]]
                                              [ --mainnet
                                              | --testnet-magic NATURAL
                                              ]
                                              --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli babbage transaction witness --tx-body-file FILEPATH
                                                 --signing-key-file FILEPATH
                                                 [--address STRING]
                                                 [ --mainnet
                                                 | --testnet-magic NATURAL
                                                 ]
                                                 --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli babbage transaction assemble --tx-body-file FILEPATH
                                                  [--witness-file FILEPATH]
                                                  --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli babbage transaction sign-witness --tx-body-file FILEPATH
                                                      [--witness-file FILEPATH]
                                                      --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli babbage transaction submit --socket-path SOCKET_PATH
                                                [--cardano-mode
                                                  [--epoch-slots SLOTS]]
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli babbage transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli babbage transaction calculate-min-fee --tx-body-file FILEPATH
                                                           --protocol-params-file FILEPATH
                                                           --witness-count NATURAL
                                                           [--byron-witness-count NATURAL]
                                                           [--reference-script-size NATURAL]
                                                           [ --output-json
                                                           | --output-text
                                                           ]
                                                           [--out-file FILEPATH]
                                                           [ --mainnet
                                                           | --testnet-magic NATURAL
                                                           ]
                                                           [--tx-in-count NATURAL]
                                                           [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli babbage transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                     --tx-out ADDRESS VALUE
                                                                     [ --tx-out-datum-hash HASH
                                                                     | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                     | --tx-out-datum-hash-file JSON_FILE
                                                                     | --tx-out-datum-hash-value JSON_VALUE
                                                                     | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                     | --tx-out-datum-embed-file JSON_FILE
                                                                     | --tx-out-datum-embed-value JSON_VALUE
                                                                     | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                     | --tx-out-inline-datum-file JSON_FILE
                                                                     | --tx-out-inline-datum-value JSON_VALUE
                                                                     ]
                                                                     [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli babbage transaction calculate-min-value --protocol-params-file FILEPATH
                                                             --tx-out ADDRESS VALUE
                                                             [ --tx-out-datum-hash HASH
                                                             | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                             | --tx-out-datum-hash-file JSON_FILE
                                                             | --tx-out-datum-hash-value JSON_VALUE
                                                             | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                             | --tx-out-datum-embed-file JSON_FILE
                                                             | --tx-out-datum-embed-value JSON_VALUE
                                                             | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                             | --tx-out-inline-datum-file JSON_FILE
                                                             | --tx-out-inline-datum-value JSON_VALUE
                                                             ]
                                                             [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli babbage transaction hash-script-data 
                                                          ( --script-data-cbor-file CBOR_FILE
                                                          | --script-data-file JSON_FILE
                                                          | --script-data-value JSON_VALUE
                                                          )

  Calculate the hash of script data.

Usage: cardano-cli babbage transaction txid 
                                              ( --tx-body-file FILEPATH
                                              | --tx-file FILEPATH
                                              )

  Print a transaction identifier.

Usage: cardano-cli conway 
                            ( address
                            | key
                            | genesis
                            | governance
                            | node
                            | query
                            | stake-address
                            | stake-pool
                            | text-view
                            | transaction
                            )

  Conway era commands

Usage: cardano-cli conway address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli conway address key-gen [--key-output-format STRING]
                                            [ --normal-key
                                            | --extended-key
                                            | --byron-key
                                            ]
                                            --verification-key-file FILEPATH
                                            --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli conway address key-hash 
                                             ( --payment-verification-key STRING
                                             | --payment-verification-key-file FILEPATH
                                             )
                                             [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli conway address build 
                                          ( --payment-verification-key STRING
                                          | --payment-verification-key-file FILEPATH
                                          | --payment-script-file FILEPATH
                                          )
                                          [ --stake-verification-key STRING
                                          | --stake-verification-key-file FILEPATH
                                          | --stake-key-hash HASH
                                          | --stake-script-file FILEPATH
                                          | --stake-address ADDRESS
                                          ]
                                          (--mainnet | --testnet-magic NATURAL)
                                          [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli conway address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli conway key 
                                ( verification-key
                                | non-extended-key
                                | convert-byron-key
                                | convert-byron-genesis-vkey
                                | convert-itn-key
                                | convert-itn-extended-key
                                | convert-itn-bip32-key
                                | convert-cardano-address-key
                                )

  Key utility commands.

Usage: cardano-cli conway key verification-key --signing-key-file FILEPATH
                                                 --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli conway key non-extended-key --extended-verification-key-file FILEPATH
                                                 --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli conway key convert-byron-key [--password TEXT]
                                                  ( --byron-payment-key-type
                                                  | --legacy-byron-payment-key-type
                                                  | --byron-genesis-key-type
                                                  | --legacy-byron-genesis-key-type
                                                  | --byron-genesis-delegate-key-type
                                                  | --legacy-byron-genesis-delegate-key-type
                                                  )
                                                  ( --byron-signing-key-file FILEPATH
                                                  | --byron-verification-key-file FILEPATH
                                                  )
                                                  --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli conway key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                           --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli conway key convert-itn-key 
                                                ( --itn-signing-key-file FILEPATH
                                                | --itn-verification-key-file FILEPATH
                                                )
                                                --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli conway key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                         --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli conway key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                      --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli conway key convert-cardano-address-key 
                                                            ( --cc-cold-key
                                                            | --cc-hot-key
                                                            | --drep-key
                                                            | --shelley-payment-key
                                                            | --shelley-stake-key
                                                            | --icarus-payment-key
                                                            | --byron-payment-key
                                                            )
                                                            --signing-key-file FILEPATH
                                                            --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli conway genesis 
                                    ( key-gen-genesis
                                    | key-gen-delegate
                                    | key-gen-utxo
                                    | key-hash
                                    | get-ver-key
                                    | initial-addr
                                    | initial-txin
                                    | create-cardano
                                    | create
                                    | create-staked
                                    | create-testnet-data
                                    | hash
                                    )

  Genesis block commands.

Usage: cardano-cli conway genesis key-gen-genesis --verification-key-file FILEPATH
                                                    --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli conway genesis key-gen-delegate --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH
                                                     --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli conway genesis key-gen-utxo --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli conway genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli conway genesis get-ver-key --verification-key-file FILEPATH
                                                --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli conway genesis initial-addr --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli conway genesis initial-txin --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli conway genesis create-cardano --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--security-param INT]
                                                   [--slot-length INT]
                                                   [--slot-coefficient RATIONAL]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --byron-template FILEPATH
                                                   --shelley-template FILEPATH
                                                   --alonzo-template FILEPATH
                                                   --conway-template FILEPATH
                                                   [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli conway genesis create [--key-output-format STRING]
                                           --genesis-dir DIR
                                           [--gen-genesis-keys INT]
                                           [--gen-utxo-keys INT]
                                           [--start-time UTC-TIME]
                                           [--supply LOVELACE]
                                           (--mainnet | --testnet-magic NATURAL)

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli conway genesis create-staked [--key-output-format STRING]
                                                  --genesis-dir DIR
                                                  [--gen-genesis-keys INT]
                                                  [--gen-utxo-keys INT]
                                                  [--gen-pools INT]
                                                  [--gen-stake-delegs INT]
                                                  [--start-time UTC-TIME]
                                                  [--supply LOVELACE]
                                                  [--supply-delegated LOVELACE]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--bulk-pool-cred-files INT]
                                                  [--bulk-pools-per-file INT]
                                                  [--num-stuffed-utxo INT]
                                                  [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli conway genesis create-testnet-data [--spec-shelley FILEPATH]
                                                        [--spec-alonzo FILEPATH]
                                                        [--spec-conway FILEPATH]
                                                        [--genesis-keys INT]
                                                        [--pools INT]
                                                        [ --stake-delegators INT
                                                        | --transient-stake-delegators INT
                                                        ]
                                                        [--committee-keys INT]
                                                        [ --drep-keys INT
                                                        | --transient-drep-keys INT
                                                        ]
                                                        [--stuffed-utxo INT]
                                                        [--utxo-keys INT]
                                                        [--total-supply LOVELACE]
                                                        [--delegated-supply LOVELACE]
                                                        [--testnet-magic NATURAL]
                                                        [--relays FILEPATH]
                                                        [--start-time UTC-TIME]
                                                        --out-dir DIR

  Create data to use for starting a testnet.

Usage: cardano-cli conway genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli conway governance (action | committee | drep | vote)

  Governance commands.

Usage: cardano-cli conway governance action 
                                              ( create-constitution
                                              | update-committee
                                              | create-info
                                              | create-no-confidence
                                              | create-protocol-parameters-update
                                              | create-treasury-withdrawal
                                              | create-hardfork
                                              | view
                                              )

  Governance action commands.

Usage: cardano-cli conway governance action create-constitution 
                                                                  ( --mainnet
                                                                  | --testnet
                                                                  )
                                                                  --governance-action-deposit NATURAL
                                                                  ( --deposit-return-stake-verification-key STRING
                                                                  | --deposit-return-stake-verification-key-file FILEPATH
                                                                  | --deposit-return-stake-key-hash HASH
                                                                  | --deposit-return-stake-script-file FILEPATH
                                                                  | --deposit-return-stake-address ADDRESS
                                                                  )
                                                                  [--prev-governance-action-tx-id TXID
                                                                    --prev-governance-action-index WORD16]
                                                                  --anchor-url TEXT
                                                                  --anchor-data-hash HASH
                                                                  [--check-anchor-data]
                                                                  --constitution-url TEXT
                                                                  --constitution-hash HASH
                                                                  [--check-constitution-hash]
                                                                  [--constitution-script-hash HASH]
                                                                  --out-file FILEPATH

  Create a constitution.

Usage: cardano-cli conway governance action update-committee 
                                                               ( --mainnet
                                                               | --testnet
                                                               )
                                                               --governance-action-deposit NATURAL
                                                               ( --deposit-return-stake-verification-key STRING
                                                               | --deposit-return-stake-verification-key-file FILEPATH
                                                               | --deposit-return-stake-key-hash HASH
                                                               | --deposit-return-stake-script-file FILEPATH
                                                               | --deposit-return-stake-address ADDRESS
                                                               )
                                                               --anchor-url TEXT
                                                               --anchor-data-hash HASH
                                                               [--check-anchor-data]
                                                               [ --remove-cc-cold-verification-key STRING
                                                               | --remove-cc-cold-verification-key-file FILEPATH
                                                               | --remove-cc-cold-verification-key-hash STRING
                                                               | --remove-cc-cold-script-hash HASH
                                                               ]
                                                               [
                                                                 ( --add-cc-cold-verification-key STRING
                                                                 | --add-cc-cold-verification-key-file FILEPATH
                                                                 | --add-cc-cold-verification-key-hash STRING
                                                                 | --add-cc-cold-script-hash HASH
                                                                 )
                                                                 --epoch NATURAL]
                                                               --threshold RATIONAL
                                                               [--prev-governance-action-tx-id TXID
                                                                 --prev-governance-action-index WORD16]
                                                               --out-file FILEPATH

  Create or update a new committee proposal.

Usage: cardano-cli conway governance action create-info (--mainnet | --testnet)
                                                          --governance-action-deposit NATURAL
                                                          ( --deposit-return-stake-verification-key STRING
                                                          | --deposit-return-stake-verification-key-file FILEPATH
                                                          | --deposit-return-stake-key-hash HASH
                                                          | --deposit-return-stake-script-file FILEPATH
                                                          | --deposit-return-stake-address ADDRESS
                                                          )
                                                          --anchor-url TEXT
                                                          --anchor-data-hash HASH
                                                          [--check-anchor-data]
                                                          --out-file FILEPATH

  Create an info action.

Usage: cardano-cli conway governance action create-no-confidence 
                                                                   ( --mainnet
                                                                   | --testnet
                                                                   )
                                                                   --governance-action-deposit NATURAL
                                                                   ( --deposit-return-stake-verification-key STRING
                                                                   | --deposit-return-stake-verification-key-file FILEPATH
                                                                   | --deposit-return-stake-key-hash HASH
                                                                   | --deposit-return-stake-script-file FILEPATH
                                                                   | --deposit-return-stake-address ADDRESS
                                                                   )
                                                                   --anchor-url TEXT
                                                                   --anchor-data-hash HASH
                                                                   [--check-anchor-data]
                                                                   [--prev-governance-action-tx-id TXID
                                                                     --prev-governance-action-index WORD16]
                                                                   --out-file FILEPATH

  Create a no confidence proposal.

Usage: cardano-cli conway governance action create-protocol-parameters-update 
                                                                                ( --mainnet
                                                                                | --testnet
                                                                                )
                                                                                --governance-action-deposit NATURAL
                                                                                ( --deposit-return-stake-verification-key STRING
                                                                                | --deposit-return-stake-verification-key-file FILEPATH
                                                                                | --deposit-return-stake-key-hash HASH
                                                                                | --deposit-return-stake-script-file FILEPATH
                                                                                | --deposit-return-stake-address ADDRESS
                                                                                )
                                                                                --anchor-url TEXT
                                                                                --anchor-data-hash HASH
                                                                                [--check-anchor-data]
                                                                                [--prev-governance-action-tx-id TXID
                                                                                  --prev-governance-action-index WORD16]
                                                                                [--constitution-script-hash HASH]
                                                                                [--min-fee-linear LOVELACE]
                                                                                [--min-fee-constant LOVELACE]
                                                                                [--max-block-body-size WORD32]
                                                                                [--max-tx-size WORD32]
                                                                                [--max-block-header-size WORD16]
                                                                                [--key-reg-deposit-amt NATURAL]
                                                                                [--pool-reg-deposit NATURAL]
                                                                                [--pool-retirement-epoch-interval WORD32]
                                                                                [--number-of-pools NATURAL]
                                                                                [--pool-influence RATIONAL]
                                                                                [--treasury-expansion RATIONAL]
                                                                                [--monetary-expansion RATIONAL]
                                                                                [--min-pool-cost NATURAL]
                                                                                [--price-execution-steps RATIONAL
                                                                                  --price-execution-memory RATIONAL]
                                                                                [--max-tx-execution-units (INT, INT)]
                                                                                [--max-block-execution-units (INT, INT)]
                                                                                [--max-value-size INT]
                                                                                [--collateral-percent INT]
                                                                                [--max-collateral-inputs INT]
                                                                                [--utxo-cost-per-byte LOVELACE]
                                                                                [--pool-voting-threshold-motion-no-confidence RATIONAL
                                                                                  --pool-voting-threshold-committee-normal RATIONAL
                                                                                  --pool-voting-threshold-committee-no-confidence RATIONAL
                                                                                  --pool-voting-threshold-hard-fork-initiation RATIONAL
                                                                                  --pool-voting-threshold-pp-security-group RATIONAL]
                                                                                [--drep-voting-threshold-motion-no-confidence RATIONAL
                                                                                  --drep-voting-threshold-committee-normal RATIONAL
                                                                                  --drep-voting-threshold-committee-no-confidence RATIONAL
                                                                                  --drep-voting-threshold-update-to-constitution RATIONAL
                                                                                  --drep-voting-threshold-hard-fork-initiation RATIONAL
                                                                                  --drep-voting-threshold-pp-network-group RATIONAL
                                                                                  --drep-voting-threshold-pp-economic-group RATIONAL
                                                                                  --drep-voting-threshold-pp-technical-group RATIONAL
                                                                                  --drep-voting-threshold-pp-governance-group RATIONAL
                                                                                  --drep-voting-threshold-treasury-withdrawal RATIONAL]
                                                                                [--min-committee-size INT]
                                                                                [--committee-term-length WORD32]
                                                                                [--governance-action-lifetime WORD32]
                                                                                [--new-governance-action-deposit NATURAL]
                                                                                [--drep-deposit LOVELACE]
                                                                                [--drep-activity WORD32]
                                                                                [--ref-script-cost-per-byte RATIONAL]
                                                                                [--cost-model-file FILE]
                                                                                --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli conway governance action create-treasury-withdrawal 
                                                                         ( --mainnet
                                                                         | --testnet
                                                                         )
                                                                         --governance-action-deposit NATURAL
                                                                         ( --deposit-return-stake-verification-key STRING
                                                                         | --deposit-return-stake-verification-key-file FILEPATH
                                                                         | --deposit-return-stake-key-hash HASH
                                                                         | --deposit-return-stake-script-file FILEPATH
                                                                         | --deposit-return-stake-address ADDRESS
                                                                         )
                                                                         --anchor-url TEXT
                                                                         --anchor-data-hash HASH
                                                                         [--check-anchor-data]
                                                                         (
                                                                           ( --funds-receiving-stake-verification-key STRING
                                                                           | --funds-receiving-stake-verification-key-file FILEPATH
                                                                           | --funds-receiving-stake-key-hash HASH
                                                                           | --funds-receiving-stake-script-file FILEPATH
                                                                           | --funds-receiving-stake-address ADDRESS
                                                                           )
                                                                           --transfer LOVELACE)
                                                                         [--constitution-script-hash HASH]
                                                                         --out-file FILEPATH

  Create a treasury withdrawal.

Usage: cardano-cli conway governance action create-hardfork 
                                                              ( --mainnet
                                                              | --testnet
                                                              )
                                                              --governance-action-deposit NATURAL
                                                              ( --deposit-return-stake-verification-key STRING
                                                              | --deposit-return-stake-verification-key-file FILEPATH
                                                              | --deposit-return-stake-key-hash HASH
                                                              | --deposit-return-stake-script-file FILEPATH
                                                              | --deposit-return-stake-address ADDRESS
                                                              )
                                                              [--prev-governance-action-tx-id TXID
                                                                --prev-governance-action-index WORD16]
                                                              --anchor-url TEXT
                                                              --anchor-data-hash HASH
                                                              [--check-anchor-data]
                                                              --protocol-major-version MAJOR
                                                              --protocol-minor-version MINOR
                                                              --out-file FILEPATH

  Create a hardfork initiation proposal.

Usage: cardano-cli conway governance action view --action-file FILEPATH
                                                   [ --output-json
                                                   | --output-yaml
                                                   ]
                                                   [--out-file FILEPATH]

  View a governance action.

Usage: cardano-cli conway governance committee 
                                                 ( key-gen-cold
                                                 | key-gen-hot
                                                 | key-hash
                                                 | create-hot-key-authorization-certificate
                                                 | create-cold-key-resignation-certificate
                                                 )

  Committee member commands.

Usage: cardano-cli conway governance committee key-gen-cold 
                                                              --cold-verification-key-file FILEPATH
                                                              --cold-signing-key-file FILEPATH

  Create a cold key pair for a Constitutional Committee Member

Usage: cardano-cli conway governance committee key-gen-hot --verification-key-file FILEPATH
                                                             --signing-key-file FILEPATH

  Create a hot key pair for a Constitutional Committee Member

Usage: cardano-cli conway governance committee key-hash 
                                                          ( --verification-key STRING
                                                          | --verification-key-file FILEPATH
                                                          )

  Print the identifier (hash) of a public key

Usage: cardano-cli conway governance committee create-hot-key-authorization-certificate 
                                                                                          ( --cold-verification-key STRING
                                                                                          | --cold-verification-key-file FILEPATH
                                                                                          | --cold-verification-key-hash STRING
                                                                                          | --cold-script-hash HASH
                                                                                          | --cold-script-file FILEPATH
                                                                                          )
                                                                                          ( --hot-verification-key STRING
                                                                                          | --hot-verification-key-file FILEPATH
                                                                                          | --hot-verification-key-hash STRING
                                                                                          | --hot-script-hash HASH
                                                                                          | --hot-script-file FILEPATH
                                                                                          )
                                                                                          --out-file FILEPATH

  Create hot key authorization certificate for a Constitutional Committee Member

Usage: cardano-cli conway governance committee create-cold-key-resignation-certificate 
                                                                                         ( --cold-verification-key STRING
                                                                                         | --cold-verification-key-file FILEPATH
                                                                                         | --cold-verification-key-hash STRING
                                                                                         | --cold-script-hash HASH
                                                                                         | --cold-script-file FILEPATH
                                                                                         )
                                                                                         [--resignation-metadata-url TEXT
                                                                                           --resignation-metadata-hash HASH
                                                                                           [--check-resignation-metadata-hash]]
                                                                                         --out-file FILEPATH

  Create cold key resignation certificate for a Constitutional Committee Member

Usage: cardano-cli conway governance drep 
                                            ( key-gen
                                            | id
                                            | registration-certificate
                                            | retirement-certificate
                                            | update-certificate
                                            | metadata-hash
                                            )

  DRep member commands.

Usage: cardano-cli conway governance drep key-gen --verification-key-file FILEPATH
                                                    --signing-key-file FILEPATH

  Generate Delegated Representative verification and signing keys.

Usage: cardano-cli conway governance drep id 
                                               ( --drep-verification-key STRING
                                               | --drep-verification-key-file FILEPATH
                                               )
                                               [--output-format STRING]
                                               [--out-file FILEPATH]

  Generate a drep id.

Usage: cardano-cli conway governance drep registration-certificate 
                                                                     ( --drep-script-hash HASH
                                                                     | --drep-verification-key STRING
                                                                     | --drep-verification-key-file FILEPATH
                                                                     | --drep-key-hash HASH
                                                                     )
                                                                     --key-reg-deposit-amt NATURAL
                                                                     [--drep-metadata-url TEXT
                                                                       --drep-metadata-hash HASH
                                                                       [--check-drep-metadata-hash]]
                                                                     --out-file FILEPATH

  Create a registration certificate.

Usage: cardano-cli conway governance drep retirement-certificate 
                                                                   ( --drep-script-hash HASH
                                                                   | --drep-verification-key STRING
                                                                   | --drep-verification-key-file FILEPATH
                                                                   | --drep-key-hash HASH
                                                                   )
                                                                   --deposit-amt LOVELACE
                                                                   --out-file FILEPATH

  Create a DRep retirement certificate.

Usage: cardano-cli conway governance drep update-certificate 
                                                               ( --drep-script-hash HASH
                                                               | --drep-verification-key STRING
                                                               | --drep-verification-key-file FILEPATH
                                                               | --drep-key-hash HASH
                                                               )
                                                               [--drep-metadata-url TEXT
                                                                 --drep-metadata-hash HASH
                                                                 [--check-drep-metadata-hash]]
                                                               --out-file FILEPATH

  Create a DRep update certificate.

Usage: cardano-cli conway governance drep metadata-hash 
                                                          ( --drep-metadata-file FILEPATH
                                                          | --drep-metadata-url TEXT
                                                          )
                                                          [ --expected-hash HASH
                                                          | --out-file FILEPATH
                                                          ]

  Calculate the hash of a metadata file, optionally checking the obtained hash
  against an expected value.

Usage: cardano-cli conway governance vote (create | view)

  Vote commands.

Usage: cardano-cli conway governance vote create (--yes | --no | --abstain)
                                                   --governance-action-tx-id TXID
                                                   --governance-action-index WORD16
                                                   ( --drep-verification-key STRING
                                                   | --drep-verification-key-file FILEPATH
                                                   | --drep-key-hash HASH
                                                   | --drep-script-hash HASH
                                                   | --stake-pool-verification-key STRING
                                                   | --cold-verification-key-file FILEPATH
                                                   | --stake-pool-id STAKE_POOL_ID
                                                   | --cc-hot-verification-key STRING
                                                   | --cc-hot-verification-key-file FILEPATH
                                                   | --cc-hot-key-hash STRING
                                                   | --cc-hot-script-hash HASH
                                                   )
                                                   [--anchor-url TEXT
                                                     --anchor-data-hash HASH
                                                     [--check-anchor-data-hash]]
                                                   --out-file FILEPATH

  Vote creation.

Usage: cardano-cli conway governance vote view [--output-json | --output-yaml]
                                                 --vote-file FILEPATH
                                                 [--out-file FILEPATH]

  Vote viewing.

Usage: cardano-cli conway node 
                                 ( key-gen
                                 | key-gen-KES
                                 | key-gen-VRF
                                 | key-hash-VRF
                                 | new-counter
                                 | issue-op-cert
                                 )

  Node operation commands.

Usage: cardano-cli conway node key-gen [--key-output-format STRING]
                                         --cold-verification-key-file FILEPATH
                                         --cold-signing-key-file FILEPATH
                                         --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli conway node key-gen-KES [--key-output-format STRING]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli conway node key-gen-VRF [--key-output-format STRING]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli conway node key-hash-VRF 
                                              ( --verification-key STRING
                                              | --verification-key-file FILEPATH
                                              )
                                              [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli conway node new-counter 
                                             ( --stake-pool-verification-key STRING
                                             | --genesis-delegate-verification-key STRING
                                             | --cold-verification-key-file FILEPATH
                                             )
                                             --counter-value INT
                                             --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli conway node issue-op-cert 
                                               ( --kes-verification-key STRING
                                               | --kes-verification-key-file FILEPATH
                                               )
                                               --cold-signing-key-file FILEPATH
                                               --operational-certificate-issue-counter-file FILEPATH
                                               --kes-period NATURAL
                                               --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli conway query 
                                  ( protocol-parameters
                                  | tip
                                  | stake-pools
                                  | stake-distribution
                                  | stake-address-info
                                  | utxo
                                  | ledger-state
                                  | protocol-state
                                  | stake-snapshot
                                  | leadership-schedule
                                  | kes-period-info
                                  | pool-state
                                  | tx-mempool
                                  | slot-number
                                  | ref-script-size
                                  | constitution
                                  | gov-state
                                  | drep-state
                                  | drep-stake-distribution
                                  | spo-stake-distribution
                                  | committee-state
                                  | treasury
                                  | proposals
                                  )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli conway query protocol-parameters --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli conway query tip --socket-path SOCKET_PATH
                                      [--cardano-mode [--epoch-slots SLOTS]]
                                      (--mainnet | --testnet-magic NATURAL)
                                      [--volatile-tip | --immutable-tip]
                                      [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli conway query stake-pools --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              [--output-json | --output-text]
                                              [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli conway query stake-distribution --socket-path SOCKET_PATH
                                                     [--cardano-mode
                                                       [--epoch-slots SLOTS]]
                                                     ( --mainnet
                                                     | --testnet-magic NATURAL
                                                     )
                                                     [ --volatile-tip
                                                     | --immutable-tip
                                                     ]
                                                     [ --output-json
                                                     | --output-text
                                                     ]
                                                     [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli conway query stake-address-info --socket-path SOCKET_PATH
                                                     [--cardano-mode
                                                       [--epoch-slots SLOTS]]
                                                     ( --mainnet
                                                     | --testnet-magic NATURAL
                                                     )
                                                     [ --volatile-tip
                                                     | --immutable-tip
                                                     ]
                                                     --address ADDRESS
                                                     [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli conway query utxo --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--volatile-tip | --immutable-tip]
                                       ( --whole-utxo
                                       | (--address ADDRESS)
                                       | (--tx-in TX-IN)
                                       )
                                       [--output-json | --output-text]
                                       [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli conway query ledger-state --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [ --volatile-tip
                                               | --immutable-tip
                                               ]
                                               [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli conway query protocol-state --socket-path SOCKET_PATH
                                                 [--cardano-mode
                                                   [--epoch-slots SLOTS]]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [ --volatile-tip
                                                 | --immutable-tip
                                                 ]
                                                 [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli conway query stake-snapshot --socket-path SOCKET_PATH
                                                 [--cardano-mode
                                                   [--epoch-slots SLOTS]]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [ --volatile-tip
                                                 | --immutable-tip
                                                 ]
                                                 ( --all-stake-pools
                                                 | (--stake-pool-id STAKE_POOL_ID)
                                                 )
                                                 [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli conway query pool-params --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              ( --all-stake-pools
                                              | (--stake-pool-id STAKE_POOL_ID)
                                              )
                                              [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli conway query leadership-schedule --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [ --volatile-tip
                                                      | --immutable-tip
                                                      ]
                                                      --genesis FILEPATH
                                                      ( --stake-pool-verification-key STRING
                                                      | --cold-verification-key-file FILEPATH
                                                      | --stake-pool-id STAKE_POOL_ID
                                                      )
                                                      --vrf-signing-key-file FILEPATH
                                                      (--current | --next)
                                                      [ --output-json
                                                      | --output-text
                                                      ]
                                                      [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli conway query kes-period-info --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [ --volatile-tip
                                                  | --immutable-tip
                                                  ]
                                                  --op-cert-file FILEPATH
                                                  [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli conway query pool-state --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             [--volatile-tip | --immutable-tip]
                                             ( --all-stake-pools
                                             | (--stake-pool-id STAKE_POOL_ID)
                                             )
                                             [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli conway query tx-mempool --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             (info | next-tx | tx-exists)
                                             [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli conway query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli conway query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli conway query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli conway query slot-number --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli conway query ref-script-size --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [ --volatile-tip
                                                  | --immutable-tip
                                                  ]
                                                  (--tx-in TX-IN)
                                                  [ --output-json
                                                  | --output-text
                                                  ]
                                                  [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli conway query constitution --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [ --volatile-tip
                                               | --immutable-tip
                                               ]
                                               [--out-file FILEPATH]

  Get the constitution

Usage: cardano-cli conway query gov-state --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            [--volatile-tip | --immutable-tip]
                                            [--out-file FILEPATH]

  Get the governance state

Usage: cardano-cli conway query drep-state --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             [--volatile-tip | --immutable-tip]
                                             ( --all-dreps
                                             | 
                                             ( --drep-script-hash HASH
                                             | --drep-verification-key STRING
                                             | --drep-verification-key-file FILEPATH
                                             | --drep-key-hash HASH
                                             )
                                             )
                                             [--include-stake]
                                             [--out-file FILEPATH]

  Get the DRep state.

Usage: cardano-cli conway query drep-stake-distribution 
                                                          --socket-path SOCKET_PATH
                                                          [--cardano-mode
                                                            [--epoch-slots SLOTS]]
                                                          ( --mainnet
                                                          | --testnet-magic NATURAL
                                                          )
                                                          [ --volatile-tip
                                                          | --immutable-tip
                                                          ]
                                                          ( --all-dreps
                                                          | 
                                                          ( --drep-script-hash HASH
                                                          | --drep-verification-key STRING
                                                          | --drep-verification-key-file FILEPATH
                                                          | --drep-key-hash HASH
                                                          )
                                                          )
                                                          [--out-file FILEPATH]

  Get the DRep stake distribution.

Usage: cardano-cli conway query spo-stake-distribution --socket-path SOCKET_PATH
                                                         [--cardano-mode
                                                           [--epoch-slots SLOTS]]
                                                         ( --mainnet
                                                         | --testnet-magic NATURAL
                                                         )
                                                         [ --volatile-tip
                                                         | --immutable-tip
                                                         ]
                                                         ( --all-spos
                                                         | 
                                                         ( --spo-verification-key STRING
                                                         | --spo-verification-key-file FILEPATH
                                                         | --spo-key-hash HASH
                                                         )
                                                         )
                                                         [--out-file FILEPATH]

  Get the SPO stake distribution.

Usage: cardano-cli conway query committee-state --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [ --volatile-tip
                                                  | --immutable-tip
                                                  ]
                                                  [ --cold-verification-key STRING
                                                  | --cold-verification-key-file FILEPATH
                                                  | --cold-verification-key-hash STRING
                                                  | --cold-script-hash HASH
                                                  ]
                                                  [ --hot-key STRING
                                                  | --hot-key-file FILEPATH
                                                  | --hot-key-hash STRING
                                                  | --hot-script-hash HASH
                                                  ]
                                                  [ --active
                                                  | --expired
                                                  | --unrecognized
                                                  ]
                                                  [--out-file FILEPATH]

  Get the committee state

Usage: cardano-cli conway query treasury --socket-path SOCKET_PATH
                                           [--cardano-mode
                                             [--epoch-slots SLOTS]]
                                           (--mainnet | --testnet-magic NATURAL)
                                           [--volatile-tip | --immutable-tip]
                                           [--out-file FILEPATH]

  Get the treasury value

Usage: cardano-cli conway query proposals --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            [--volatile-tip | --immutable-tip]
                                            ( --all-proposals
                                            | (--governance-action-tx-id TXID
                                              --governance-action-index WORD16)
                                            )
                                            [--out-file FILEPATH]

  Get the governance proposals.

Usage: cardano-cli conway stake-address 
                                          ( key-gen
                                          | key-hash
                                          | build
                                          | registration-certificate
                                          | deregistration-certificate
                                          | stake-delegation-certificate
                                          | stake-and-vote-delegation-certificate
                                          | vote-delegation-certificate
                                          | registration-and-delegation-certificate
                                          | registration-and-vote-delegation-certificate
                                          | registration-stake-and-vote-delegation-certificate
                                          )

  Stake address commands.

Usage: cardano-cli conway stake-address key-gen [--key-output-format STRING]
                                                  --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli conway stake-address key-hash 
                                                   ( --stake-verification-key STRING
                                                   | --stake-verification-key-file FILEPATH
                                                   )
                                                   [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli conway stake-address build 
                                                ( --stake-verification-key STRING
                                                | --stake-verification-key-file FILEPATH
                                                | --stake-key-hash HASH
                                                | --stake-script-file FILEPATH
                                                )
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli conway stake-address registration-certificate 
                                                                   ( --stake-verification-key STRING
                                                                   | --stake-verification-key-file FILEPATH
                                                                   | --stake-key-hash HASH
                                                                   | --stake-script-file FILEPATH
                                                                   | --stake-address ADDRESS
                                                                   )
                                                                   --key-reg-deposit-amt NATURAL
                                                                   --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli conway stake-address deregistration-certificate 
                                                                     ( --stake-verification-key STRING
                                                                     | --stake-verification-key-file FILEPATH
                                                                     | --stake-key-hash HASH
                                                                     | --stake-script-file FILEPATH
                                                                     | --stake-address ADDRESS
                                                                     )
                                                                     --key-reg-deposit-amt NATURAL
                                                                     --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli conway stake-address stake-delegation-certificate 
                                                                       ( --stake-verification-key STRING
                                                                       | --stake-verification-key-file FILEPATH
                                                                       | --stake-key-hash HASH
                                                                       | --stake-script-file FILEPATH
                                                                       | --stake-address ADDRESS
                                                                       )
                                                                       ( --stake-pool-verification-key STRING
                                                                       | --cold-verification-key-file FILEPATH
                                                                       | --stake-pool-id STAKE_POOL_ID
                                                                       )
                                                                       --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli conway stake-address stake-and-vote-delegation-certificate 
                                                                                ( --stake-verification-key STRING
                                                                                | --stake-verification-key-file FILEPATH
                                                                                | --stake-key-hash HASH
                                                                                | --stake-script-file FILEPATH
                                                                                | --stake-address ADDRESS
                                                                                )
                                                                                ( --stake-pool-verification-key STRING
                                                                                | --cold-verification-key-file FILEPATH
                                                                                | --stake-pool-id STAKE_POOL_ID
                                                                                )
                                                                                ( --drep-script-hash HASH
                                                                                | --drep-verification-key STRING
                                                                                | --drep-verification-key-file FILEPATH
                                                                                | --drep-key-hash HASH
                                                                                | --always-abstain
                                                                                | --always-no-confidence
                                                                                )
                                                                                --out-file FILEPATH

  Create a stake address stake and vote delegation certificate, which when
  submitted in a transaction delegates stake to a stake pool and a DRep.

Usage: cardano-cli conway stake-address vote-delegation-certificate 
                                                                      ( --stake-verification-key STRING
                                                                      | --stake-verification-key-file FILEPATH
                                                                      | --stake-key-hash HASH
                                                                      | --stake-script-file FILEPATH
                                                                      | --stake-address ADDRESS
                                                                      )
                                                                      ( --drep-script-hash HASH
                                                                      | --drep-verification-key STRING
                                                                      | --drep-verification-key-file FILEPATH
                                                                      | --drep-key-hash HASH
                                                                      | --always-abstain
                                                                      | --always-no-confidence
                                                                      )
                                                                      --out-file FILEPATH

  Create a stake address vote delegation certificate, which when submitted in a
  transaction delegates stake to a DRep.

Usage: cardano-cli conway stake-address registration-and-delegation-certificate 
                                                                                  ( --stake-verification-key STRING
                                                                                  | --stake-verification-key-file FILEPATH
                                                                                  | --stake-key-hash HASH
                                                                                  | --stake-script-file FILEPATH
                                                                                  | --stake-address ADDRESS
                                                                                  )
                                                                                  ( --stake-pool-verification-key STRING
                                                                                  | --cold-verification-key-file FILEPATH
                                                                                  | --stake-pool-id STAKE_POOL_ID
                                                                                  )
                                                                                  --key-reg-deposit-amt NATURAL
                                                                                  --out-file FILEPATH

  Create a stake address registration and delegation certificate, which when
  submitted in a transaction registers a stake address and delegates stake to a
  stake pool.

Usage: cardano-cli conway stake-address registration-and-vote-delegation-certificate 
                                                                                       ( --stake-verification-key STRING
                                                                                       | --stake-verification-key-file FILEPATH
                                                                                       | --stake-key-hash HASH
                                                                                       | --stake-script-file FILEPATH
                                                                                       | --stake-address ADDRESS
                                                                                       )
                                                                                       ( --drep-script-hash HASH
                                                                                       | --drep-verification-key STRING
                                                                                       | --drep-verification-key-file FILEPATH
                                                                                       | --drep-key-hash HASH
                                                                                       | --always-abstain
                                                                                       | --always-no-confidence
                                                                                       )
                                                                                       --key-reg-deposit-amt NATURAL
                                                                                       --out-file FILEPATH

  Create a stake address registration and vote delegation certificate, which
  when submitted in a transaction registers a stake address and delegates votes
  to a DRep or pre-defined voting option.

Usage: cardano-cli conway stake-address registration-stake-and-vote-delegation-certificate 
                                                                                             ( --stake-verification-key STRING
                                                                                             | --stake-verification-key-file FILEPATH
                                                                                             | --stake-key-hash HASH
                                                                                             | --stake-script-file FILEPATH
                                                                                             | --stake-address ADDRESS
                                                                                             )
                                                                                             ( --stake-pool-verification-key STRING
                                                                                             | --cold-verification-key-file FILEPATH
                                                                                             | --stake-pool-id STAKE_POOL_ID
                                                                                             )
                                                                                             ( --drep-script-hash HASH
                                                                                             | --drep-verification-key STRING
                                                                                             | --drep-verification-key-file FILEPATH
                                                                                             | --drep-key-hash HASH
                                                                                             | --always-abstain
                                                                                             | --always-no-confidence
                                                                                             )
                                                                                             --key-reg-deposit-amt NATURAL
                                                                                             --out-file FILEPATH

  Create a stake address registration, stake delegation and vote delegation
  certificate, which when submitted in a transaction registers a stake address,
  delgates stake to a pool, and delegates votes to a DRep or pre-defined voting
  option.

Usage: cardano-cli conway stake-pool 
                                       ( registration-certificate
                                       | deregistration-certificate
                                       | id
                                       | metadata-hash
                                       )

  Stake pool commands.

Usage: cardano-cli conway stake-pool registration-certificate 
                                                                ( --stake-pool-verification-key STRING
                                                                | --cold-verification-key-file FILEPATH
                                                                )
                                                                ( --vrf-verification-key STRING
                                                                | --vrf-verification-key-file FILEPATH
                                                                )
                                                                --pool-pledge LOVELACE
                                                                --pool-cost LOVELACE
                                                                --pool-margin RATIONAL
                                                                ( --pool-reward-account-verification-key STRING
                                                                | --pool-reward-account-verification-key-file FILEPATH
                                                                )
                                                                ( --pool-owner-verification-key STRING
                                                                | --pool-owner-stake-verification-key-file FILEPATH
                                                                )
                                                                [ [--pool-relay-ipv4 STRING]
                                                                  [--pool-relay-ipv6 STRING]
                                                                  --pool-relay-port INT
                                                                | --single-host-pool-relay STRING
                                                                  [--pool-relay-port INT]
                                                                | --multi-host-pool-relay STRING
                                                                ]
                                                                [--metadata-url URL
                                                                  --metadata-hash HASH
                                                                  [--check-metadata-hash]]
                                                                ( --mainnet
                                                                | --testnet-magic NATURAL
                                                                )
                                                                --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli conway stake-pool deregistration-certificate 
                                                                  ( --stake-pool-verification-key STRING
                                                                  | --cold-verification-key-file FILEPATH
                                                                  )
                                                                  --epoch NATURAL
                                                                  --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli conway stake-pool id 
                                          ( --stake-pool-verification-key STRING
                                          | --cold-verification-key-file FILEPATH
                                          )
                                          [--output-format STRING]
                                          [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli conway stake-pool metadata-hash 
                                                     ( --pool-metadata-file FILEPATH
                                                     | --pool-metadata-url TEXT
                                                     )
                                                     [ --expected-hash HASH
                                                     | --out-file FILEPATH
                                                     ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli conway text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli conway text-view decode-cbor --in-file FILEPATH
                                                  [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli conway transaction 
                                        ( build-raw
                                        | build
                                        | build-estimate
                                        | sign
                                        | witness
                                        | assemble
                                        | submit
                                        | policyid
                                        | calculate-min-fee
                                        | calculate-min-required-utxo
                                        | hash-script-data
                                        | txid
                                        )

  Transaction commands.

Usage: cardano-cli conway transaction build-raw 
                                                  [ --script-valid
                                                  | --script-invalid
                                                  ]
                                                  (--tx-in TX-IN
                                                    [ --spending-tx-in-reference TX-IN
                                                      ( --spending-plutus-script-v2
                                                      | --spending-plutus-script-v3
                                                      )
                                                      [ --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                      | --spending-reference-tx-in-datum-file JSON_FILE
                                                      | --spending-reference-tx-in-datum-value JSON_VALUE
                                                      | --spending-reference-tx-in-inline-datum-present
                                                      ]
                                                      ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                      | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --spending-reference-tx-in-execution-units (INT, INT)
                                                    | --simple-script-tx-in-reference TX-IN
                                                    | --tx-in-script-file FILEPATH
                                                      [
                                                        [ --tx-in-datum-cbor-file CBOR_FILE
                                                        | --tx-in-datum-file JSON_FILE
                                                        | --tx-in-datum-value JSON_VALUE
                                                        | --tx-in-inline-datum-present
                                                        ]
                                                        ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                        | --tx-in-redeemer-file JSON_FILE
                                                        | --tx-in-redeemer-value JSON_VALUE
                                                        )
                                                        --tx-in-execution-units (INT, INT)]
                                                    ])
                                                  [--read-only-tx-in-reference TX-IN]
                                                  [--tx-in-collateral TX-IN]
                                                  [--tx-out-return-collateral ADDRESS VALUE]
                                                  [--tx-total-collateral INTEGER]
                                                  [ --required-signer FILEPATH
                                                  | --required-signer-hash HASH
                                                  ]
                                                  [--tx-out ADDRESS VALUE
                                                    [ --tx-out-datum-hash HASH
                                                    | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                    | --tx-out-datum-hash-file JSON_FILE
                                                    | --tx-out-datum-hash-value JSON_VALUE
                                                    | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                    | --tx-out-datum-embed-file JSON_FILE
                                                    | --tx-out-datum-embed-value JSON_VALUE
                                                    | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                    | --tx-out-inline-datum-file JSON_FILE
                                                    | --tx-out-inline-datum-value JSON_VALUE
                                                    ]
                                                    [--tx-out-reference-script-file FILEPATH]]
                                                  [--mint VALUE
                                                    ( --mint-script-file FILEPATH
                                                      [
                                                        ( --mint-redeemer-cbor-file CBOR_FILE
                                                        | --mint-redeemer-file JSON_FILE
                                                        | --mint-redeemer-value JSON_VALUE
                                                        )
                                                        --mint-execution-units (INT, INT)]
                                                    | --simple-minting-script-tx-in-reference TX-IN
                                                      --policy-id HASH
                                                    | --mint-tx-in-reference TX-IN
                                                      ( --mint-plutus-script-v2
                                                      | --mint-plutus-script-v3
                                                      )
                                                      ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                      | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --mint-reference-tx-in-execution-units (INT, INT)
                                                      --policy-id HASH
                                                    )]
                                                  [--invalid-before SLOT]
                                                  [--invalid-hereafter SLOT]
                                                  --fee LOVELACE
                                                  [--certificate-file FILEPATH
                                                    [ --certificate-script-file FILEPATH
                                                      [
                                                        ( --certificate-redeemer-cbor-file CBOR_FILE
                                                        | --certificate-redeemer-file JSON_FILE
                                                        | --certificate-redeemer-value JSON_VALUE
                                                        )
                                                        --certificate-execution-units (INT, INT)]
                                                    | --certificate-tx-in-reference TX-IN
                                                      ( --certificate-plutus-script-v2
                                                      | --certificate-plutus-script-v3
                                                      )
                                                      ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                      | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --certificate-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--withdrawal WITHDRAWAL
                                                    [ --withdrawal-script-file FILEPATH
                                                      [
                                                        ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                        | --withdrawal-redeemer-file JSON_FILE
                                                        | --withdrawal-redeemer-value JSON_VALUE
                                                        )
                                                        --withdrawal-execution-units (INT, INT)]
                                                    | --withdrawal-tx-in-reference TX-IN
                                                      ( --withdrawal-plutus-script-v2
                                                      | --withdrawal-plutus-script-v3
                                                      )
                                                      ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                      | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [ --json-metadata-no-schema
                                                  | --json-metadata-detailed-schema
                                                  ]
                                                  [--auxiliary-script-file FILEPATH]
                                                  [ --metadata-json-file FILEPATH
                                                  | --metadata-cbor-file FILEPATH
                                                  ]
                                                  [--protocol-params-file FILEPATH]
                                                  [--vote-file FILEPATH
                                                    [ --vote-script-file FILEPATH
                                                      [
                                                        ( --vote-redeemer-cbor-file CBOR_FILE
                                                        | --vote-redeemer-file JSON_FILE
                                                        | --vote-redeemer-value JSON_VALUE
                                                        )
                                                        --vote-execution-units (INT, INT)]
                                                    | --vote-tx-in-reference TX-IN
                                                      --vote-plutus-script-v3
                                                      ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                      | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --vote-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--proposal-file FILEPATH
                                                    [ --proposal-script-file FILEPATH
                                                      [
                                                        ( --proposal-redeemer-cbor-file CBOR_FILE
                                                        | --proposal-redeemer-file JSON_FILE
                                                        | --proposal-redeemer-value JSON_VALUE
                                                        )
                                                        --proposal-execution-units (INT, INT)]
                                                    | --proposal-tx-in-reference TX-IN
                                                      --proposal-plutus-script-v3
                                                      ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                      | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --proposal-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--current-treasury-value LOVELACE
                                                    --treasury-donation LOVELACE]
                                                  --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli conway transaction build --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [ --script-valid
                                              | --script-invalid
                                              ]
                                              [--witness-override WORD]
                                              (--tx-in TX-IN
                                                [ --spending-tx-in-reference TX-IN
                                                  ( --spending-plutus-script-v2
                                                  | --spending-plutus-script-v3
                                                  )
                                                  [ --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                  | --spending-reference-tx-in-datum-file JSON_FILE
                                                  | --spending-reference-tx-in-datum-value JSON_VALUE
                                                  | --spending-reference-tx-in-inline-datum-present
                                                  ]
                                                  ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                  | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                | --simple-script-tx-in-reference TX-IN
                                                | --tx-in-script-file FILEPATH
                                                  [
                                                    [ --tx-in-datum-cbor-file CBOR_FILE
                                                    | --tx-in-datum-file JSON_FILE
                                                    | --tx-in-datum-value JSON_VALUE
                                                    | --tx-in-inline-datum-present
                                                    ]
                                                    ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                    | --tx-in-redeemer-file JSON_FILE
                                                    | --tx-in-redeemer-value JSON_VALUE
                                                    )]
                                                ])
                                              [--read-only-tx-in-reference TX-IN]
                                              [ --required-signer FILEPATH
                                              | --required-signer-hash HASH
                                              ]
                                              [--tx-in-collateral TX-IN]
                                              [--tx-out-return-collateral ADDRESS VALUE]
                                              [--tx-total-collateral INTEGER]
                                              [--tx-out ADDRESS VALUE
                                                [ --tx-out-datum-hash HASH
                                                | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                | --tx-out-datum-hash-file JSON_FILE
                                                | --tx-out-datum-hash-value JSON_VALUE
                                                | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                | --tx-out-datum-embed-file JSON_FILE
                                                | --tx-out-datum-embed-value JSON_VALUE
                                                | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                | --tx-out-inline-datum-file JSON_FILE
                                                | --tx-out-inline-datum-value JSON_VALUE
                                                ]
                                                [--tx-out-reference-script-file FILEPATH]]
                                              --change-address ADDRESS
                                              [--mint VALUE
                                                ( --mint-script-file FILEPATH
                                                  [ --mint-redeemer-cbor-file CBOR_FILE
                                                  | --mint-redeemer-file JSON_FILE
                                                  | --mint-redeemer-value JSON_VALUE
                                                  ]
                                                | --simple-minting-script-tx-in-reference TX-IN
                                                  --policy-id HASH
                                                | --mint-tx-in-reference TX-IN
                                                  ( --mint-plutus-script-v2
                                                  | --mint-plutus-script-v3
                                                  )
                                                  ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                  | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                  --policy-id HASH
                                                )]
                                              [--invalid-before SLOT]
                                              [--invalid-hereafter SLOT]
                                              [--certificate-file FILEPATH
                                                [ --certificate-script-file FILEPATH
                                                  [ --certificate-redeemer-cbor-file CBOR_FILE
                                                  | --certificate-redeemer-file JSON_FILE
                                                  | --certificate-redeemer-value JSON_VALUE
                                                  ]
                                                | --certificate-tx-in-reference TX-IN
                                                  ( --certificate-plutus-script-v2
                                                  | --certificate-plutus-script-v3
                                                  )
                                                  ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                  | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [--withdrawal WITHDRAWAL
                                                [ --withdrawal-script-file FILEPATH
                                                  [ --withdrawal-redeemer-cbor-file CBOR_FILE
                                                  | --withdrawal-redeemer-file JSON_FILE
                                                  | --withdrawal-redeemer-value JSON_VALUE
                                                  ]
                                                | --withdrawal-tx-in-reference TX-IN
                                                  ( --withdrawal-plutus-script-v2
                                                  | --withdrawal-plutus-script-v3
                                                  )
                                                  ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                  | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [ --json-metadata-no-schema
                                              | --json-metadata-detailed-schema
                                              ]
                                              [--auxiliary-script-file FILEPATH]
                                              [ --metadata-json-file FILEPATH
                                              | --metadata-cbor-file FILEPATH
                                              ]
                                              [--vote-file FILEPATH
                                                [ --vote-script-file FILEPATH
                                                  [ --vote-redeemer-cbor-file CBOR_FILE
                                                  | --vote-redeemer-file JSON_FILE
                                                  | --vote-redeemer-value JSON_VALUE
                                                  ]
                                                | --vote-tx-in-reference TX-IN
                                                  --vote-plutus-script-v3
                                                  ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                  | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [--proposal-file FILEPATH
                                                [ --proposal-script-file FILEPATH
                                                  [ --proposal-redeemer-cbor-file CBOR_FILE
                                                  | --proposal-redeemer-file JSON_FILE
                                                  | --proposal-redeemer-value JSON_VALUE
                                                  ]
                                                | --proposal-tx-in-reference TX-IN
                                                  --proposal-plutus-script-v3
                                                  ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                  | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [--treasury-donation LOVELACE]
                                              ( --out-file FILEPATH
                                              | --calculate-plutus-script-cost FILEPATH
                                              )

  Build a balanced transaction (automatically calculates fees)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli conway transaction build-estimate 
                                                       [ --script-valid
                                                       | --script-invalid
                                                       ]
                                                       --shelley-key-witnesses INT
                                                       [--byron-key-witnesses Int]
                                                       --protocol-params-file FILEPATH
                                                       --total-utxo-value VALUE
                                                       (--tx-in TX-IN
                                                         [ --spending-tx-in-reference TX-IN
                                                           ( --spending-plutus-script-v2
                                                           | --spending-plutus-script-v3
                                                           )
                                                           [ --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                           | --spending-reference-tx-in-datum-file JSON_FILE
                                                           | --spending-reference-tx-in-datum-value JSON_VALUE
                                                           | --spending-reference-tx-in-inline-datum-present
                                                           ]
                                                           ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                           | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --spending-reference-tx-in-execution-units (INT, INT)
                                                         | --simple-script-tx-in-reference TX-IN
                                                         | --tx-in-script-file FILEPATH
                                                           [
                                                             [ --tx-in-datum-cbor-file CBOR_FILE
                                                             | --tx-in-datum-file JSON_FILE
                                                             | --tx-in-datum-value JSON_VALUE
                                                             | --tx-in-inline-datum-present
                                                             ]
                                                             ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                             | --tx-in-redeemer-file JSON_FILE
                                                             | --tx-in-redeemer-value JSON_VALUE
                                                             )
                                                             --tx-in-execution-units (INT, INT)]
                                                         ])
                                                       [--read-only-tx-in-reference TX-IN]
                                                       [ --required-signer FILEPATH
                                                       | --required-signer-hash HASH
                                                       ]
                                                       [--tx-in-collateral TX-IN]
                                                       [--tx-out-return-collateral ADDRESS VALUE]
                                                       [--tx-out ADDRESS VALUE
                                                         [ --tx-out-datum-hash HASH
                                                         | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                         | --tx-out-datum-hash-file JSON_FILE
                                                         | --tx-out-datum-hash-value JSON_VALUE
                                                         | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                         | --tx-out-datum-embed-file JSON_FILE
                                                         | --tx-out-datum-embed-value JSON_VALUE
                                                         | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                         | --tx-out-inline-datum-file JSON_FILE
                                                         | --tx-out-inline-datum-value JSON_VALUE
                                                         ]
                                                         [--tx-out-reference-script-file FILEPATH]]
                                                       --change-address ADDRESS
                                                       [--mint VALUE
                                                         ( --mint-script-file FILEPATH
                                                           [
                                                             ( --mint-redeemer-cbor-file CBOR_FILE
                                                             | --mint-redeemer-file JSON_FILE
                                                             | --mint-redeemer-value JSON_VALUE
                                                             )
                                                             --mint-execution-units (INT, INT)]
                                                         | --simple-minting-script-tx-in-reference TX-IN
                                                           --policy-id HASH
                                                         | --mint-tx-in-reference TX-IN
                                                           ( --mint-plutus-script-v2
                                                           | --mint-plutus-script-v3
                                                           )
                                                           ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                           | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --mint-reference-tx-in-execution-units (INT, INT)
                                                           --policy-id HASH
                                                         )]
                                                       [--invalid-before SLOT]
                                                       [--invalid-hereafter SLOT]
                                                       [
                                                         --certificate-file FILEPATH
                                                         [ --certificate-script-file FILEPATH
                                                           [
                                                             ( --certificate-redeemer-cbor-file CBOR_FILE
                                                             | --certificate-redeemer-file JSON_FILE
                                                             | --certificate-redeemer-value JSON_VALUE
                                                             )
                                                             --certificate-execution-units (INT, INT)]
                                                         | --certificate-tx-in-reference TX-IN
                                                           ( --certificate-plutus-script-v2
                                                           | --certificate-plutus-script-v3
                                                           )
                                                           ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                           | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --certificate-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--withdrawal WITHDRAWAL
                                                         [ --withdrawal-script-file FILEPATH
                                                           [
                                                             ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                             | --withdrawal-redeemer-file JSON_FILE
                                                             | --withdrawal-redeemer-value JSON_VALUE
                                                             )
                                                             --withdrawal-execution-units (INT, INT)]
                                                         | --withdrawal-tx-in-reference TX-IN
                                                           ( --withdrawal-plutus-script-v2
                                                           | --withdrawal-plutus-script-v3
                                                           )
                                                           ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                           | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--tx-total-collateral INTEGER]
                                                       [--reference-script-size NATURAL]
                                                       [ --json-metadata-no-schema
                                                       | --json-metadata-detailed-schema
                                                       ]
                                                       [--auxiliary-script-file FILEPATH]
                                                       [ --metadata-json-file FILEPATH
                                                       | --metadata-cbor-file FILEPATH
                                                       ]
                                                       [--vote-file FILEPATH
                                                         [ --vote-script-file FILEPATH
                                                           [
                                                             ( --vote-redeemer-cbor-file CBOR_FILE
                                                             | --vote-redeemer-file JSON_FILE
                                                             | --vote-redeemer-value JSON_VALUE
                                                             )
                                                             --vote-execution-units (INT, INT)]
                                                         | --vote-tx-in-reference TX-IN
                                                           --vote-plutus-script-v3
                                                           ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                           | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --vote-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--proposal-file FILEPATH
                                                         [ --proposal-script-file FILEPATH
                                                           [
                                                             ( --proposal-redeemer-cbor-file CBOR_FILE
                                                             | --proposal-redeemer-file JSON_FILE
                                                             | --proposal-redeemer-value JSON_VALUE
                                                             )
                                                             --proposal-execution-units (INT, INT)]
                                                         | --proposal-tx-in-reference TX-IN
                                                           --proposal-plutus-script-v3
                                                           ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                           | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --proposal-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--current-treasury-value LOVELACE
                                                         --treasury-donation LOVELACE]
                                                       --out-file FILEPATH

  Build a balanced transaction without access to a live node (automatically estimates fees)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli conway transaction sign 
                                             ( --tx-body-file FILEPATH
                                             | --tx-file FILEPATH
                                             )
                                             [--signing-key-file FILEPATH
                                               [--address STRING]]
                                             [ --mainnet
                                             | --testnet-magic NATURAL
                                             ]
                                             --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli conway transaction witness --tx-body-file FILEPATH
                                                --signing-key-file FILEPATH
                                                [--address STRING]
                                                [ --mainnet
                                                | --testnet-magic NATURAL
                                                ]
                                                --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli conway transaction assemble --tx-body-file FILEPATH
                                                 [--witness-file FILEPATH]
                                                 --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli conway transaction sign-witness --tx-body-file FILEPATH
                                                     [--witness-file FILEPATH]
                                                     --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli conway transaction submit --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli conway transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli conway transaction calculate-min-fee --tx-body-file FILEPATH
                                                          --protocol-params-file FILEPATH
                                                          --witness-count NATURAL
                                                          [--byron-witness-count NATURAL]
                                                          [--reference-script-size NATURAL]
                                                          [ --output-json
                                                          | --output-text
                                                          ]
                                                          [--out-file FILEPATH]
                                                          [ --mainnet
                                                          | --testnet-magic NATURAL
                                                          ]
                                                          [--tx-in-count NATURAL]
                                                          [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli conway transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                    --tx-out ADDRESS VALUE
                                                                    [ --tx-out-datum-hash HASH
                                                                    | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                    | --tx-out-datum-hash-file JSON_FILE
                                                                    | --tx-out-datum-hash-value JSON_VALUE
                                                                    | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                    | --tx-out-datum-embed-file JSON_FILE
                                                                    | --tx-out-datum-embed-value JSON_VALUE
                                                                    | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                    | --tx-out-inline-datum-file JSON_FILE
                                                                    | --tx-out-inline-datum-value JSON_VALUE
                                                                    ]
                                                                    [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli conway transaction calculate-min-value --protocol-params-file FILEPATH
                                                            --tx-out ADDRESS VALUE
                                                            [ --tx-out-datum-hash HASH
                                                            | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                            | --tx-out-datum-hash-file JSON_FILE
                                                            | --tx-out-datum-hash-value JSON_VALUE
                                                            | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                            | --tx-out-datum-embed-file JSON_FILE
                                                            | --tx-out-datum-embed-value JSON_VALUE
                                                            | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                            | --tx-out-inline-datum-file JSON_FILE
                                                            | --tx-out-inline-datum-value JSON_VALUE
                                                            ]
                                                            [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli conway transaction hash-script-data 
                                                         ( --script-data-cbor-file CBOR_FILE
                                                         | --script-data-file JSON_FILE
                                                         | --script-data-value JSON_VALUE
                                                         )

  Calculate the hash of script data.

Usage: cardano-cli conway transaction txid 
                                             ( --tx-body-file FILEPATH
                                             | --tx-file FILEPATH
                                             )

  Print a transaction identifier.

Usage: cardano-cli latest 
                            ( address
                            | key
                            | genesis
                            | governance
                            | node
                            | query
                            | stake-address
                            | stake-pool
                            | text-view
                            | transaction
                            )

  Latest era commands (Conway)

Usage: cardano-cli latest address (key-gen | key-hash | build | info)

  Payment address commands.

Usage: cardano-cli latest address key-gen [--key-output-format STRING]
                                            [ --normal-key
                                            | --extended-key
                                            | --byron-key
                                            ]
                                            --verification-key-file FILEPATH
                                            --signing-key-file FILEPATH

  Create an address key pair.

Usage: cardano-cli latest address key-hash 
                                             ( --payment-verification-key STRING
                                             | --payment-verification-key-file FILEPATH
                                             )
                                             [--out-file FILEPATH]

  Print the hash of an address key.

Usage: cardano-cli latest address build 
                                          ( --payment-verification-key STRING
                                          | --payment-verification-key-file FILEPATH
                                          | --payment-script-file FILEPATH
                                          )
                                          [ --stake-verification-key STRING
                                          | --stake-verification-key-file FILEPATH
                                          | --stake-key-hash HASH
                                          | --stake-script-file FILEPATH
                                          | --stake-address ADDRESS
                                          ]
                                          (--mainnet | --testnet-magic NATURAL)
                                          [--out-file FILEPATH]

  Build a Shelley payment address, with optional delegation to a stake address.

Usage: cardano-cli latest address info --address ADDRESS [--out-file FILEPATH]

  Print information about an address.

Usage: cardano-cli latest key 
                                ( verification-key
                                | non-extended-key
                                | convert-byron-key
                                | convert-byron-genesis-vkey
                                | convert-itn-key
                                | convert-itn-extended-key
                                | convert-itn-bip32-key
                                | convert-cardano-address-key
                                )

  Key utility commands.

Usage: cardano-cli latest key verification-key --signing-key-file FILEPATH
                                                 --verification-key-file FILEPATH

  Get a verification key from a signing key. This supports all key types.

Usage: cardano-cli latest key non-extended-key --extended-verification-key-file FILEPATH
                                                 --verification-key-file FILEPATH

  Get a non-extended verification key from an extended verification key. This
  supports all extended key types.

Usage: cardano-cli latest key convert-byron-key [--password TEXT]
                                                  ( --byron-payment-key-type
                                                  | --legacy-byron-payment-key-type
                                                  | --byron-genesis-key-type
                                                  | --legacy-byron-genesis-key-type
                                                  | --byron-genesis-delegate-key-type
                                                  | --legacy-byron-genesis-delegate-key-type
                                                  )
                                                  ( --byron-signing-key-file FILEPATH
                                                  | --byron-verification-key-file FILEPATH
                                                  )
                                                  --out-file FILEPATH

  Convert a Byron payment, genesis or genesis delegate key (signing or
  verification) to a corresponding Shelley-format key.

Usage: cardano-cli latest key convert-byron-genesis-vkey --byron-genesis-verification-key BASE64
                                                           --out-file FILEPATH

  Convert a Base64-encoded Byron genesis verification key to a Shelley genesis
  verification key

Usage: cardano-cli latest key convert-itn-key 
                                                ( --itn-signing-key-file FILEPATH
                                                | --itn-verification-key-file FILEPATH
                                                )
                                                --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) non-extended (Ed25519) signing or
  verification key to a corresponding Shelley stake key

Usage: cardano-cli latest key convert-itn-extended-key --itn-signing-key-file FILEPATH
                                                         --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) extended (Ed25519Extended) signing key
  to a corresponding Shelley stake signing key

Usage: cardano-cli latest key convert-itn-bip32-key --itn-signing-key-file FILEPATH
                                                      --out-file FILEPATH

  Convert an Incentivized Testnet (ITN) BIP32 (Ed25519Bip32) signing key to a
  corresponding Shelley stake signing key

Usage: cardano-cli latest key convert-cardano-address-key 
                                                            ( --cc-cold-key
                                                            | --cc-hot-key
                                                            | --drep-key
                                                            | --shelley-payment-key
                                                            | --shelley-stake-key
                                                            | --icarus-payment-key
                                                            | --byron-payment-key
                                                            )
                                                            --signing-key-file FILEPATH
                                                            --out-file FILEPATH

  Convert a cardano-address extended signing key to a corresponding
  Shelley-format key.

Usage: cardano-cli latest genesis 
                                    ( key-gen-genesis
                                    | key-gen-delegate
                                    | key-gen-utxo
                                    | key-hash
                                    | get-ver-key
                                    | initial-addr
                                    | initial-txin
                                    | create-cardano
                                    | create
                                    | create-staked
                                    | create-testnet-data
                                    | hash
                                    )

  Genesis block commands.

Usage: cardano-cli latest genesis key-gen-genesis --verification-key-file FILEPATH
                                                    --signing-key-file FILEPATH

  Create a Shelley genesis key pair

Usage: cardano-cli latest genesis key-gen-delegate --verification-key-file FILEPATH
                                                     --signing-key-file FILEPATH
                                                     --operational-certificate-issue-counter-file FILEPATH

  Create a Shelley genesis delegate key pair

Usage: cardano-cli latest genesis key-gen-utxo --verification-key-file FILEPATH
                                                 --signing-key-file FILEPATH

  Create a Shelley genesis UTxO key pair

Usage: cardano-cli latest genesis key-hash --verification-key-file FILEPATH

  Print the identifier (hash) of a public key

Usage: cardano-cli latest genesis get-ver-key --verification-key-file FILEPATH
                                                --signing-key-file FILEPATH

  Derive the verification key from a signing key

Usage: cardano-cli latest genesis initial-addr --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the address for an initial UTxO based on the verification key

Usage: cardano-cli latest genesis initial-txin --verification-key-file FILEPATH
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [--out-file FILEPATH]

  Get the TxIn for an initial UTxO based on the verification key

Usage: cardano-cli latest genesis create-cardano --genesis-dir DIR
                                                   [--gen-genesis-keys INT]
                                                   [--gen-utxo-keys INT]
                                                   [--start-time UTC-TIME]
                                                   [--supply LOVELACE]
                                                   [--security-param INT]
                                                   [--slot-length INT]
                                                   [--slot-coefficient RATIONAL]
                                                   ( --mainnet
                                                   | --testnet-magic NATURAL
                                                   )
                                                   --byron-template FILEPATH
                                                   --shelley-template FILEPATH
                                                   --alonzo-template FILEPATH
                                                   --conway-template FILEPATH
                                                   [--node-config-template FILEPATH]

  Create a Byron and Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli latest genesis create [--key-output-format STRING]
                                           --genesis-dir DIR
                                           [--gen-genesis-keys INT]
                                           [--gen-utxo-keys INT]
                                           [--start-time UTC-TIME]
                                           [--supply LOVELACE]
                                           (--mainnet | --testnet-magic NATURAL)

  Create a Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli latest genesis create-staked [--key-output-format STRING]
                                                  --genesis-dir DIR
                                                  [--gen-genesis-keys INT]
                                                  [--gen-utxo-keys INT]
                                                  [--gen-pools INT]
                                                  [--gen-stake-delegs INT]
                                                  [--start-time UTC-TIME]
                                                  [--supply LOVELACE]
                                                  [--supply-delegated LOVELACE]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [--bulk-pool-cred-files INT]
                                                  [--bulk-pools-per-file INT]
                                                  [--num-stuffed-utxo INT]
                                                  [--relay-specification-file FILEPATH]

  Create a staked Shelley genesis file from a genesis template and
  genesis/delegation/spending keys.

Usage: cardano-cli latest genesis create-testnet-data [--spec-shelley FILEPATH]
                                                        [--spec-alonzo FILEPATH]
                                                        [--spec-conway FILEPATH]
                                                        [--genesis-keys INT]
                                                        [--pools INT]
                                                        [ --stake-delegators INT
                                                        | --transient-stake-delegators INT
                                                        ]
                                                        [--committee-keys INT]
                                                        [ --drep-keys INT
                                                        | --transient-drep-keys INT
                                                        ]
                                                        [--stuffed-utxo INT]
                                                        [--utxo-keys INT]
                                                        [--total-supply LOVELACE]
                                                        [--delegated-supply LOVELACE]
                                                        [--testnet-magic NATURAL]
                                                        [--relays FILEPATH]
                                                        [--start-time UTC-TIME]
                                                        --out-dir DIR

  Create data to use for starting a testnet.

Usage: cardano-cli latest genesis hash --genesis FILEPATH

  Compute the hash of a genesis file

Usage: cardano-cli latest governance (action | committee | drep | vote)

  Governance commands.

Usage: cardano-cli latest governance action 
                                              ( create-constitution
                                              | update-committee
                                              | create-info
                                              | create-no-confidence
                                              | create-protocol-parameters-update
                                              | create-treasury-withdrawal
                                              | create-hardfork
                                              | view
                                              )

  Governance action commands.

Usage: cardano-cli latest governance action create-constitution 
                                                                  ( --mainnet
                                                                  | --testnet
                                                                  )
                                                                  --governance-action-deposit NATURAL
                                                                  ( --deposit-return-stake-verification-key STRING
                                                                  | --deposit-return-stake-verification-key-file FILEPATH
                                                                  | --deposit-return-stake-key-hash HASH
                                                                  | --deposit-return-stake-script-file FILEPATH
                                                                  | --deposit-return-stake-address ADDRESS
                                                                  )
                                                                  [--prev-governance-action-tx-id TXID
                                                                    --prev-governance-action-index WORD16]
                                                                  --anchor-url TEXT
                                                                  --anchor-data-hash HASH
                                                                  [--check-anchor-data]
                                                                  --constitution-url TEXT
                                                                  --constitution-hash HASH
                                                                  [--check-constitution-hash]
                                                                  [--constitution-script-hash HASH]
                                                                  --out-file FILEPATH

  Create a constitution.

Usage: cardano-cli latest governance action update-committee 
                                                               ( --mainnet
                                                               | --testnet
                                                               )
                                                               --governance-action-deposit NATURAL
                                                               ( --deposit-return-stake-verification-key STRING
                                                               | --deposit-return-stake-verification-key-file FILEPATH
                                                               | --deposit-return-stake-key-hash HASH
                                                               | --deposit-return-stake-script-file FILEPATH
                                                               | --deposit-return-stake-address ADDRESS
                                                               )
                                                               --anchor-url TEXT
                                                               --anchor-data-hash HASH
                                                               [--check-anchor-data]
                                                               [ --remove-cc-cold-verification-key STRING
                                                               | --remove-cc-cold-verification-key-file FILEPATH
                                                               | --remove-cc-cold-verification-key-hash STRING
                                                               | --remove-cc-cold-script-hash HASH
                                                               ]
                                                               [
                                                                 ( --add-cc-cold-verification-key STRING
                                                                 | --add-cc-cold-verification-key-file FILEPATH
                                                                 | --add-cc-cold-verification-key-hash STRING
                                                                 | --add-cc-cold-script-hash HASH
                                                                 )
                                                                 --epoch NATURAL]
                                                               --threshold RATIONAL
                                                               [--prev-governance-action-tx-id TXID
                                                                 --prev-governance-action-index WORD16]
                                                               --out-file FILEPATH

  Create or update a new committee proposal.

Usage: cardano-cli latest governance action create-info (--mainnet | --testnet)
                                                          --governance-action-deposit NATURAL
                                                          ( --deposit-return-stake-verification-key STRING
                                                          | --deposit-return-stake-verification-key-file FILEPATH
                                                          | --deposit-return-stake-key-hash HASH
                                                          | --deposit-return-stake-script-file FILEPATH
                                                          | --deposit-return-stake-address ADDRESS
                                                          )
                                                          --anchor-url TEXT
                                                          --anchor-data-hash HASH
                                                          [--check-anchor-data]
                                                          --out-file FILEPATH

  Create an info action.

Usage: cardano-cli latest governance action create-no-confidence 
                                                                   ( --mainnet
                                                                   | --testnet
                                                                   )
                                                                   --governance-action-deposit NATURAL
                                                                   ( --deposit-return-stake-verification-key STRING
                                                                   | --deposit-return-stake-verification-key-file FILEPATH
                                                                   | --deposit-return-stake-key-hash HASH
                                                                   | --deposit-return-stake-script-file FILEPATH
                                                                   | --deposit-return-stake-address ADDRESS
                                                                   )
                                                                   --anchor-url TEXT
                                                                   --anchor-data-hash HASH
                                                                   [--check-anchor-data]
                                                                   [--prev-governance-action-tx-id TXID
                                                                     --prev-governance-action-index WORD16]
                                                                   --out-file FILEPATH

  Create a no confidence proposal.

Usage: cardano-cli latest governance action create-protocol-parameters-update 
                                                                                ( --mainnet
                                                                                | --testnet
                                                                                )
                                                                                --governance-action-deposit NATURAL
                                                                                ( --deposit-return-stake-verification-key STRING
                                                                                | --deposit-return-stake-verification-key-file FILEPATH
                                                                                | --deposit-return-stake-key-hash HASH
                                                                                | --deposit-return-stake-script-file FILEPATH
                                                                                | --deposit-return-stake-address ADDRESS
                                                                                )
                                                                                --anchor-url TEXT
                                                                                --anchor-data-hash HASH
                                                                                [--check-anchor-data]
                                                                                [--prev-governance-action-tx-id TXID
                                                                                  --prev-governance-action-index WORD16]
                                                                                [--constitution-script-hash HASH]
                                                                                [--min-fee-linear LOVELACE]
                                                                                [--min-fee-constant LOVELACE]
                                                                                [--max-block-body-size WORD32]
                                                                                [--max-tx-size WORD32]
                                                                                [--max-block-header-size WORD16]
                                                                                [--key-reg-deposit-amt NATURAL]
                                                                                [--pool-reg-deposit NATURAL]
                                                                                [--pool-retirement-epoch-interval WORD32]
                                                                                [--number-of-pools NATURAL]
                                                                                [--pool-influence RATIONAL]
                                                                                [--treasury-expansion RATIONAL]
                                                                                [--monetary-expansion RATIONAL]
                                                                                [--min-pool-cost NATURAL]
                                                                                [--price-execution-steps RATIONAL
                                                                                  --price-execution-memory RATIONAL]
                                                                                [--max-tx-execution-units (INT, INT)]
                                                                                [--max-block-execution-units (INT, INT)]
                                                                                [--max-value-size INT]
                                                                                [--collateral-percent INT]
                                                                                [--max-collateral-inputs INT]
                                                                                [--utxo-cost-per-byte LOVELACE]
                                                                                [--pool-voting-threshold-motion-no-confidence RATIONAL
                                                                                  --pool-voting-threshold-committee-normal RATIONAL
                                                                                  --pool-voting-threshold-committee-no-confidence RATIONAL
                                                                                  --pool-voting-threshold-hard-fork-initiation RATIONAL
                                                                                  --pool-voting-threshold-pp-security-group RATIONAL]
                                                                                [--drep-voting-threshold-motion-no-confidence RATIONAL
                                                                                  --drep-voting-threshold-committee-normal RATIONAL
                                                                                  --drep-voting-threshold-committee-no-confidence RATIONAL
                                                                                  --drep-voting-threshold-update-to-constitution RATIONAL
                                                                                  --drep-voting-threshold-hard-fork-initiation RATIONAL
                                                                                  --drep-voting-threshold-pp-network-group RATIONAL
                                                                                  --drep-voting-threshold-pp-economic-group RATIONAL
                                                                                  --drep-voting-threshold-pp-technical-group RATIONAL
                                                                                  --drep-voting-threshold-pp-governance-group RATIONAL
                                                                                  --drep-voting-threshold-treasury-withdrawal RATIONAL]
                                                                                [--min-committee-size INT]
                                                                                [--committee-term-length WORD32]
                                                                                [--governance-action-lifetime WORD32]
                                                                                [--new-governance-action-deposit NATURAL]
                                                                                [--drep-deposit LOVELACE]
                                                                                [--drep-activity WORD32]
                                                                                [--ref-script-cost-per-byte RATIONAL]
                                                                                [--cost-model-file FILE]
                                                                                --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli latest governance action create-treasury-withdrawal 
                                                                         ( --mainnet
                                                                         | --testnet
                                                                         )
                                                                         --governance-action-deposit NATURAL
                                                                         ( --deposit-return-stake-verification-key STRING
                                                                         | --deposit-return-stake-verification-key-file FILEPATH
                                                                         | --deposit-return-stake-key-hash HASH
                                                                         | --deposit-return-stake-script-file FILEPATH
                                                                         | --deposit-return-stake-address ADDRESS
                                                                         )
                                                                         --anchor-url TEXT
                                                                         --anchor-data-hash HASH
                                                                         [--check-anchor-data]
                                                                         (
                                                                           ( --funds-receiving-stake-verification-key STRING
                                                                           | --funds-receiving-stake-verification-key-file FILEPATH
                                                                           | --funds-receiving-stake-key-hash HASH
                                                                           | --funds-receiving-stake-script-file FILEPATH
                                                                           | --funds-receiving-stake-address ADDRESS
                                                                           )
                                                                           --transfer LOVELACE)
                                                                         [--constitution-script-hash HASH]
                                                                         --out-file FILEPATH

  Create a treasury withdrawal.

Usage: cardano-cli latest governance action create-hardfork 
                                                              ( --mainnet
                                                              | --testnet
                                                              )
                                                              --governance-action-deposit NATURAL
                                                              ( --deposit-return-stake-verification-key STRING
                                                              | --deposit-return-stake-verification-key-file FILEPATH
                                                              | --deposit-return-stake-key-hash HASH
                                                              | --deposit-return-stake-script-file FILEPATH
                                                              | --deposit-return-stake-address ADDRESS
                                                              )
                                                              [--prev-governance-action-tx-id TXID
                                                                --prev-governance-action-index WORD16]
                                                              --anchor-url TEXT
                                                              --anchor-data-hash HASH
                                                              [--check-anchor-data]
                                                              --protocol-major-version MAJOR
                                                              --protocol-minor-version MINOR
                                                              --out-file FILEPATH

  Create a hardfork initiation proposal.

Usage: cardano-cli latest governance action view --action-file FILEPATH
                                                   [ --output-json
                                                   | --output-yaml
                                                   ]
                                                   [--out-file FILEPATH]

  View a governance action.

Usage: cardano-cli latest governance committee 
                                                 ( key-gen-cold
                                                 | key-gen-hot
                                                 | key-hash
                                                 | create-hot-key-authorization-certificate
                                                 | create-cold-key-resignation-certificate
                                                 )

  Committee member commands.

Usage: cardano-cli latest governance committee key-gen-cold 
                                                              --cold-verification-key-file FILEPATH
                                                              --cold-signing-key-file FILEPATH

  Create a cold key pair for a Constitutional Committee Member

Usage: cardano-cli latest governance committee key-gen-hot --verification-key-file FILEPATH
                                                             --signing-key-file FILEPATH

  Create a hot key pair for a Constitutional Committee Member

Usage: cardano-cli latest governance committee key-hash 
                                                          ( --verification-key STRING
                                                          | --verification-key-file FILEPATH
                                                          )

  Print the identifier (hash) of a public key

Usage: cardano-cli latest governance committee create-hot-key-authorization-certificate 
                                                                                          ( --cold-verification-key STRING
                                                                                          | --cold-verification-key-file FILEPATH
                                                                                          | --cold-verification-key-hash STRING
                                                                                          | --cold-script-hash HASH
                                                                                          | --cold-script-file FILEPATH
                                                                                          )
                                                                                          ( --hot-verification-key STRING
                                                                                          | --hot-verification-key-file FILEPATH
                                                                                          | --hot-verification-key-hash STRING
                                                                                          | --hot-script-hash HASH
                                                                                          | --hot-script-file FILEPATH
                                                                                          )
                                                                                          --out-file FILEPATH

  Create hot key authorization certificate for a Constitutional Committee Member

Usage: cardano-cli latest governance committee create-cold-key-resignation-certificate 
                                                                                         ( --cold-verification-key STRING
                                                                                         | --cold-verification-key-file FILEPATH
                                                                                         | --cold-verification-key-hash STRING
                                                                                         | --cold-script-hash HASH
                                                                                         | --cold-script-file FILEPATH
                                                                                         )
                                                                                         [--resignation-metadata-url TEXT
                                                                                           --resignation-metadata-hash HASH
                                                                                           [--check-resignation-metadata-hash]]
                                                                                         --out-file FILEPATH

  Create cold key resignation certificate for a Constitutional Committee Member

Usage: cardano-cli latest governance drep 
                                            ( key-gen
                                            | id
                                            | registration-certificate
                                            | retirement-certificate
                                            | update-certificate
                                            | metadata-hash
                                            )

  DRep member commands.

Usage: cardano-cli latest governance drep key-gen --verification-key-file FILEPATH
                                                    --signing-key-file FILEPATH

  Generate Delegated Representative verification and signing keys.

Usage: cardano-cli latest governance drep id 
                                               ( --drep-verification-key STRING
                                               | --drep-verification-key-file FILEPATH
                                               )
                                               [--output-format STRING]
                                               [--out-file FILEPATH]

  Generate a drep id.

Usage: cardano-cli latest governance drep registration-certificate 
                                                                     ( --drep-script-hash HASH
                                                                     | --drep-verification-key STRING
                                                                     | --drep-verification-key-file FILEPATH
                                                                     | --drep-key-hash HASH
                                                                     )
                                                                     --key-reg-deposit-amt NATURAL
                                                                     [--drep-metadata-url TEXT
                                                                       --drep-metadata-hash HASH
                                                                       [--check-drep-metadata-hash]]
                                                                     --out-file FILEPATH

  Create a registration certificate.

Usage: cardano-cli latest governance drep retirement-certificate 
                                                                   ( --drep-script-hash HASH
                                                                   | --drep-verification-key STRING
                                                                   | --drep-verification-key-file FILEPATH
                                                                   | --drep-key-hash HASH
                                                                   )
                                                                   --deposit-amt LOVELACE
                                                                   --out-file FILEPATH

  Create a DRep retirement certificate.

Usage: cardano-cli latest governance drep update-certificate 
                                                               ( --drep-script-hash HASH
                                                               | --drep-verification-key STRING
                                                               | --drep-verification-key-file FILEPATH
                                                               | --drep-key-hash HASH
                                                               )
                                                               [--drep-metadata-url TEXT
                                                                 --drep-metadata-hash HASH
                                                                 [--check-drep-metadata-hash]]
                                                               --out-file FILEPATH

  Create a DRep update certificate.

Usage: cardano-cli latest governance drep metadata-hash 
                                                          ( --drep-metadata-file FILEPATH
                                                          | --drep-metadata-url TEXT
                                                          )
                                                          [ --expected-hash HASH
                                                          | --out-file FILEPATH
                                                          ]

  Calculate the hash of a metadata file, optionally checking the obtained hash
  against an expected value.

Usage: cardano-cli latest governance vote (create | view)

  Vote commands.

Usage: cardano-cli latest governance vote create (--yes | --no | --abstain)
                                                   --governance-action-tx-id TXID
                                                   --governance-action-index WORD16
                                                   ( --drep-verification-key STRING
                                                   | --drep-verification-key-file FILEPATH
                                                   | --drep-key-hash HASH
                                                   | --drep-script-hash HASH
                                                   | --stake-pool-verification-key STRING
                                                   | --cold-verification-key-file FILEPATH
                                                   | --stake-pool-id STAKE_POOL_ID
                                                   | --cc-hot-verification-key STRING
                                                   | --cc-hot-verification-key-file FILEPATH
                                                   | --cc-hot-key-hash STRING
                                                   | --cc-hot-script-hash HASH
                                                   )
                                                   [--anchor-url TEXT
                                                     --anchor-data-hash HASH
                                                     [--check-anchor-data-hash]]
                                                   --out-file FILEPATH

  Vote creation.

Usage: cardano-cli latest governance vote view [--output-json | --output-yaml]
                                                 --vote-file FILEPATH
                                                 [--out-file FILEPATH]

  Vote viewing.

Usage: cardano-cli latest node 
                                 ( key-gen
                                 | key-gen-KES
                                 | key-gen-VRF
                                 | key-hash-VRF
                                 | new-counter
                                 | issue-op-cert
                                 )

  Node operation commands.

Usage: cardano-cli latest node key-gen [--key-output-format STRING]
                                         --cold-verification-key-file FILEPATH
                                         --cold-signing-key-file FILEPATH
                                         --operational-certificate-issue-counter-file FILEPATH

  Create a key pair for a node operator's offline key and a new certificate
  issue counter

Usage: cardano-cli latest node key-gen-KES [--key-output-format STRING]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create a key pair for a node KES operational key

Usage: cardano-cli latest node key-gen-VRF [--key-output-format STRING]
                                             --verification-key-file FILEPATH
                                             --signing-key-file FILEPATH

  Create a key pair for a node VRF operational key

Usage: cardano-cli latest node key-hash-VRF 
                                              ( --verification-key STRING
                                              | --verification-key-file FILEPATH
                                              )
                                              [--out-file FILEPATH]

  Print hash of a node's operational VRF key.

Usage: cardano-cli latest node new-counter 
                                             ( --stake-pool-verification-key STRING
                                             | --genesis-delegate-verification-key STRING
                                             | --cold-verification-key-file FILEPATH
                                             )
                                             --counter-value INT
                                             --operational-certificate-issue-counter-file FILEPATH

  Create a new certificate issue counter

Usage: cardano-cli latest node issue-op-cert 
                                               ( --kes-verification-key STRING
                                               | --kes-verification-key-file FILEPATH
                                               )
                                               --cold-signing-key-file FILEPATH
                                               --operational-certificate-issue-counter-file FILEPATH
                                               --kes-period NATURAL
                                               --out-file FILEPATH

  Issue a node operational certificate

Usage: cardano-cli latest query 
                                  ( protocol-parameters
                                  | tip
                                  | stake-pools
                                  | stake-distribution
                                  | stake-address-info
                                  | utxo
                                  | ledger-state
                                  | protocol-state
                                  | stake-snapshot
                                  | leadership-schedule
                                  | kes-period-info
                                  | pool-state
                                  | tx-mempool
                                  | slot-number
                                  | ref-script-size
                                  | constitution
                                  | gov-state
                                  | drep-state
                                  | drep-stake-distribution
                                  | spo-stake-distribution
                                  | committee-state
                                  | treasury
                                  | proposals
                                  )

  Node query commands. Will query the local node whose Unix domain socket is
  obtained from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli latest query protocol-parameters --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [--out-file FILEPATH]

  Get the node's current protocol parameters

Usage: cardano-cli latest query tip --socket-path SOCKET_PATH
                                      [--cardano-mode [--epoch-slots SLOTS]]
                                      (--mainnet | --testnet-magic NATURAL)
                                      [--volatile-tip | --immutable-tip]
                                      [--out-file FILEPATH]

  Get the node's current tip (slot no, hash, block no)

Usage: cardano-cli latest query stake-pools --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              [--output-json | --output-text]
                                              [--out-file FILEPATH]

  Get the node's current set of stake pool ids

Usage: cardano-cli latest query stake-distribution --socket-path SOCKET_PATH
                                                     [--cardano-mode
                                                       [--epoch-slots SLOTS]]
                                                     ( --mainnet
                                                     | --testnet-magic NATURAL
                                                     )
                                                     [ --volatile-tip
                                                     | --immutable-tip
                                                     ]
                                                     [ --output-json
                                                     | --output-text
                                                     ]
                                                     [--out-file FILEPATH]

  Get the node's current aggregated stake distribution

Usage: cardano-cli latest query stake-address-info --socket-path SOCKET_PATH
                                                     [--cardano-mode
                                                       [--epoch-slots SLOTS]]
                                                     ( --mainnet
                                                     | --testnet-magic NATURAL
                                                     )
                                                     [ --volatile-tip
                                                     | --immutable-tip
                                                     ]
                                                     --address ADDRESS
                                                     [--out-file FILEPATH]

  Get the current delegations and reward accounts filtered by stake address.

Usage: cardano-cli latest query utxo --socket-path SOCKET_PATH
                                       [--cardano-mode [--epoch-slots SLOTS]]
                                       (--mainnet | --testnet-magic NATURAL)
                                       [--volatile-tip | --immutable-tip]
                                       ( --whole-utxo
                                       | (--address ADDRESS)
                                       | (--tx-in TX-IN)
                                       )
                                       [--output-json | --output-text]
                                       [--out-file FILEPATH]

  Get a portion of the current UTxO: by tx in, by address or the whole.

Usage: cardano-cli latest query ledger-state --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [ --volatile-tip
                                               | --immutable-tip
                                               ]
                                               [--out-file FILEPATH]

  Dump the current ledger state of the node (Ledger.NewEpochState -- advanced
  command)

Usage: cardano-cli latest query protocol-state --socket-path SOCKET_PATH
                                                 [--cardano-mode
                                                   [--epoch-slots SLOTS]]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [ --volatile-tip
                                                 | --immutable-tip
                                                 ]
                                                 [--out-file FILEPATH]

  Dump the current protocol state of the node (Ledger.ChainDepState -- advanced
  command)

Usage: cardano-cli latest query stake-snapshot --socket-path SOCKET_PATH
                                                 [--cardano-mode
                                                   [--epoch-slots SLOTS]]
                                                 ( --mainnet
                                                 | --testnet-magic NATURAL
                                                 )
                                                 [ --volatile-tip
                                                 | --immutable-tip
                                                 ]
                                                 ( --all-stake-pools
                                                 | (--stake-pool-id STAKE_POOL_ID)
                                                 )
                                                 [--out-file FILEPATH]

  Obtain the three stake snapshots for a pool, plus the total active stake
  (advanced command)

Usage: cardano-cli latest query pool-params --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              ( --all-stake-pools
                                              | (--stake-pool-id STAKE_POOL_ID)
                                              )
                                              [--out-file FILEPATH]

  DEPRECATED. Use query pool-state instead. Dump the pool parameters
  (Ledger.NewEpochState.esLState._delegationState._pState._pParams -- advanced
  command)

Usage: cardano-cli latest query leadership-schedule --socket-path SOCKET_PATH
                                                      [--cardano-mode
                                                        [--epoch-slots SLOTS]]
                                                      ( --mainnet
                                                      | --testnet-magic NATURAL
                                                      )
                                                      [ --volatile-tip
                                                      | --immutable-tip
                                                      ]
                                                      --genesis FILEPATH
                                                      ( --stake-pool-verification-key STRING
                                                      | --cold-verification-key-file FILEPATH
                                                      | --stake-pool-id STAKE_POOL_ID
                                                      )
                                                      --vrf-signing-key-file FILEPATH
                                                      (--current | --next)
                                                      [ --output-json
                                                      | --output-text
                                                      ]
                                                      [--out-file FILEPATH]

  Get the slots the node is expected to mint a block in (advanced command)

Usage: cardano-cli latest query kes-period-info --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [ --volatile-tip
                                                  | --immutable-tip
                                                  ]
                                                  --op-cert-file FILEPATH
                                                  [--out-file FILEPATH]

  Get information about the current KES period and your node's operational
  certificate.

Usage: cardano-cli latest query pool-state --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             [--volatile-tip | --immutable-tip]
                                             ( --all-stake-pools
                                             | (--stake-pool-id STAKE_POOL_ID)
                                             )
                                             [--out-file FILEPATH]

  Dump the pool state

Usage: cardano-cli latest query tx-mempool --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             (info | next-tx | tx-exists)
                                             [--out-file FILEPATH]

  Local Mempool info

Usage: cardano-cli latest query tx-mempool info 

  Ask the node about the current mempool's capacity and sizes

Usage: cardano-cli latest query tx-mempool next-tx 

  Requests the next transaction from the mempool's current list

Usage: cardano-cli latest query tx-mempool tx-exists TX_ID

  Query if a particular transaction exists in the mempool

Usage: cardano-cli latest query slot-number --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [--volatile-tip | --immutable-tip]
                                              TIMESTAMP

  Query slot number for UTC timestamp

Usage: cardano-cli latest query ref-script-size --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [ --volatile-tip
                                                  | --immutable-tip
                                                  ]
                                                  (--tx-in TX-IN)
                                                  [ --output-json
                                                  | --output-text
                                                  ]
                                                  [--out-file FILEPATH]

  Calculate the reference input scripts size in bytes for provided transaction
  inputs.

Usage: cardano-cli latest query constitution --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               [ --volatile-tip
                                               | --immutable-tip
                                               ]
                                               [--out-file FILEPATH]

  Get the constitution

Usage: cardano-cli latest query gov-state --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            [--volatile-tip | --immutable-tip]
                                            [--out-file FILEPATH]

  Get the governance state

Usage: cardano-cli latest query drep-state --socket-path SOCKET_PATH
                                             [--cardano-mode
                                               [--epoch-slots SLOTS]]
                                             ( --mainnet
                                             | --testnet-magic NATURAL
                                             )
                                             [--volatile-tip | --immutable-tip]
                                             ( --all-dreps
                                             | 
                                             ( --drep-script-hash HASH
                                             | --drep-verification-key STRING
                                             | --drep-verification-key-file FILEPATH
                                             | --drep-key-hash HASH
                                             )
                                             )
                                             [--include-stake]
                                             [--out-file FILEPATH]

  Get the DRep state.

Usage: cardano-cli latest query drep-stake-distribution 
                                                          --socket-path SOCKET_PATH
                                                          [--cardano-mode
                                                            [--epoch-slots SLOTS]]
                                                          ( --mainnet
                                                          | --testnet-magic NATURAL
                                                          )
                                                          [ --volatile-tip
                                                          | --immutable-tip
                                                          ]
                                                          ( --all-dreps
                                                          | 
                                                          ( --drep-script-hash HASH
                                                          | --drep-verification-key STRING
                                                          | --drep-verification-key-file FILEPATH
                                                          | --drep-key-hash HASH
                                                          )
                                                          )
                                                          [--out-file FILEPATH]

  Get the DRep stake distribution.

Usage: cardano-cli latest query spo-stake-distribution --socket-path SOCKET_PATH
                                                         [--cardano-mode
                                                           [--epoch-slots SLOTS]]
                                                         ( --mainnet
                                                         | --testnet-magic NATURAL
                                                         )
                                                         [ --volatile-tip
                                                         | --immutable-tip
                                                         ]
                                                         ( --all-spos
                                                         | 
                                                         ( --spo-verification-key STRING
                                                         | --spo-verification-key-file FILEPATH
                                                         | --spo-key-hash HASH
                                                         )
                                                         )
                                                         [--out-file FILEPATH]

  Get the SPO stake distribution.

Usage: cardano-cli latest query committee-state --socket-path SOCKET_PATH
                                                  [--cardano-mode
                                                    [--epoch-slots SLOTS]]
                                                  ( --mainnet
                                                  | --testnet-magic NATURAL
                                                  )
                                                  [ --volatile-tip
                                                  | --immutable-tip
                                                  ]
                                                  [ --cold-verification-key STRING
                                                  | --cold-verification-key-file FILEPATH
                                                  | --cold-verification-key-hash STRING
                                                  | --cold-script-hash HASH
                                                  ]
                                                  [ --hot-key STRING
                                                  | --hot-key-file FILEPATH
                                                  | --hot-key-hash STRING
                                                  | --hot-script-hash HASH
                                                  ]
                                                  [ --active
                                                  | --expired
                                                  | --unrecognized
                                                  ]
                                                  [--out-file FILEPATH]

  Get the committee state

Usage: cardano-cli latest query treasury --socket-path SOCKET_PATH
                                           [--cardano-mode
                                             [--epoch-slots SLOTS]]
                                           (--mainnet | --testnet-magic NATURAL)
                                           [--volatile-tip | --immutable-tip]
                                           [--out-file FILEPATH]

  Get the treasury value

Usage: cardano-cli latest query proposals --socket-path SOCKET_PATH
                                            [--cardano-mode
                                              [--epoch-slots SLOTS]]
                                            ( --mainnet
                                            | --testnet-magic NATURAL
                                            )
                                            [--volatile-tip | --immutable-tip]
                                            ( --all-proposals
                                            | (--governance-action-tx-id TXID
                                              --governance-action-index WORD16)
                                            )
                                            [--out-file FILEPATH]

  Get the governance proposals.

Usage: cardano-cli latest stake-address 
                                          ( key-gen
                                          | key-hash
                                          | build
                                          | registration-certificate
                                          | deregistration-certificate
                                          | stake-delegation-certificate
                                          | stake-and-vote-delegation-certificate
                                          | vote-delegation-certificate
                                          | registration-and-delegation-certificate
                                          | registration-and-vote-delegation-certificate
                                          | registration-stake-and-vote-delegation-certificate
                                          )

  Stake address commands.

Usage: cardano-cli latest stake-address key-gen [--key-output-format STRING]
                                                  --verification-key-file FILEPATH
                                                  --signing-key-file FILEPATH

  Create a stake address key pair

Usage: cardano-cli latest stake-address key-hash 
                                                   ( --stake-verification-key STRING
                                                   | --stake-verification-key-file FILEPATH
                                                   )
                                                   [--out-file FILEPATH]

  Print the hash of a stake address key

Usage: cardano-cli latest stake-address build 
                                                ( --stake-verification-key STRING
                                                | --stake-verification-key-file FILEPATH
                                                | --stake-key-hash HASH
                                                | --stake-script-file FILEPATH
                                                )
                                                ( --mainnet
                                                | --testnet-magic NATURAL
                                                )
                                                [--out-file FILEPATH]

  Build a stake address

Usage: cardano-cli latest stake-address registration-certificate 
                                                                   ( --stake-verification-key STRING
                                                                   | --stake-verification-key-file FILEPATH
                                                                   | --stake-key-hash HASH
                                                                   | --stake-script-file FILEPATH
                                                                   | --stake-address ADDRESS
                                                                   )
                                                                   --key-reg-deposit-amt NATURAL
                                                                   --out-file FILEPATH

  Create a stake address registration certificate

Usage: cardano-cli latest stake-address deregistration-certificate 
                                                                     ( --stake-verification-key STRING
                                                                     | --stake-verification-key-file FILEPATH
                                                                     | --stake-key-hash HASH
                                                                     | --stake-script-file FILEPATH
                                                                     | --stake-address ADDRESS
                                                                     )
                                                                     --key-reg-deposit-amt NATURAL
                                                                     --out-file FILEPATH

  Create a stake address deregistration certificate

Usage: cardano-cli latest stake-address stake-delegation-certificate 
                                                                       ( --stake-verification-key STRING
                                                                       | --stake-verification-key-file FILEPATH
                                                                       | --stake-key-hash HASH
                                                                       | --stake-script-file FILEPATH
                                                                       | --stake-address ADDRESS
                                                                       )
                                                                       ( --stake-pool-verification-key STRING
                                                                       | --cold-verification-key-file FILEPATH
                                                                       | --stake-pool-id STAKE_POOL_ID
                                                                       )
                                                                       --out-file FILEPATH

  Create a stake address stake delegation certificate, which when submitted in a
  transaction delegates stake to a stake pool.

Usage: cardano-cli latest stake-address stake-and-vote-delegation-certificate 
                                                                                ( --stake-verification-key STRING
                                                                                | --stake-verification-key-file FILEPATH
                                                                                | --stake-key-hash HASH
                                                                                | --stake-script-file FILEPATH
                                                                                | --stake-address ADDRESS
                                                                                )
                                                                                ( --stake-pool-verification-key STRING
                                                                                | --cold-verification-key-file FILEPATH
                                                                                | --stake-pool-id STAKE_POOL_ID
                                                                                )
                                                                                ( --drep-script-hash HASH
                                                                                | --drep-verification-key STRING
                                                                                | --drep-verification-key-file FILEPATH
                                                                                | --drep-key-hash HASH
                                                                                | --always-abstain
                                                                                | --always-no-confidence
                                                                                )
                                                                                --out-file FILEPATH

  Create a stake address stake and vote delegation certificate, which when
  submitted in a transaction delegates stake to a stake pool and a DRep.

Usage: cardano-cli latest stake-address vote-delegation-certificate 
                                                                      ( --stake-verification-key STRING
                                                                      | --stake-verification-key-file FILEPATH
                                                                      | --stake-key-hash HASH
                                                                      | --stake-script-file FILEPATH
                                                                      | --stake-address ADDRESS
                                                                      )
                                                                      ( --drep-script-hash HASH
                                                                      | --drep-verification-key STRING
                                                                      | --drep-verification-key-file FILEPATH
                                                                      | --drep-key-hash HASH
                                                                      | --always-abstain
                                                                      | --always-no-confidence
                                                                      )
                                                                      --out-file FILEPATH

  Create a stake address vote delegation certificate, which when submitted in a
  transaction delegates stake to a DRep.

Usage: cardano-cli latest stake-address registration-and-delegation-certificate 
                                                                                  ( --stake-verification-key STRING
                                                                                  | --stake-verification-key-file FILEPATH
                                                                                  | --stake-key-hash HASH
                                                                                  | --stake-script-file FILEPATH
                                                                                  | --stake-address ADDRESS
                                                                                  )
                                                                                  ( --stake-pool-verification-key STRING
                                                                                  | --cold-verification-key-file FILEPATH
                                                                                  | --stake-pool-id STAKE_POOL_ID
                                                                                  )
                                                                                  --key-reg-deposit-amt NATURAL
                                                                                  --out-file FILEPATH

  Create a stake address registration and delegation certificate, which when
  submitted in a transaction registers a stake address and delegates stake to a
  stake pool.

Usage: cardano-cli latest stake-address registration-and-vote-delegation-certificate 
                                                                                       ( --stake-verification-key STRING
                                                                                       | --stake-verification-key-file FILEPATH
                                                                                       | --stake-key-hash HASH
                                                                                       | --stake-script-file FILEPATH
                                                                                       | --stake-address ADDRESS
                                                                                       )
                                                                                       ( --drep-script-hash HASH
                                                                                       | --drep-verification-key STRING
                                                                                       | --drep-verification-key-file FILEPATH
                                                                                       | --drep-key-hash HASH
                                                                                       | --always-abstain
                                                                                       | --always-no-confidence
                                                                                       )
                                                                                       --key-reg-deposit-amt NATURAL
                                                                                       --out-file FILEPATH

  Create a stake address registration and vote delegation certificate, which
  when submitted in a transaction registers a stake address and delegates votes
  to a DRep or pre-defined voting option.

Usage: cardano-cli latest stake-address registration-stake-and-vote-delegation-certificate 
                                                                                             ( --stake-verification-key STRING
                                                                                             | --stake-verification-key-file FILEPATH
                                                                                             | --stake-key-hash HASH
                                                                                             | --stake-script-file FILEPATH
                                                                                             | --stake-address ADDRESS
                                                                                             )
                                                                                             ( --stake-pool-verification-key STRING
                                                                                             | --cold-verification-key-file FILEPATH
                                                                                             | --stake-pool-id STAKE_POOL_ID
                                                                                             )
                                                                                             ( --drep-script-hash HASH
                                                                                             | --drep-verification-key STRING
                                                                                             | --drep-verification-key-file FILEPATH
                                                                                             | --drep-key-hash HASH
                                                                                             | --always-abstain
                                                                                             | --always-no-confidence
                                                                                             )
                                                                                             --key-reg-deposit-amt NATURAL
                                                                                             --out-file FILEPATH

  Create a stake address registration, stake delegation and vote delegation
  certificate, which when submitted in a transaction registers a stake address,
  delgates stake to a pool, and delegates votes to a DRep or pre-defined voting
  option.

Usage: cardano-cli latest stake-pool 
                                       ( registration-certificate
                                       | deregistration-certificate
                                       | id
                                       | metadata-hash
                                       )

  Stake pool commands.

Usage: cardano-cli latest stake-pool registration-certificate 
                                                                ( --stake-pool-verification-key STRING
                                                                | --cold-verification-key-file FILEPATH
                                                                )
                                                                ( --vrf-verification-key STRING
                                                                | --vrf-verification-key-file FILEPATH
                                                                )
                                                                --pool-pledge LOVELACE
                                                                --pool-cost LOVELACE
                                                                --pool-margin RATIONAL
                                                                ( --pool-reward-account-verification-key STRING
                                                                | --pool-reward-account-verification-key-file FILEPATH
                                                                )
                                                                ( --pool-owner-verification-key STRING
                                                                | --pool-owner-stake-verification-key-file FILEPATH
                                                                )
                                                                [ [--pool-relay-ipv4 STRING]
                                                                  [--pool-relay-ipv6 STRING]
                                                                  --pool-relay-port INT
                                                                | --single-host-pool-relay STRING
                                                                  [--pool-relay-port INT]
                                                                | --multi-host-pool-relay STRING
                                                                ]
                                                                [--metadata-url URL
                                                                  --metadata-hash HASH
                                                                  [--check-metadata-hash]]
                                                                ( --mainnet
                                                                | --testnet-magic NATURAL
                                                                )
                                                                --out-file FILEPATH

  Create a stake pool registration certificate

Usage: cardano-cli latest stake-pool deregistration-certificate 
                                                                  ( --stake-pool-verification-key STRING
                                                                  | --cold-verification-key-file FILEPATH
                                                                  )
                                                                  --epoch NATURAL
                                                                  --out-file FILEPATH

  Create a stake pool deregistration certificate

Usage: cardano-cli latest stake-pool id 
                                          ( --stake-pool-verification-key STRING
                                          | --cold-verification-key-file FILEPATH
                                          )
                                          [--output-format STRING]
                                          [--out-file FILEPATH]

  Build pool id from the offline key

Usage: cardano-cli latest stake-pool metadata-hash 
                                                     ( --pool-metadata-file FILEPATH
                                                     | --pool-metadata-url TEXT
                                                     )
                                                     [ --expected-hash HASH
                                                     | --out-file FILEPATH
                                                     ]

  Calculate the hash of a stake pool metadata file, optionally checking the
  obtained hash against an expected value.

Usage: cardano-cli latest text-view decode-cbor

  Commands for dealing with Shelley TextView files. Transactions, addresses etc
  are stored on disk as TextView files.

Usage: cardano-cli latest text-view decode-cbor --in-file FILEPATH
                                                  [--out-file FILEPATH]

  Print a TextView file as decoded CBOR.

Usage: cardano-cli latest transaction 
                                        ( build-raw
                                        | build
                                        | build-estimate
                                        | sign
                                        | witness
                                        | assemble
                                        | submit
                                        | policyid
                                        | calculate-min-fee
                                        | calculate-min-required-utxo
                                        | hash-script-data
                                        | txid
                                        )

  Transaction commands.

Usage: cardano-cli latest transaction build-raw 
                                                  [ --script-valid
                                                  | --script-invalid
                                                  ]
                                                  (--tx-in TX-IN
                                                    [ --spending-tx-in-reference TX-IN
                                                      ( --spending-plutus-script-v2
                                                      | --spending-plutus-script-v3
                                                      )
                                                      [ --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                      | --spending-reference-tx-in-datum-file JSON_FILE
                                                      | --spending-reference-tx-in-datum-value JSON_VALUE
                                                      | --spending-reference-tx-in-inline-datum-present
                                                      ]
                                                      ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                      | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --spending-reference-tx-in-execution-units (INT, INT)
                                                    | --simple-script-tx-in-reference TX-IN
                                                    | --tx-in-script-file FILEPATH
                                                      [
                                                        [ --tx-in-datum-cbor-file CBOR_FILE
                                                        | --tx-in-datum-file JSON_FILE
                                                        | --tx-in-datum-value JSON_VALUE
                                                        | --tx-in-inline-datum-present
                                                        ]
                                                        ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                        | --tx-in-redeemer-file JSON_FILE
                                                        | --tx-in-redeemer-value JSON_VALUE
                                                        )
                                                        --tx-in-execution-units (INT, INT)]
                                                    ])
                                                  [--read-only-tx-in-reference TX-IN]
                                                  [--tx-in-collateral TX-IN]
                                                  [--tx-out-return-collateral ADDRESS VALUE]
                                                  [--tx-total-collateral INTEGER]
                                                  [ --required-signer FILEPATH
                                                  | --required-signer-hash HASH
                                                  ]
                                                  [--tx-out ADDRESS VALUE
                                                    [ --tx-out-datum-hash HASH
                                                    | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                    | --tx-out-datum-hash-file JSON_FILE
                                                    | --tx-out-datum-hash-value JSON_VALUE
                                                    | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                    | --tx-out-datum-embed-file JSON_FILE
                                                    | --tx-out-datum-embed-value JSON_VALUE
                                                    | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                    | --tx-out-inline-datum-file JSON_FILE
                                                    | --tx-out-inline-datum-value JSON_VALUE
                                                    ]
                                                    [--tx-out-reference-script-file FILEPATH]]
                                                  [--mint VALUE
                                                    ( --mint-script-file FILEPATH
                                                      [
                                                        ( --mint-redeemer-cbor-file CBOR_FILE
                                                        | --mint-redeemer-file JSON_FILE
                                                        | --mint-redeemer-value JSON_VALUE
                                                        )
                                                        --mint-execution-units (INT, INT)]
                                                    | --simple-minting-script-tx-in-reference TX-IN
                                                      --policy-id HASH
                                                    | --mint-tx-in-reference TX-IN
                                                      ( --mint-plutus-script-v2
                                                      | --mint-plutus-script-v3
                                                      )
                                                      ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                      | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --mint-reference-tx-in-execution-units (INT, INT)
                                                      --policy-id HASH
                                                    )]
                                                  [--invalid-before SLOT]
                                                  [--invalid-hereafter SLOT]
                                                  --fee LOVELACE
                                                  [--certificate-file FILEPATH
                                                    [ --certificate-script-file FILEPATH
                                                      [
                                                        ( --certificate-redeemer-cbor-file CBOR_FILE
                                                        | --certificate-redeemer-file JSON_FILE
                                                        | --certificate-redeemer-value JSON_VALUE
                                                        )
                                                        --certificate-execution-units (INT, INT)]
                                                    | --certificate-tx-in-reference TX-IN
                                                      ( --certificate-plutus-script-v2
                                                      | --certificate-plutus-script-v3
                                                      )
                                                      ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                      | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --certificate-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--withdrawal WITHDRAWAL
                                                    [ --withdrawal-script-file FILEPATH
                                                      [
                                                        ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                        | --withdrawal-redeemer-file JSON_FILE
                                                        | --withdrawal-redeemer-value JSON_VALUE
                                                        )
                                                        --withdrawal-execution-units (INT, INT)]
                                                    | --withdrawal-tx-in-reference TX-IN
                                                      ( --withdrawal-plutus-script-v2
                                                      | --withdrawal-plutus-script-v3
                                                      )
                                                      ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                      | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [ --json-metadata-no-schema
                                                  | --json-metadata-detailed-schema
                                                  ]
                                                  [--auxiliary-script-file FILEPATH]
                                                  [ --metadata-json-file FILEPATH
                                                  | --metadata-cbor-file FILEPATH
                                                  ]
                                                  [--protocol-params-file FILEPATH]
                                                  [--vote-file FILEPATH
                                                    [ --vote-script-file FILEPATH
                                                      [
                                                        ( --vote-redeemer-cbor-file CBOR_FILE
                                                        | --vote-redeemer-file JSON_FILE
                                                        | --vote-redeemer-value JSON_VALUE
                                                        )
                                                        --vote-execution-units (INT, INT)]
                                                    | --vote-tx-in-reference TX-IN
                                                      --vote-plutus-script-v3
                                                      ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                      | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --vote-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--proposal-file FILEPATH
                                                    [ --proposal-script-file FILEPATH
                                                      [
                                                        ( --proposal-redeemer-cbor-file CBOR_FILE
                                                        | --proposal-redeemer-file JSON_FILE
                                                        | --proposal-redeemer-value JSON_VALUE
                                                        )
                                                        --proposal-execution-units (INT, INT)]
                                                    | --proposal-tx-in-reference TX-IN
                                                      --proposal-plutus-script-v3
                                                      ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                      | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                      | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                      )
                                                      --proposal-reference-tx-in-execution-units (INT, INT)
                                                    ]]
                                                  [--current-treasury-value LOVELACE
                                                    --treasury-donation LOVELACE]
                                                  --out-file FILEPATH

  Build a transaction (low-level, inconvenient)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli latest transaction build --socket-path SOCKET_PATH
                                              [--cardano-mode
                                                [--epoch-slots SLOTS]]
                                              ( --mainnet
                                              | --testnet-magic NATURAL
                                              )
                                              [ --script-valid
                                              | --script-invalid
                                              ]
                                              [--witness-override WORD]
                                              (--tx-in TX-IN
                                                [ --spending-tx-in-reference TX-IN
                                                  ( --spending-plutus-script-v2
                                                  | --spending-plutus-script-v3
                                                  )
                                                  [ --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                  | --spending-reference-tx-in-datum-file JSON_FILE
                                                  | --spending-reference-tx-in-datum-value JSON_VALUE
                                                  | --spending-reference-tx-in-inline-datum-present
                                                  ]
                                                  ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                  | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                | --simple-script-tx-in-reference TX-IN
                                                | --tx-in-script-file FILEPATH
                                                  [
                                                    [ --tx-in-datum-cbor-file CBOR_FILE
                                                    | --tx-in-datum-file JSON_FILE
                                                    | --tx-in-datum-value JSON_VALUE
                                                    | --tx-in-inline-datum-present
                                                    ]
                                                    ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                    | --tx-in-redeemer-file JSON_FILE
                                                    | --tx-in-redeemer-value JSON_VALUE
                                                    )]
                                                ])
                                              [--read-only-tx-in-reference TX-IN]
                                              [ --required-signer FILEPATH
                                              | --required-signer-hash HASH
                                              ]
                                              [--tx-in-collateral TX-IN]
                                              [--tx-out-return-collateral ADDRESS VALUE]
                                              [--tx-total-collateral INTEGER]
                                              [--tx-out ADDRESS VALUE
                                                [ --tx-out-datum-hash HASH
                                                | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                | --tx-out-datum-hash-file JSON_FILE
                                                | --tx-out-datum-hash-value JSON_VALUE
                                                | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                | --tx-out-datum-embed-file JSON_FILE
                                                | --tx-out-datum-embed-value JSON_VALUE
                                                | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                | --tx-out-inline-datum-file JSON_FILE
                                                | --tx-out-inline-datum-value JSON_VALUE
                                                ]
                                                [--tx-out-reference-script-file FILEPATH]]
                                              --change-address ADDRESS
                                              [--mint VALUE
                                                ( --mint-script-file FILEPATH
                                                  [ --mint-redeemer-cbor-file CBOR_FILE
                                                  | --mint-redeemer-file JSON_FILE
                                                  | --mint-redeemer-value JSON_VALUE
                                                  ]
                                                | --simple-minting-script-tx-in-reference TX-IN
                                                  --policy-id HASH
                                                | --mint-tx-in-reference TX-IN
                                                  ( --mint-plutus-script-v2
                                                  | --mint-plutus-script-v3
                                                  )
                                                  ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                  | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                  --policy-id HASH
                                                )]
                                              [--invalid-before SLOT]
                                              [--invalid-hereafter SLOT]
                                              [--certificate-file FILEPATH
                                                [ --certificate-script-file FILEPATH
                                                  [ --certificate-redeemer-cbor-file CBOR_FILE
                                                  | --certificate-redeemer-file JSON_FILE
                                                  | --certificate-redeemer-value JSON_VALUE
                                                  ]
                                                | --certificate-tx-in-reference TX-IN
                                                  ( --certificate-plutus-script-v2
                                                  | --certificate-plutus-script-v3
                                                  )
                                                  ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                  | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [--withdrawal WITHDRAWAL
                                                [ --withdrawal-script-file FILEPATH
                                                  [ --withdrawal-redeemer-cbor-file CBOR_FILE
                                                  | --withdrawal-redeemer-file JSON_FILE
                                                  | --withdrawal-redeemer-value JSON_VALUE
                                                  ]
                                                | --withdrawal-tx-in-reference TX-IN
                                                  ( --withdrawal-plutus-script-v2
                                                  | --withdrawal-plutus-script-v3
                                                  )
                                                  ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                  | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [ --json-metadata-no-schema
                                              | --json-metadata-detailed-schema
                                              ]
                                              [--auxiliary-script-file FILEPATH]
                                              [ --metadata-json-file FILEPATH
                                              | --metadata-cbor-file FILEPATH
                                              ]
                                              [--vote-file FILEPATH
                                                [ --vote-script-file FILEPATH
                                                  [ --vote-redeemer-cbor-file CBOR_FILE
                                                  | --vote-redeemer-file JSON_FILE
                                                  | --vote-redeemer-value JSON_VALUE
                                                  ]
                                                | --vote-tx-in-reference TX-IN
                                                  --vote-plutus-script-v3
                                                  ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                  | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [--proposal-file FILEPATH
                                                [ --proposal-script-file FILEPATH
                                                  [ --proposal-redeemer-cbor-file CBOR_FILE
                                                  | --proposal-redeemer-file JSON_FILE
                                                  | --proposal-redeemer-value JSON_VALUE
                                                  ]
                                                | --proposal-tx-in-reference TX-IN
                                                  --proposal-plutus-script-v3
                                                  ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                  | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                  | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                  )
                                                ]]
                                              [--treasury-donation LOVELACE]
                                              ( --out-file FILEPATH
                                              | --calculate-plutus-script-cost FILEPATH
                                              )

  Build a balanced transaction (automatically calculates fees)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli latest transaction build-estimate 
                                                       [ --script-valid
                                                       | --script-invalid
                                                       ]
                                                       --shelley-key-witnesses INT
                                                       [--byron-key-witnesses Int]
                                                       --protocol-params-file FILEPATH
                                                       --total-utxo-value VALUE
                                                       (--tx-in TX-IN
                                                         [ --spending-tx-in-reference TX-IN
                                                           ( --spending-plutus-script-v2
                                                           | --spending-plutus-script-v3
                                                           )
                                                           [ --spending-reference-tx-in-datum-cbor-file CBOR_FILE
                                                           | --spending-reference-tx-in-datum-file JSON_FILE
                                                           | --spending-reference-tx-in-datum-value JSON_VALUE
                                                           | --spending-reference-tx-in-inline-datum-present
                                                           ]
                                                           ( --spending-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --spending-reference-tx-in-redeemer-file JSON_FILE
                                                           | --spending-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --spending-reference-tx-in-execution-units (INT, INT)
                                                         | --simple-script-tx-in-reference TX-IN
                                                         | --tx-in-script-file FILEPATH
                                                           [
                                                             [ --tx-in-datum-cbor-file CBOR_FILE
                                                             | --tx-in-datum-file JSON_FILE
                                                             | --tx-in-datum-value JSON_VALUE
                                                             | --tx-in-inline-datum-present
                                                             ]
                                                             ( --tx-in-redeemer-cbor-file CBOR_FILE
                                                             | --tx-in-redeemer-file JSON_FILE
                                                             | --tx-in-redeemer-value JSON_VALUE
                                                             )
                                                             --tx-in-execution-units (INT, INT)]
                                                         ])
                                                       [--read-only-tx-in-reference TX-IN]
                                                       [ --required-signer FILEPATH
                                                       | --required-signer-hash HASH
                                                       ]
                                                       [--tx-in-collateral TX-IN]
                                                       [--tx-out-return-collateral ADDRESS VALUE]
                                                       [--tx-out ADDRESS VALUE
                                                         [ --tx-out-datum-hash HASH
                                                         | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                         | --tx-out-datum-hash-file JSON_FILE
                                                         | --tx-out-datum-hash-value JSON_VALUE
                                                         | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                         | --tx-out-datum-embed-file JSON_FILE
                                                         | --tx-out-datum-embed-value JSON_VALUE
                                                         | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                         | --tx-out-inline-datum-file JSON_FILE
                                                         | --tx-out-inline-datum-value JSON_VALUE
                                                         ]
                                                         [--tx-out-reference-script-file FILEPATH]]
                                                       --change-address ADDRESS
                                                       [--mint VALUE
                                                         ( --mint-script-file FILEPATH
                                                           [
                                                             ( --mint-redeemer-cbor-file CBOR_FILE
                                                             | --mint-redeemer-file JSON_FILE
                                                             | --mint-redeemer-value JSON_VALUE
                                                             )
                                                             --mint-execution-units (INT, INT)]
                                                         | --simple-minting-script-tx-in-reference TX-IN
                                                           --policy-id HASH
                                                         | --mint-tx-in-reference TX-IN
                                                           ( --mint-plutus-script-v2
                                                           | --mint-plutus-script-v3
                                                           )
                                                           ( --mint-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --mint-reference-tx-in-redeemer-file JSON_FILE
                                                           | --mint-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --mint-reference-tx-in-execution-units (INT, INT)
                                                           --policy-id HASH
                                                         )]
                                                       [--invalid-before SLOT]
                                                       [--invalid-hereafter SLOT]
                                                       [
                                                         --certificate-file FILEPATH
                                                         [ --certificate-script-file FILEPATH
                                                           [
                                                             ( --certificate-redeemer-cbor-file CBOR_FILE
                                                             | --certificate-redeemer-file JSON_FILE
                                                             | --certificate-redeemer-value JSON_VALUE
                                                             )
                                                             --certificate-execution-units (INT, INT)]
                                                         | --certificate-tx-in-reference TX-IN
                                                           ( --certificate-plutus-script-v2
                                                           | --certificate-plutus-script-v3
                                                           )
                                                           ( --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --certificate-reference-tx-in-redeemer-file JSON_FILE
                                                           | --certificate-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --certificate-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--withdrawal WITHDRAWAL
                                                         [ --withdrawal-script-file FILEPATH
                                                           [
                                                             ( --withdrawal-redeemer-cbor-file CBOR_FILE
                                                             | --withdrawal-redeemer-file JSON_FILE
                                                             | --withdrawal-redeemer-value JSON_VALUE
                                                             )
                                                             --withdrawal-execution-units (INT, INT)]
                                                         | --withdrawal-tx-in-reference TX-IN
                                                           ( --withdrawal-plutus-script-v2
                                                           | --withdrawal-plutus-script-v3
                                                           )
                                                           ( --withdrawal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --withdrawal-reference-tx-in-redeemer-file JSON_FILE
                                                           | --withdrawal-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --withdrawal-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--tx-total-collateral INTEGER]
                                                       [--reference-script-size NATURAL]
                                                       [ --json-metadata-no-schema
                                                       | --json-metadata-detailed-schema
                                                       ]
                                                       [--auxiliary-script-file FILEPATH]
                                                       [ --metadata-json-file FILEPATH
                                                       | --metadata-cbor-file FILEPATH
                                                       ]
                                                       [--vote-file FILEPATH
                                                         [ --vote-script-file FILEPATH
                                                           [
                                                             ( --vote-redeemer-cbor-file CBOR_FILE
                                                             | --vote-redeemer-file JSON_FILE
                                                             | --vote-redeemer-value JSON_VALUE
                                                             )
                                                             --vote-execution-units (INT, INT)]
                                                         | --vote-tx-in-reference TX-IN
                                                           --vote-plutus-script-v3
                                                           ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                           | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --vote-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--proposal-file FILEPATH
                                                         [ --proposal-script-file FILEPATH
                                                           [
                                                             ( --proposal-redeemer-cbor-file CBOR_FILE
                                                             | --proposal-redeemer-file JSON_FILE
                                                             | --proposal-redeemer-value JSON_VALUE
                                                             )
                                                             --proposal-execution-units (INT, INT)]
                                                         | --proposal-tx-in-reference TX-IN
                                                           --proposal-plutus-script-v3
                                                           ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                           | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                           | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                           )
                                                           --proposal-reference-tx-in-execution-units (INT, INT)
                                                         ]]
                                                       [--current-treasury-value LOVELACE
                                                         --treasury-donation LOVELACE]
                                                       --out-file FILEPATH

  Build a balanced transaction without access to a live node (automatically estimates fees)

  Please note the order[93;22;23;24m of some cmd options is crucial. If used incorrectly may produce undesired tx body. See nested [] notation above for details.[0;22;23;24m

Usage: cardano-cli latest transaction sign 
                                             ( --tx-body-file FILEPATH
                                             | --tx-file FILEPATH
                                             )
                                             [--signing-key-file FILEPATH
                                               [--address STRING]]
                                             [ --mainnet
                                             | --testnet-magic NATURAL
                                             ]
                                             --out-file FILEPATH

  Sign a transaction

Usage: cardano-cli latest transaction witness --tx-body-file FILEPATH
                                                --signing-key-file FILEPATH
                                                [--address STRING]
                                                [ --mainnet
                                                | --testnet-magic NATURAL
                                                ]
                                                --out-file FILEPATH

  Create a transaction witness

Usage: cardano-cli latest transaction assemble --tx-body-file FILEPATH
                                                 [--witness-file FILEPATH]
                                                 --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli latest transaction sign-witness --tx-body-file FILEPATH
                                                     [--witness-file FILEPATH]
                                                     --out-file FILEPATH

  Assemble a tx body and witness(es) to form a transaction

Usage: cardano-cli latest transaction submit --socket-path SOCKET_PATH
                                               [--cardano-mode
                                                 [--epoch-slots SLOTS]]
                                               ( --mainnet
                                               | --testnet-magic NATURAL
                                               )
                                               --tx-file FILEPATH

  Submit a transaction to the local node whose Unix domain socket is obtained
  from the CARDANO_NODE_SOCKET_PATH environment variable.

Usage: cardano-cli latest transaction policyid --script-file FILEPATH

  Calculate the PolicyId from the monetary policy script.

Usage: cardano-cli latest transaction calculate-min-fee --tx-body-file FILEPATH
                                                          --protocol-params-file FILEPATH
                                                          --witness-count NATURAL
                                                          [--byron-witness-count NATURAL]
                                                          [--reference-script-size NATURAL]
                                                          [ --output-json
                                                          | --output-text
                                                          ]
                                                          [--out-file FILEPATH]
                                                          [ --mainnet
                                                          | --testnet-magic NATURAL
                                                          ]
                                                          [--tx-in-count NATURAL]
                                                          [--tx-out-count NATURAL]

  Calculate the minimum fee for a transaction.

Usage: cardano-cli latest transaction calculate-min-required-utxo --protocol-params-file FILEPATH
                                                                    --tx-out ADDRESS VALUE
                                                                    [ --tx-out-datum-hash HASH
                                                                    | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                    | --tx-out-datum-hash-file JSON_FILE
                                                                    | --tx-out-datum-hash-value JSON_VALUE
                                                                    | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                    | --tx-out-datum-embed-file JSON_FILE
                                                                    | --tx-out-datum-embed-value JSON_VALUE
                                                                    | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                    | --tx-out-inline-datum-file JSON_FILE
                                                                    | --tx-out-inline-datum-value JSON_VALUE
                                                                    ]
                                                                    [--tx-out-reference-script-file FILEPATH]

  Calculate the minimum required UTxO for a transaction output.

Usage: cardano-cli latest transaction calculate-min-value --protocol-params-file FILEPATH
                                                            --tx-out ADDRESS VALUE
                                                            [ --tx-out-datum-hash HASH
                                                            | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                            | --tx-out-datum-hash-file JSON_FILE
                                                            | --tx-out-datum-hash-value JSON_VALUE
                                                            | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                            | --tx-out-datum-embed-file JSON_FILE
                                                            | --tx-out-datum-embed-value JSON_VALUE
                                                            | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                            | --tx-out-inline-datum-file JSON_FILE
                                                            | --tx-out-inline-datum-value JSON_VALUE
                                                            ]
                                                            [--tx-out-reference-script-file FILEPATH]

  DEPRECATED: Use 'calculate-min-required-utxo' instead.

Usage: cardano-cli latest transaction hash-script-data 
                                                         ( --script-data-cbor-file CBOR_FILE
                                                         | --script-data-file JSON_FILE
                                                         | --script-data-value JSON_VALUE
                                                         )

  Calculate the hash of script data.

Usage: cardano-cli latest transaction txid 
                                             ( --tx-body-file FILEPATH
                                             | --tx-file FILEPATH
                                             )

  Print a transaction identifier.

Usage: cardano-cli hash (anchor-data | script)

  Compute the hash to pass to the various --*-hash arguments of commands.

Usage: cardano-cli hash anchor-data 
                                      ( --text TEXT
                                      | --file-binary FILEPATH
                                      | --file-text FILEPATH
                                      | --url TEXT
                                      )
                                      [ --expected-hash HASH
                                      | --out-file FILEPATH
                                      ]

  Compute the hash of some anchor data (to then pass it to other commands).

Usage: cardano-cli hash script --script-file FILEPATH [--out-file FILEPATH]

  Compute the hash of a script (to then pass it to other commands).

Usage: cardano-cli ping [-c|--count COUNT]
                          ((-h|--host HOST) | (-u|--unixsock SOCKET))
                          [-p|--port PORT]
                          [-m|--magic MAGIC]
                          [-j|--json]
                          [-q|--quiet]
                          [-Q|--query-versions]
                          [-t|--tip]

  Ping a cardano node either using node-to-node or node-to-client protocol. It negotiates a handshake and keeps sending keep alive messages.

Usage: cardano-cli debug 
                           ( log-epoch-state
                           | check-node-configuration
                           | transaction
                           )

  Debug commands

Usage: cardano-cli debug log-epoch-state --socket-path SOCKET_PATH
                                           --node-configuration-file FILEPATH
                                           --out-file FILEPATH

  Log epoch state of a running node. This command will connect to a local node
  and log the epoch state to a file. The log file format is line delimited JSON.
  The command will not terminate.

Usage: cardano-cli debug check-node-configuration --node-configuration-file FILEPATH

  Check hashes and paths of genesis files in the given node configuration file.

Usage: cardano-cli debug transaction view

  Transaction commands

Usage: cardano-cli debug transaction view [--output-json | --output-yaml]
                                            [--out-file FILEPATH]
                                            ( --tx-body-file FILEPATH
                                            | --tx-file FILEPATH
                                            )

  Print a transaction.

Usage: cardano-cli genesis --genesis-output-dir FILEPATH
                             --start-time POSIXSECONDS
                             --protocol-parameters-file FILEPATH
                             --k INT
                             --protocol-magic INT
                             --n-poor-addresses INT
                             --n-delegate-addresses INT
                             --total-balance INT
                             --delegate-share DOUBLE
                             --avvm-entry-count INT
                             --avvm-entry-balance INT
                             [--avvm-balance-factor DOUBLE]
                             [--secret-seed INT]

  Create genesis.

Usage: cardano-cli print-genesis-hash --genesis-json FILEPATH

  Compute hash of a genesis file.

Usage: cardano-cli keygen --secret FILEPATH

  Generate a signing key.

Usage: cardano-cli to-verification [--byron-legacy-formats | --byron-formats]
                                     --secret FILEPATH
                                     --to FILEPATH

  Extract a verification key in its base64 form.

Usage: cardano-cli signing-key-public [--byron-legacy-formats | --byron-formats]
                                        --secret FILEPATH

  Pretty-print a signing key's verification key (not a secret).

Usage: cardano-cli signing-key-address 
                                         [ --byron-legacy-formats
                                         | --byron-formats
                                         ]
                                         (--mainnet | --testnet-magic NATURAL)
                                         --secret FILEPATH

  Print address of a signing key.

Usage: cardano-cli migrate-delegate-key-from --from FILEPATH --to FILEPATH

  Migrate a delegate key from an older version.

Usage: cardano-cli submit-tx --socket-path SOCKET_PATH
                               (--mainnet | --testnet-magic NATURAL)
                               --tx FILEPATH

  Submit a raw, signed transaction, in its on-wire representation.

Usage: cardano-cli issue-genesis-utxo-expenditure --genesis-json FILEPATH
                                                    ( --mainnet
                                                    | --testnet-magic NATURAL
                                                    )
                                                    [ --byron-legacy-formats
                                                    | --byron-formats
                                                    ]
                                                    --tx FILEPATH
                                                    --wallet-key FILEPATH
                                                    --rich-addr-from ADDR
                                                    (--txout '("ADDR", LOVELACE)')

  Write a file with a signed transaction, spending genesis UTxO.

Usage: cardano-cli issue-utxo-expenditure (--mainnet | --testnet-magic NATURAL)
                                            [ --byron-legacy-formats
                                            | --byron-formats
                                            ]
                                            --tx FILEPATH
                                            --wallet-key FILEPATH
                                            (--txin (TXID,INDEX))
                                            (--txout '("ADDR", LOVELACE)')

  Write a file with a signed transaction, spending normal UTxO.

Usage: cardano-cli txid --tx FILEPATH

  Print the txid of a raw, signed transaction.

Usage: cardano-cli validate-cbor 
                                   [ --byron-block INT
                                   | --byron-delegation-certificate
                                   | --byron-tx
                                   | --byron-update-proposal
                                   | --byron-vote
                                   ]
                                   --filepath FILEPATH

  Validate a CBOR blockchain object.

Usage: cardano-cli pretty-print-cbor --filepath FILEPATH

  Pretty print a CBOR file.

Usage: cardano-cli version 

  Show the cardano-cli version

Usage: cardano-cli help 

  Show all help

Usage: cardano-cli compatible 
                                ( shelley
                                | allegra
                                | mary
                                | alonzo
                                | babbage
                                | conway
                                )

  Limited backward compatible commands for testing only.

Usage: cardano-cli compatible shelley (transaction | governance)

  Shelley era commands

Usage: cardano-cli compatible shelley transaction signed-transaction

  Transaction commands.

Usage: cardano-cli compatible shelley transaction signed-transaction 
                                                                       [--tx-in TX-IN]
                                                                       [--tx-out ADDRESS VALUE]
                                                                       [--update-proposal-file FILEPATH]
                                                                       [--signing-key-file FILEPATH
                                                                         [--address STRING]]
                                                                       [ --mainnet
                                                                       | --testnet-magic NATURAL
                                                                       ]
                                                                       --fee LOVELACE
                                                                       --out-file FILEPATH

  Create a simple signed transaction.

Usage: cardano-cli compatible shelley governance 
                                                   ( create-mir-certificate
                                                   | create-genesis-key-delegation-certificate
                                                   | action
                                                   )

  Governance commands.

Usage: cardano-cli compatible shelley governance create-mir-certificate 
                                                                          ( ( --reserves
                                                                            | --treasury
                                                                            )
                                                                            (--stake-address ADDRESS)
                                                                            (--reward LOVELACE)
                                                                            --out-file FILEPATH
                                                                          | stake-addresses
                                                                          | transfer-to-treasury
                                                                          | transfer-to-rewards
                                                                          )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli compatible shelley governance create-mir-certificate stake-addresses 
                                                                                          ( --reserves
                                                                                          | --treasury
                                                                                          )
                                                                                          (--stake-address ADDRESS)
                                                                                          (--reward LOVELACE)
                                                                                          --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli compatible shelley governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                               --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli compatible shelley governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                              --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli compatible shelley governance create-genesis-key-delegation-certificate 
                                                                                             ( --genesis-verification-key STRING
                                                                                             | --genesis-verification-key-file FILEPATH
                                                                                             | --genesis-verification-key-hash STRING
                                                                                             )
                                                                                             ( --genesis-delegate-verification-key STRING
                                                                                             | --genesis-delegate-verification-key-file FILEPATH
                                                                                             | --genesis-delegate-verification-key-hash STRING
                                                                                             )
                                                                                             ( --vrf-verification-key STRING
                                                                                             | --vrf-verification-key-file FILEPATH
                                                                                             | --vrf-verification-key-hash STRING
                                                                                             )
                                                                                             --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli compatible shelley governance action 
                                                          create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli compatible shelley governance action create-protocol-parameters-update --epoch NATURAL
                                                                                            (--genesis-verification-key-file FILEPATH)
                                                                                            [--min-fee-linear LOVELACE]
                                                                                            [--min-fee-constant LOVELACE]
                                                                                            [--max-block-body-size WORD32]
                                                                                            [--max-tx-size WORD32]
                                                                                            [--max-block-header-size WORD16]
                                                                                            [--key-reg-deposit-amt NATURAL]
                                                                                            [--pool-reg-deposit NATURAL]
                                                                                            [--pool-retirement-epoch-interval WORD32]
                                                                                            [--number-of-pools NATURAL]
                                                                                            [--pool-influence RATIONAL]
                                                                                            [--treasury-expansion RATIONAL]
                                                                                            [--monetary-expansion RATIONAL]
                                                                                            [--min-pool-cost NATURAL]
                                                                                            [--min-utxo-value NATURAL]
                                                                                            [--protocol-major-version MAJOR
                                                                                              --protocol-minor-version MINOR]
                                                                                            [ --extra-entropy HEX
                                                                                            | --reset-extra-entropy
                                                                                            ]
                                                                                            [--decentralization-parameter RATIONAL]
                                                                                            --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli compatible allegra (transaction | governance)

  Allegra era commands

Usage: cardano-cli compatible allegra transaction signed-transaction

  Transaction commands.

Usage: cardano-cli compatible allegra transaction signed-transaction 
                                                                       [--tx-in TX-IN]
                                                                       [--tx-out ADDRESS VALUE]
                                                                       [--update-proposal-file FILEPATH]
                                                                       [--signing-key-file FILEPATH
                                                                         [--address STRING]]
                                                                       [ --mainnet
                                                                       | --testnet-magic NATURAL
                                                                       ]
                                                                       --fee LOVELACE
                                                                       --out-file FILEPATH

  Create a simple signed transaction.

Usage: cardano-cli compatible allegra governance 
                                                   ( create-mir-certificate
                                                   | create-genesis-key-delegation-certificate
                                                   | action
                                                   )

  Governance commands.

Usage: cardano-cli compatible allegra governance create-mir-certificate 
                                                                          ( ( --reserves
                                                                            | --treasury
                                                                            )
                                                                            (--stake-address ADDRESS)
                                                                            (--reward LOVELACE)
                                                                            --out-file FILEPATH
                                                                          | stake-addresses
                                                                          | transfer-to-treasury
                                                                          | transfer-to-rewards
                                                                          )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli compatible allegra governance create-mir-certificate stake-addresses 
                                                                                          ( --reserves
                                                                                          | --treasury
                                                                                          )
                                                                                          (--stake-address ADDRESS)
                                                                                          (--reward LOVELACE)
                                                                                          --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli compatible allegra governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                               --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli compatible allegra governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                              --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli compatible allegra governance create-genesis-key-delegation-certificate 
                                                                                             ( --genesis-verification-key STRING
                                                                                             | --genesis-verification-key-file FILEPATH
                                                                                             | --genesis-verification-key-hash STRING
                                                                                             )
                                                                                             ( --genesis-delegate-verification-key STRING
                                                                                             | --genesis-delegate-verification-key-file FILEPATH
                                                                                             | --genesis-delegate-verification-key-hash STRING
                                                                                             )
                                                                                             ( --vrf-verification-key STRING
                                                                                             | --vrf-verification-key-file FILEPATH
                                                                                             | --vrf-verification-key-hash STRING
                                                                                             )
                                                                                             --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli compatible allegra governance action 
                                                          create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli compatible allegra governance action create-protocol-parameters-update --epoch NATURAL
                                                                                            (--genesis-verification-key-file FILEPATH)
                                                                                            [--min-fee-linear LOVELACE]
                                                                                            [--min-fee-constant LOVELACE]
                                                                                            [--max-block-body-size WORD32]
                                                                                            [--max-tx-size WORD32]
                                                                                            [--max-block-header-size WORD16]
                                                                                            [--key-reg-deposit-amt NATURAL]
                                                                                            [--pool-reg-deposit NATURAL]
                                                                                            [--pool-retirement-epoch-interval WORD32]
                                                                                            [--number-of-pools NATURAL]
                                                                                            [--pool-influence RATIONAL]
                                                                                            [--treasury-expansion RATIONAL]
                                                                                            [--monetary-expansion RATIONAL]
                                                                                            [--min-pool-cost NATURAL]
                                                                                            [--min-utxo-value NATURAL]
                                                                                            [ --extra-entropy HEX
                                                                                            | --reset-extra-entropy
                                                                                            ]
                                                                                            [--decentralization-parameter RATIONAL]
                                                                                            [--protocol-major-version MAJOR
                                                                                              --protocol-minor-version MINOR]
                                                                                            --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli compatible mary (transaction | governance)

  Mary era commands

Usage: cardano-cli compatible mary transaction signed-transaction

  Transaction commands.

Usage: cardano-cli compatible mary transaction signed-transaction 
                                                                    [--tx-in TX-IN]
                                                                    [--tx-out ADDRESS VALUE]
                                                                    [--update-proposal-file FILEPATH]
                                                                    [--signing-key-file FILEPATH
                                                                      [--address STRING]]
                                                                    [ --mainnet
                                                                    | --testnet-magic NATURAL
                                                                    ]
                                                                    --fee LOVELACE
                                                                    --out-file FILEPATH

  Create a simple signed transaction.

Usage: cardano-cli compatible mary governance 
                                                ( create-mir-certificate
                                                | create-genesis-key-delegation-certificate
                                                | action
                                                )

  Governance commands.

Usage: cardano-cli compatible mary governance create-mir-certificate 
                                                                       ( ( --reserves
                                                                         | --treasury
                                                                         )
                                                                         (--stake-address ADDRESS)
                                                                         (--reward LOVELACE)
                                                                         --out-file FILEPATH
                                                                       | stake-addresses
                                                                       | transfer-to-treasury
                                                                       | transfer-to-rewards
                                                                       )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli compatible mary governance create-mir-certificate stake-addresses 
                                                                                       ( --reserves
                                                                                       | --treasury
                                                                                       )
                                                                                       (--stake-address ADDRESS)
                                                                                       (--reward LOVELACE)
                                                                                       --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli compatible mary governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                            --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli compatible mary governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                           --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli compatible mary governance create-genesis-key-delegation-certificate 
                                                                                          ( --genesis-verification-key STRING
                                                                                          | --genesis-verification-key-file FILEPATH
                                                                                          | --genesis-verification-key-hash STRING
                                                                                          )
                                                                                          ( --genesis-delegate-verification-key STRING
                                                                                          | --genesis-delegate-verification-key-file FILEPATH
                                                                                          | --genesis-delegate-verification-key-hash STRING
                                                                                          )
                                                                                          ( --vrf-verification-key STRING
                                                                                          | --vrf-verification-key-file FILEPATH
                                                                                          | --vrf-verification-key-hash STRING
                                                                                          )
                                                                                          --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli compatible mary governance action 
                                                       create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli compatible mary governance action create-protocol-parameters-update --epoch NATURAL
                                                                                         (--genesis-verification-key-file FILEPATH)
                                                                                         [--min-fee-linear LOVELACE]
                                                                                         [--min-fee-constant LOVELACE]
                                                                                         [--max-block-body-size WORD32]
                                                                                         [--max-tx-size WORD32]
                                                                                         [--max-block-header-size WORD16]
                                                                                         [--key-reg-deposit-amt NATURAL]
                                                                                         [--pool-reg-deposit NATURAL]
                                                                                         [--pool-retirement-epoch-interval WORD32]
                                                                                         [--number-of-pools NATURAL]
                                                                                         [--pool-influence RATIONAL]
                                                                                         [--treasury-expansion RATIONAL]
                                                                                         [--monetary-expansion RATIONAL]
                                                                                         [--min-pool-cost NATURAL]
                                                                                         [--min-utxo-value NATURAL]
                                                                                         [ --extra-entropy HEX
                                                                                         | --reset-extra-entropy
                                                                                         ]
                                                                                         [--decentralization-parameter RATIONAL]
                                                                                         [--protocol-major-version MAJOR
                                                                                           --protocol-minor-version MINOR]
                                                                                         --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli compatible alonzo (transaction | governance)

  Alonzo era commands

Usage: cardano-cli compatible alonzo transaction signed-transaction

  Transaction commands.

Usage: cardano-cli compatible alonzo transaction signed-transaction 
                                                                      [--tx-in TX-IN]
                                                                      [--tx-out ADDRESS VALUE
                                                                        [ --tx-out-datum-hash HASH
                                                                        | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                        | --tx-out-datum-hash-file JSON_FILE
                                                                        | --tx-out-datum-hash-value JSON_VALUE
                                                                        | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                        | --tx-out-datum-embed-file JSON_FILE
                                                                        | --tx-out-datum-embed-value JSON_VALUE
                                                                        ]]
                                                                      [--update-proposal-file FILEPATH]
                                                                      [--signing-key-file FILEPATH
                                                                        [--address STRING]]
                                                                      [ --mainnet
                                                                      | --testnet-magic NATURAL
                                                                      ]
                                                                      --fee LOVELACE
                                                                      --out-file FILEPATH

  Create a simple signed transaction.

Usage: cardano-cli compatible alonzo governance 
                                                  ( create-mir-certificate
                                                  | create-genesis-key-delegation-certificate
                                                  | action
                                                  )

  Governance commands.

Usage: cardano-cli compatible alonzo governance create-mir-certificate 
                                                                         ( ( --reserves
                                                                           | --treasury
                                                                           )
                                                                           (--stake-address ADDRESS)
                                                                           (--reward LOVELACE)
                                                                           --out-file FILEPATH
                                                                         | stake-addresses
                                                                         | transfer-to-treasury
                                                                         | transfer-to-rewards
                                                                         )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli compatible alonzo governance create-mir-certificate stake-addresses 
                                                                                         ( --reserves
                                                                                         | --treasury
                                                                                         )
                                                                                         (--stake-address ADDRESS)
                                                                                         (--reward LOVELACE)
                                                                                         --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli compatible alonzo governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                              --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli compatible alonzo governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                             --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli compatible alonzo governance create-genesis-key-delegation-certificate 
                                                                                            ( --genesis-verification-key STRING
                                                                                            | --genesis-verification-key-file FILEPATH
                                                                                            | --genesis-verification-key-hash STRING
                                                                                            )
                                                                                            ( --genesis-delegate-verification-key STRING
                                                                                            | --genesis-delegate-verification-key-file FILEPATH
                                                                                            | --genesis-delegate-verification-key-hash STRING
                                                                                            )
                                                                                            ( --vrf-verification-key STRING
                                                                                            | --vrf-verification-key-file FILEPATH
                                                                                            | --vrf-verification-key-hash STRING
                                                                                            )
                                                                                            --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli compatible alonzo governance action 
                                                         create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli compatible alonzo governance action create-protocol-parameters-update --epoch NATURAL
                                                                                           (--genesis-verification-key-file FILEPATH)
                                                                                           [--min-fee-linear LOVELACE]
                                                                                           [--min-fee-constant LOVELACE]
                                                                                           [--max-block-body-size WORD32]
                                                                                           [--max-tx-size WORD32]
                                                                                           [--max-block-header-size WORD16]
                                                                                           [--key-reg-deposit-amt NATURAL]
                                                                                           [--pool-reg-deposit NATURAL]
                                                                                           [--pool-retirement-epoch-interval WORD32]
                                                                                           [--number-of-pools NATURAL]
                                                                                           [--pool-influence RATIONAL]
                                                                                           [--treasury-expansion RATIONAL]
                                                                                           [--monetary-expansion RATIONAL]
                                                                                           [--min-pool-cost NATURAL]
                                                                                           [ --extra-entropy HEX
                                                                                           | --reset-extra-entropy
                                                                                           ]
                                                                                           [--decentralization-parameter RATIONAL]
                                                                                           [--price-execution-steps RATIONAL
                                                                                             --price-execution-memory RATIONAL]
                                                                                           [--max-tx-execution-units (INT, INT)]
                                                                                           [--max-block-execution-units (INT, INT)]
                                                                                           [--max-value-size INT]
                                                                                           [--collateral-percent INT]
                                                                                           [--max-collateral-inputs INT]
                                                                                           [--protocol-major-version MAJOR
                                                                                             --protocol-minor-version MINOR]
                                                                                           [--cost-model-file FILE]
                                                                                           --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli compatible babbage (transaction | governance)

  Babbage era commands

Usage: cardano-cli compatible babbage transaction signed-transaction

  Transaction commands.

Usage: cardano-cli compatible babbage transaction signed-transaction 
                                                                       [--tx-in TX-IN]
                                                                       [--tx-out ADDRESS VALUE
                                                                         [ --tx-out-datum-hash HASH
                                                                         | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                         | --tx-out-datum-hash-file JSON_FILE
                                                                         | --tx-out-datum-hash-value JSON_VALUE
                                                                         | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                         | --tx-out-datum-embed-file JSON_FILE
                                                                         | --tx-out-datum-embed-value JSON_VALUE
                                                                         | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                         | --tx-out-inline-datum-file JSON_FILE
                                                                         | --tx-out-inline-datum-value JSON_VALUE
                                                                         ]]
                                                                       [--update-proposal-file FILEPATH]
                                                                       [--signing-key-file FILEPATH
                                                                         [--address STRING]]
                                                                       [ --mainnet
                                                                       | --testnet-magic NATURAL
                                                                       ]
                                                                       --fee LOVELACE
                                                                       --out-file FILEPATH

  Create a simple signed transaction.

Usage: cardano-cli compatible babbage governance 
                                                   ( create-mir-certificate
                                                   | create-genesis-key-delegation-certificate
                                                   | action
                                                   | create-poll
                                                   | answer-poll
                                                   | verify-poll
                                                   )

  Governance commands.

Usage: cardano-cli compatible babbage governance create-mir-certificate 
                                                                          ( ( --reserves
                                                                            | --treasury
                                                                            )
                                                                            (--stake-address ADDRESS)
                                                                            (--reward LOVELACE)
                                                                            --out-file FILEPATH
                                                                          | stake-addresses
                                                                          | transfer-to-treasury
                                                                          | transfer-to-rewards
                                                                          )

  Create an MIR (Move Instantaneous Rewards) certificate

Usage: cardano-cli compatible babbage governance create-mir-certificate stake-addresses 
                                                                                          ( --reserves
                                                                                          | --treasury
                                                                                          )
                                                                                          (--stake-address ADDRESS)
                                                                                          (--reward LOVELACE)
                                                                                          --out-file FILEPATH

  Create an MIR certificate to pay stake addresses

Usage: cardano-cli compatible babbage governance create-mir-certificate transfer-to-treasury --transfer LOVELACE
                                                                                               --out-file FILEPATH

  Create an MIR certificate to transfer from the reserves pot to the treasury
  pot

Usage: cardano-cli compatible babbage governance create-mir-certificate transfer-to-rewards --transfer LOVELACE
                                                                                              --out-file FILEPATH

  Create an MIR certificate to transfer from the treasury pot to the reserves
  pot

Usage: cardano-cli compatible babbage governance create-genesis-key-delegation-certificate 
                                                                                             ( --genesis-verification-key STRING
                                                                                             | --genesis-verification-key-file FILEPATH
                                                                                             | --genesis-verification-key-hash STRING
                                                                                             )
                                                                                             ( --genesis-delegate-verification-key STRING
                                                                                             | --genesis-delegate-verification-key-file FILEPATH
                                                                                             | --genesis-delegate-verification-key-hash STRING
                                                                                             )
                                                                                             ( --vrf-verification-key STRING
                                                                                             | --vrf-verification-key-file FILEPATH
                                                                                             | --vrf-verification-key-hash STRING
                                                                                             )
                                                                                             --out-file FILEPATH

  Create a genesis key delegation certificate

Usage: cardano-cli compatible babbage governance action 
                                                          create-protocol-parameters-update

  Governance action commands.

Usage: cardano-cli compatible babbage governance action create-protocol-parameters-update --epoch NATURAL
                                                                                            (--genesis-verification-key-file FILEPATH)
                                                                                            [--min-fee-linear LOVELACE]
                                                                                            [--min-fee-constant LOVELACE]
                                                                                            [--max-block-body-size WORD32]
                                                                                            [--max-tx-size WORD32]
                                                                                            [--max-block-header-size WORD16]
                                                                                            [--key-reg-deposit-amt NATURAL]
                                                                                            [--pool-reg-deposit NATURAL]
                                                                                            [--pool-retirement-epoch-interval WORD32]
                                                                                            [--number-of-pools NATURAL]
                                                                                            [--pool-influence RATIONAL]
                                                                                            [--treasury-expansion RATIONAL]
                                                                                            [--monetary-expansion RATIONAL]
                                                                                            [--min-pool-cost NATURAL]
                                                                                            [--price-execution-steps RATIONAL
                                                                                              --price-execution-memory RATIONAL]
                                                                                            [--max-tx-execution-units (INT, INT)]
                                                                                            [--max-block-execution-units (INT, INT)]
                                                                                            [--max-value-size INT]
                                                                                            [--collateral-percent INT]
                                                                                            [--max-collateral-inputs INT]
                                                                                            [--protocol-major-version MAJOR
                                                                                              --protocol-minor-version MINOR]
                                                                                            [--utxo-cost-per-byte LOVELACE]
                                                                                            [--cost-model-file FILE]
                                                                                            --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli compatible babbage governance create-poll --question STRING
                                                               (--answer STRING)
                                                               [--nonce UINT]
                                                               --out-file FILEPATH

  Create an SPO poll

Usage: cardano-cli compatible babbage governance answer-poll --poll-file FILEPATH
                                                               [--answer INT]
                                                               [--out-file FILEPATH]

  Answer an SPO poll

Usage: cardano-cli compatible babbage governance verify-poll --poll-file FILEPATH
                                                               --tx-file FILEPATH
                                                               [--out-file FILEPATH]

  Verify an answer to a given SPO poll

Usage: cardano-cli compatible conway (transaction | governance)

  Conway era commands

Usage: cardano-cli compatible conway transaction signed-transaction

  Transaction commands.

Usage: cardano-cli compatible conway transaction signed-transaction 
                                                                      [--tx-in TX-IN]
                                                                      [--tx-out ADDRESS VALUE
                                                                        [ --tx-out-datum-hash HASH
                                                                        | --tx-out-datum-hash-cbor-file CBOR_FILE
                                                                        | --tx-out-datum-hash-file JSON_FILE
                                                                        | --tx-out-datum-hash-value JSON_VALUE
                                                                        | --tx-out-datum-embed-cbor-file CBOR_FILE
                                                                        | --tx-out-datum-embed-file JSON_FILE
                                                                        | --tx-out-datum-embed-value JSON_VALUE
                                                                        | --tx-out-inline-datum-cbor-file CBOR_FILE
                                                                        | --tx-out-inline-datum-file JSON_FILE
                                                                        | --tx-out-inline-datum-value JSON_VALUE
                                                                        ]
                                                                        [--tx-out-reference-script-file FILEPATH]]
                                                                      [--proposal-file FILEPATH
                                                                        [ --proposal-script-file FILEPATH
                                                                          [
                                                                            ( --proposal-redeemer-cbor-file CBOR_FILE
                                                                            | --proposal-redeemer-file JSON_FILE
                                                                            | --proposal-redeemer-value JSON_VALUE
                                                                            )
                                                                            --proposal-execution-units (INT, INT)]
                                                                        | --proposal-tx-in-reference TX-IN
                                                                          --proposal-plutus-script-v3
                                                                          ( --proposal-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                                          | --proposal-reference-tx-in-redeemer-file JSON_FILE
                                                                          | --proposal-reference-tx-in-redeemer-value JSON_VALUE
                                                                          )
                                                                          --proposal-reference-tx-in-execution-units (INT, INT)
                                                                        ]]
                                                                      [--vote-file FILEPATH
                                                                        [ --vote-script-file FILEPATH
                                                                          [
                                                                            ( --vote-redeemer-cbor-file CBOR_FILE
                                                                            | --vote-redeemer-file JSON_FILE
                                                                            | --vote-redeemer-value JSON_VALUE
                                                                            )
                                                                            --vote-execution-units (INT, INT)]
                                                                        | --vote-tx-in-reference TX-IN
                                                                          --vote-plutus-script-v3
                                                                          ( --vote-reference-tx-in-redeemer-cbor-file CBOR_FILE
                                                                          | --vote-reference-tx-in-redeemer-file JSON_FILE
                                                                          | --vote-reference-tx-in-redeemer-value JSON_VALUE
                                                                          )
                                                                          --vote-reference-tx-in-execution-units (INT, INT)
                                                                        ]]
                                                                      [--signing-key-file FILEPATH
                                                                        [--address STRING]]
                                                                      [ --mainnet
                                                                      | --testnet-magic NATURAL
                                                                      ]
                                                                      --fee LOVELACE
                                                                      --out-file FILEPATH

  Create a simple signed transaction.

Usage: cardano-cli compatible conway governance 
                                                  ( action
                                                  | committee
                                                  | drep
                                                  | vote
                                                  )

  Governance commands.

Usage: cardano-cli compatible conway governance action 
                                                         ( create-constitution
                                                         | update-committee
                                                         | create-info
                                                         | create-no-confidence
                                                         | create-protocol-parameters-update
                                                         | create-treasury-withdrawal
                                                         | create-hardfork
                                                         | view
                                                         )

  Governance action commands.

Usage: cardano-cli compatible conway governance action create-constitution 
                                                                             ( --mainnet
                                                                             | --testnet
                                                                             )
                                                                             --governance-action-deposit NATURAL
                                                                             ( --deposit-return-stake-verification-key STRING
                                                                             | --deposit-return-stake-verification-key-file FILEPATH
                                                                             | --deposit-return-stake-key-hash HASH
                                                                             | --deposit-return-stake-script-file FILEPATH
                                                                             | --deposit-return-stake-address ADDRESS
                                                                             )
                                                                             [--prev-governance-action-tx-id TXID
                                                                               --prev-governance-action-index WORD16]
                                                                             --anchor-url TEXT
                                                                             --anchor-data-hash HASH
                                                                             [--check-anchor-data]
                                                                             --constitution-url TEXT
                                                                             --constitution-hash HASH
                                                                             [--check-constitution-hash]
                                                                             [--constitution-script-hash HASH]
                                                                             --out-file FILEPATH

  Create a constitution.

Usage: cardano-cli compatible conway governance action update-committee 
                                                                          ( --mainnet
                                                                          | --testnet
                                                                          )
                                                                          --governance-action-deposit NATURAL
                                                                          ( --deposit-return-stake-verification-key STRING
                                                                          | --deposit-return-stake-verification-key-file FILEPATH
                                                                          | --deposit-return-stake-key-hash HASH
                                                                          | --deposit-return-stake-script-file FILEPATH
                                                                          | --deposit-return-stake-address ADDRESS
                                                                          )
                                                                          --anchor-url TEXT
                                                                          --anchor-data-hash HASH
                                                                          [--check-anchor-data]
                                                                          [ --remove-cc-cold-verification-key STRING
                                                                          | --remove-cc-cold-verification-key-file FILEPATH
                                                                          | --remove-cc-cold-verification-key-hash STRING
                                                                          | --remove-cc-cold-script-hash HASH
                                                                          ]
                                                                          [
                                                                            ( --add-cc-cold-verification-key STRING
                                                                            | --add-cc-cold-verification-key-file FILEPATH
                                                                            | --add-cc-cold-verification-key-hash STRING
                                                                            | --add-cc-cold-script-hash HASH
                                                                            )
                                                                            --epoch NATURAL]
                                                                          --threshold RATIONAL
                                                                          [--prev-governance-action-tx-id TXID
                                                                            --prev-governance-action-index WORD16]
                                                                          --out-file FILEPATH

  Create or update a new committee proposal.

Usage: cardano-cli compatible conway governance action create-info 
                                                                     ( --mainnet
                                                                     | --testnet
                                                                     )
                                                                     --governance-action-deposit NATURAL
                                                                     ( --deposit-return-stake-verification-key STRING
                                                                     | --deposit-return-stake-verification-key-file FILEPATH
                                                                     | --deposit-return-stake-key-hash HASH
                                                                     | --deposit-return-stake-script-file FILEPATH
                                                                     | --deposit-return-stake-address ADDRESS
                                                                     )
                                                                     --anchor-url TEXT
                                                                     --anchor-data-hash HASH
                                                                     [--check-anchor-data]
                                                                     --out-file FILEPATH

  Create an info action.

Usage: cardano-cli compatible conway governance action create-no-confidence 
                                                                              ( --mainnet
                                                                              | --testnet
                                                                              )
                                                                              --governance-action-deposit NATURAL
                                                                              ( --deposit-return-stake-verification-key STRING
                                                                              | --deposit-return-stake-verification-key-file FILEPATH
                                                                              | --deposit-return-stake-key-hash HASH
                                                                              | --deposit-return-stake-script-file FILEPATH
                                                                              | --deposit-return-stake-address ADDRESS
                                                                              )
                                                                              --anchor-url TEXT
                                                                              --anchor-data-hash HASH
                                                                              [--check-anchor-data]
                                                                              [--prev-governance-action-tx-id TXID
                                                                                --prev-governance-action-index WORD16]
                                                                              --out-file FILEPATH

  Create a no confidence proposal.

Usage: cardano-cli compatible conway governance action create-protocol-parameters-update 
                                                                                           ( --mainnet
                                                                                           | --testnet
                                                                                           )
                                                                                           --governance-action-deposit NATURAL
                                                                                           ( --deposit-return-stake-verification-key STRING
                                                                                           | --deposit-return-stake-verification-key-file FILEPATH
                                                                                           | --deposit-return-stake-key-hash HASH
                                                                                           | --deposit-return-stake-script-file FILEPATH
                                                                                           | --deposit-return-stake-address ADDRESS
                                                                                           )
                                                                                           --anchor-url TEXT
                                                                                           --anchor-data-hash HASH
                                                                                           [--check-anchor-data]
                                                                                           [--prev-governance-action-tx-id TXID
                                                                                             --prev-governance-action-index WORD16]
                                                                                           [--constitution-script-hash HASH]
                                                                                           [--min-fee-linear LOVELACE]
                                                                                           [--min-fee-constant LOVELACE]
                                                                                           [--max-block-body-size WORD32]
                                                                                           [--max-tx-size WORD32]
                                                                                           [--max-block-header-size WORD16]
                                                                                           [--key-reg-deposit-amt NATURAL]
                                                                                           [--pool-reg-deposit NATURAL]
                                                                                           [--pool-retirement-epoch-interval WORD32]
                                                                                           [--number-of-pools NATURAL]
                                                                                           [--pool-influence RATIONAL]
                                                                                           [--treasury-expansion RATIONAL]
                                                                                           [--monetary-expansion RATIONAL]
                                                                                           [--min-pool-cost NATURAL]
                                                                                           [--price-execution-steps RATIONAL
                                                                                             --price-execution-memory RATIONAL]
                                                                                           [--max-tx-execution-units (INT, INT)]
                                                                                           [--max-block-execution-units (INT, INT)]
                                                                                           [--max-value-size INT]
                                                                                           [--collateral-percent INT]
                                                                                           [--max-collateral-inputs INT]
                                                                                           [--utxo-cost-per-byte LOVELACE]
                                                                                           [--pool-voting-threshold-motion-no-confidence RATIONAL
                                                                                             --pool-voting-threshold-committee-normal RATIONAL
                                                                                             --pool-voting-threshold-committee-no-confidence RATIONAL
                                                                                             --pool-voting-threshold-hard-fork-initiation RATIONAL
                                                                                             --pool-voting-threshold-pp-security-group RATIONAL]
                                                                                           [--drep-voting-threshold-motion-no-confidence RATIONAL
                                                                                             --drep-voting-threshold-committee-normal RATIONAL
                                                                                             --drep-voting-threshold-committee-no-confidence RATIONAL
                                                                                             --drep-voting-threshold-update-to-constitution RATIONAL
                                                                                             --drep-voting-threshold-hard-fork-initiation RATIONAL
                                                                                             --drep-voting-threshold-pp-network-group RATIONAL
                                                                                             --drep-voting-threshold-pp-economic-group RATIONAL
                                                                                             --drep-voting-threshold-pp-technical-group RATIONAL
                                                                                             --drep-voting-threshold-pp-governance-group RATIONAL
                                                                                             --drep-voting-threshold-treasury-withdrawal RATIONAL]
                                                                                           [--min-committee-size INT]
                                                                                           [--committee-term-length WORD32]
                                                                                           [--governance-action-lifetime WORD32]
                                                                                           [--new-governance-action-deposit NATURAL]
                                                                                           [--drep-deposit LOVELACE]
                                                                                           [--drep-activity WORD32]
                                                                                           [--ref-script-cost-per-byte RATIONAL]
                                                                                           [--cost-model-file FILE]
                                                                                           --out-file FILEPATH

  Create a protocol parameters update.

Usage: cardano-cli compatible conway governance action create-treasury-withdrawal 
                                                                                    ( --mainnet
                                                                                    | --testnet
                                                                                    )
                                                                                    --governance-action-deposit NATURAL
                                                                                    ( --deposit-return-stake-verification-key STRING
                                                                                    | --deposit-return-stake-verification-key-file FILEPATH
                                                                                    | --deposit-return-stake-key-hash HASH
                                                                                    | --deposit-return-stake-script-file FILEPATH
                                                                                    | --deposit-return-stake-address ADDRESS
                                                                                    )
                                                                                    --anchor-url TEXT
                                                                                    --anchor-data-hash HASH
                                                                                    [--check-anchor-data]
                                                                                    (
                                                                                      ( --funds-receiving-stake-verification-key STRING
                                                                                      | --funds-receiving-stake-verification-key-file FILEPATH
                                                                                      | --funds-receiving-stake-key-hash HASH
                                                                                      | --funds-receiving-stake-script-file FILEPATH
                                                                                      | --funds-receiving-stake-address ADDRESS
                                                                                      )
                                                                                      --transfer LOVELACE)
                                                                                    [--constitution-script-hash HASH]
                                                                                    --out-file FILEPATH

  Create a treasury withdrawal.

Usage: cardano-cli compatible conway governance action create-hardfork 
                                                                         ( --mainnet
                                                                         | --testnet
                                                                         )
                                                                         --governance-action-deposit NATURAL
                                                                         ( --deposit-return-stake-verification-key STRING
                                                                         | --deposit-return-stake-verification-key-file FILEPATH
                                                                         | --deposit-return-stake-key-hash HASH
                                                                         | --deposit-return-stake-script-file FILEPATH
                                                                         | --deposit-return-stake-address ADDRESS
                                                                         )
                                                                         [--prev-governance-action-tx-id TXID
                                                                           --prev-governance-action-index WORD16]
                                                                         --anchor-url TEXT
                                                                         --anchor-data-hash HASH
                                                                         [--check-anchor-data]
                                                                         --protocol-major-version MAJOR
                                                                         --protocol-minor-version MINOR
                                                                         --out-file FILEPATH

  Create a hardfork initiation proposal.

Usage: cardano-cli compatible conway governance action view --action-file FILEPATH
                                                              [ --output-json
                                                              | --output-yaml
                                                              ]
                                                              [--out-file FILEPATH]

  View a governance action.

Usage: cardano-cli compatible conway governance committee 
                                                            ( key-gen-cold
                                                            | key-gen-hot
                                                            | key-hash
                                                            | create-hot-key-authorization-certificate
                                                            | create-cold-key-resignation-certificate
                                                            )

  Committee member commands.

Usage: cardano-cli compatible conway governance committee key-gen-cold 
                                                                         --cold-verification-key-file FILEPATH
                                                                         --cold-signing-key-file FILEPATH

  Create a cold key pair for a Constitutional Committee Member

Usage: cardano-cli compatible conway governance committee key-gen-hot --verification-key-file FILEPATH
                                                                        --signing-key-file FILEPATH

  Create a hot key pair for a Constitutional Committee Member

Usage: cardano-cli compatible conway governance committee key-hash 
                                                                     ( --verification-key STRING
                                                                     | --verification-key-file FILEPATH
                                                                     )

  Print the identifier (hash) of a public key

Usage: cardano-cli compatible conway governance committee create-hot-key-authorization-certificate 
                                                                                                     ( --cold-verification-key STRING
                                                                                                     | --cold-verification-key-file FILEPATH
                                                                                                     | --cold-verification-key-hash STRING
                                                                                                     | --cold-script-hash HASH
                                                                                                     | --cold-script-file FILEPATH
                                                                                                     )
                                                                                                     ( --hot-verification-key STRING
                                                                                                     | --hot-verification-key-file FILEPATH
                                                                                                     | --hot-verification-key-hash STRING
                                                                                                     | --hot-script-hash HASH
                                                                                                     | --hot-script-file FILEPATH
                                                                                                     )
                                                                                                     --out-file FILEPATH

  Create hot key authorization certificate for a Constitutional Committee Member

Usage: cardano-cli compatible conway governance committee create-cold-key-resignation-certificate 
                                                                                                    ( --cold-verification-key STRING
                                                                                                    | --cold-verification-key-file FILEPATH
                                                                                                    | --cold-verification-key-hash STRING
                                                                                                    | --cold-script-hash HASH
                                                                                                    | --cold-script-file FILEPATH
                                                                                                    )
                                                                                                    [--resignation-metadata-url TEXT
                                                                                                      --resignation-metadata-hash HASH
                                                                                                      [--check-resignation-metadata-hash]]
                                                                                                    --out-file FILEPATH

  Create cold key resignation certificate for a Constitutional Committee Member

Usage: cardano-cli compatible conway governance drep 
                                                       ( key-gen
                                                       | id
                                                       | registration-certificate
                                                       | retirement-certificate
                                                       | update-certificate
                                                       | metadata-hash
                                                       )

  DRep member commands.

Usage: cardano-cli compatible conway governance drep key-gen --verification-key-file FILEPATH
                                                               --signing-key-file FILEPATH

  Generate Delegated Representative verification and signing keys.

Usage: cardano-cli compatible conway governance drep id 
                                                          ( --drep-verification-key STRING
                                                          | --drep-verification-key-file FILEPATH
                                                          )
                                                          [--output-format STRING]
                                                          [--out-file FILEPATH]

  Generate a drep id.

Usage: cardano-cli compatible conway governance drep registration-certificate 
                                                                                ( --drep-script-hash HASH
                                                                                | --drep-verification-key STRING
                                                                                | --drep-verification-key-file FILEPATH
                                                                                | --drep-key-hash HASH
                                                                                )
                                                                                --key-reg-deposit-amt NATURAL
                                                                                [--drep-metadata-url TEXT
                                                                                  --drep-metadata-hash HASH
                                                                                  [--check-drep-metadata-hash]]
                                                                                --out-file FILEPATH

  Create a registration certificate.

Usage: cardano-cli compatible conway governance drep retirement-certificate 
                                                                              ( --drep-script-hash HASH
                                                                              | --drep-verification-key STRING
                                                                              | --drep-verification-key-file FILEPATH
                                                                              | --drep-key-hash HASH
                                                                              )
                                                                              --deposit-amt LOVELACE
                                                                              --out-file FILEPATH

  Create a DRep retirement certificate.

Usage: cardano-cli compatible conway governance drep update-certificate 
                                                                          ( --drep-script-hash HASH
                                                                          | --drep-verification-key STRING
                                                                          | --drep-verification-key-file FILEPATH
                                                                          | --drep-key-hash HASH
                                                                          )
                                                                          [--drep-metadata-url TEXT
                                                                            --drep-metadata-hash HASH
                                                                            [--check-drep-metadata-hash]]
                                                                          --out-file FILEPATH

  Create a DRep update certificate.

Usage: cardano-cli compatible conway governance drep metadata-hash 
                                                                     ( --drep-metadata-file FILEPATH
                                                                     | --drep-metadata-url TEXT
                                                                     )
                                                                     [ --expected-hash HASH
                                                                     | --out-file FILEPATH
                                                                     ]

  Calculate the hash of a metadata file, optionally checking the obtained hash
  against an expected value.

Usage: cardano-cli compatible conway governance vote (create | view)

  Vote commands.

Usage: cardano-cli compatible conway governance vote create 
                                                              ( --yes
                                                              | --no
                                                              | --abstain
                                                              )
                                                              --governance-action-tx-id TXID
                                                              --governance-action-index WORD16
                                                              ( --drep-verification-key STRING
                                                              | --drep-verification-key-file FILEPATH
                                                              | --drep-key-hash HASH
                                                              | --drep-script-hash HASH
                                                              | --stake-pool-verification-key STRING
                                                              | --cold-verification-key-file FILEPATH
                                                              | --stake-pool-id STAKE_POOL_ID
                                                              | --cc-hot-verification-key STRING
                                                              | --cc-hot-verification-key-file FILEPATH
                                                              | --cc-hot-key-hash STRING
                                                              | --cc-hot-script-hash HASH
                                                              )
                                                              [--anchor-url TEXT
                                                                --anchor-data-hash HASH
                                                                [--check-anchor-data-hash]]
                                                              --out-file FILEPATH

  Vote creation.

Usage: cardano-cli compatible conway governance vote view 
                                                            [ --output-json
                                                            | --output-yaml
                                                            ]
                                                            --vote-file FILEPATH
                                                            [--out-file FILEPATH]

  Vote viewing.


Usage: cardano-cli compatible babbage transaction signed-transaction [--tx-in TX_IN]
                                                                     [--tx-out ADDRESS VALUE
                                                                       [--tx-out-datum-hash HASH |

                                                                         --tx-out-datum-hash-cbor-file CBOR_FILE |

                                                                         --tx-out-datum-hash-file JSON_FILE |

                                                                         --tx-out-datum-hash-value JSON_VALUE |

                                                                         --tx-out-datum-embed-cbor-file CBOR_FILE |

                                                                         --tx-out-datum-embed-file JSON_FILE |

                                                                         --tx-out-datum-embed-value JSON_VALUE |

                                                                         --tx-out-inline-datum-cbor-file CBOR_FILE |

                                                                         --tx-out-inline-datum-file JSON_FILE |

                                                                         --tx-out-inline-datum-value JSON_VALUE]]
                                                                     [--update-proposal-file FILEPATH]
                                                                     [--signing-key-file FILEPATH
                                                                       [--address STRING]]
                                                                     [--mainnet |

                                                                       --testnet-magic NATURAL]
                                                                     --fee LOVELACE
                                                                     [
                                                                       --certificate-file FILEPATH
                                                                       [--certificate-script-file FILEPATH
                                                                         [
                                                                           (--certificate-redeemer-cbor-file CBOR_FILE |

                                                                             --certificate-redeemer-file JSON_FILE |

                                                                             --certificate-redeemer-value JSON_VALUE)
                                                                           --certificate-execution-units (INT, INT)] |

                                                                         --certificate-tx-in-reference TX_IN
                                                                         (--certificate-plutus-script-v2 |

                                                                           --certificate-plutus-script-v3)
                                                                         (--certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE |

                                                                           --certificate-reference-tx-in-redeemer-file JSON_FILE |

                                                                           --certificate-reference-tx-in-redeemer-value JSON_VALUE)
                                                                         --certificate-reference-tx-in-execution-units (INT, INT)]]
                                                                     --out-file FILEPATH

  Create a simple signed transaction.

Available options:
  --tx-in TX_IN            TxId#TxIx
  --tx-out ADDRESS VALUE   The transaction output as ADDRESS VALUE where ADDRESS
                           is the Bech32-encoded address followed by the value
                           in the multi-asset syntax (including simply
                           Lovelace).
  --tx-out-datum-hash HASH The script datum hash for this tx output, as the raw
                           datum hash (in hex).
  --tx-out-datum-hash-cbor-file CBOR_FILE
                           The script datum hash for this tx output, by hashing
                           the script datum in the file. The file has to be in
                           CBOR format.
  --tx-out-datum-hash-file JSON_FILE
                           The script datum hash for this tx output, by hashing
                           the script datum in the file. The file must follow
                           the detailed JSON schema for script data.
  --tx-out-datum-hash-value JSON_VALUE
                           The script datum hash for this tx output, by hashing
                           the script datum given here. There is no schema:
                           (almost) any JSON value is supported, including
                           top-level strings and numbers.
  --tx-out-datum-embed-cbor-file CBOR_FILE
                           The script datum to embed in the tx for this output,
                           in the given file. The file has to be in CBOR format.
  --tx-out-datum-embed-file JSON_FILE
                           The script datum to embed in the tx for this output,
                           in the given file. The file must follow the detailed
                           JSON schema for script data.
  --tx-out-datum-embed-value JSON_VALUE
                           The script datum to embed in the tx for this output,
                           given here. There is no schema: (almost) any JSON
                           value is supported, including top-level strings and
                           numbers.
  --tx-out-inline-datum-cbor-file CBOR_FILE
                           The script datum to embed in the tx output as an
                           inline datum, in the given file. The file has to be
                           in CBOR format.
  --tx-out-inline-datum-file JSON_FILE
                           The script datum to embed in the tx output as an
                           inline datum, in the given file. The file must follow
                           the detailed JSON schema for script data.
  --tx-out-inline-datum-value JSON_VALUE
                           The script datum to embed in the tx output as an
                           inline datum, given here. There is no schema:
                           (almost) any JSON value is supported, including
                           top-level strings and numbers.
  --update-proposal-file FILEPATH
                           Filepath of the update proposal.
  --signing-key-file FILEPATH
                           Input filepath of the signing key (one or more).
  --address STRING         Byron address (Base58-encoded).
  --mainnet                Use the mainnet magic id. This overrides the
                           CARDANO_NODE_NETWORK_ID environment variable
  --testnet-magic NATURAL  Specify a testnet magic id. This overrides the
                           CARDANO_NODE_NETWORK_ID environment variable
  --fee LOVELACE           The fee amount in Lovelace.
  --certificate-file FILEPATH
                           Filepath of the certificate. This encompasses all
                           types of certificates (stake pool certificates, stake
                           key certificates etc). Optionally specify a script
                           witness.
  --certificate-script-file FILEPATH
                           The file containing the script to witness the use of
                           the certificate.
  --certificate-redeemer-cbor-file CBOR_FILE
                           The script redeemer file. The file has to be in CBOR
                           format.
  --certificate-redeemer-file JSON_FILE
                           The script redeemer file. The file must follow the
                           detailed JSON schema for script data.
  --certificate-redeemer-value JSON_VALUE
                           The script redeemer value. There is no schema:
                           (almost) any JSON value is supported, including
                           top-level strings and numbers.
  --certificate-execution-units (INT, INT)
                           The time and space units needed by the script.
  --certificate-tx-in-reference TX_IN
                           TxId#TxIx - Specify a reference input. The reference
                           input must have a plutus reference script attached.
  --certificate-plutus-script-v2
                           Specify a plutus script v2 reference script.
  --certificate-plutus-script-v3
                           Specify a plutus script v3 reference script.
  --certificate-reference-tx-in-redeemer-cbor-file CBOR_FILE
                           The script redeemer file. The file has to be in CBOR
                           format.
  --certificate-reference-tx-in-redeemer-file JSON_FILE
                           The script redeemer file. The file must follow the
                           detailed JSON schema for script data.
  --certificate-reference-tx-in-redeemer-value JSON_VALUE
                           The script redeemer value. There is no schema:
                           (almost) any JSON value is supported, including
                           top-level strings and numbers.
  --certificate-reference-tx-in-execution-units (INT, INT)
                           The time and space units needed by the script.
  --out-file FILEPATH      The output file.
  -h,--help                Show this help text
